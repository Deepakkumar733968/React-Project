{"ast":null,"code":"/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __rest } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport * as Classes from \"./classes\";\nimport { IconSize } from \"./iconTypes\";\nimport { uniqueId } from \"./jsUtils\";\n// eslint-disable-next-line prefer-arrow-callback\nexport var SVGIconContainer = React.forwardRef(function (props, ref) {\n  var children = props.children,\n    className = props.className,\n    color = props.color,\n    htmlTitle = props.htmlTitle,\n    iconName = props.iconName,\n    _a = props.size,\n    size = _a === void 0 ? IconSize.STANDARD : _a,\n    svgProps = props.svgProps,\n    _b = props.tagName,\n    tagName = _b === void 0 ? \"span\" : _b,\n    title = props.title,\n    htmlProps = __rest(props, [\"children\", \"className\", \"color\", \"htmlTitle\", \"iconName\", \"size\", \"svgProps\", \"tagName\", \"title\"]);\n  var isLarge = size >= IconSize.LARGE;\n  var pixelGridSize = isLarge ? IconSize.LARGE : IconSize.STANDARD;\n  var viewBox = \"0 0 \".concat(pixelGridSize, \" \").concat(pixelGridSize);\n  var titleId = uniqueId(\"iconTitle\");\n  var sharedSvgProps = __assign({\n    fill: color,\n    height: size,\n    role: \"img\",\n    viewBox: viewBox,\n    width: size\n  }, svgProps);\n  if (tagName === null) {\n    return React.createElement(\"svg\", __assign({\n      \"aria-labelledby\": title ? titleId : undefined,\n      \"data-icon\": iconName,\n      ref: ref\n    }, sharedSvgProps, htmlProps, {\n      className: classNames(className, svgProps === null || svgProps === void 0 ? void 0 : svgProps.className)\n    }), title && React.createElement(\"title\", {\n      id: titleId\n    }, title), children);\n  } else {\n    // N.B. styles for `Classes.ICON` are defined in @blueprintjs/core in `_icon.scss`\n    return React.createElement(tagName, __assign(__assign({\n      \"aria-hidden\": title ? undefined : true\n    }, htmlProps), {\n      className: classNames(Classes.ICON, \"\".concat(Classes.ICON, \"-\").concat(iconName), className),\n      ref: ref,\n      title: htmlTitle\n    }), React.createElement(\"svg\", __assign({\n      \"data-icon\": iconName\n    }, sharedSvgProps, {\n      className: svgProps === null || svgProps === void 0 ? void 0 : svgProps.className\n    }), title && React.createElement(\"title\", null, title), children));\n  }\n});\nSVGIconContainer.displayName = \"Blueprint5.SVGIconContainer\";","map":{"version":3,"names":["classNames","React","Classes","IconSize","uniqueId","SVGIconContainer","forwardRef","props","ref","children","className","color","htmlTitle","iconName","_a","size","STANDARD","svgProps","_b","tagName","title","htmlProps","__rest","isLarge","LARGE","pixelGridSize","viewBox","concat","titleId","sharedSvgProps","__assign","fill","height","role","width","createElement","undefined","id","ICON","displayName"],"sources":["C:\\Users\\deepa\\Deepak\\Working-File\\React-Project\\new-working-file\\React-Project\\my-app\\node_modules\\@blueprintjs\\icons\\src\\svgIconContainer.tsx"],"sourcesContent":["/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport classNames from \"classnames\";\nimport * as React from \"react\";\n\nimport * as Classes from \"./classes\";\nimport type { IconName } from \"./iconNames\";\nimport { IconSize } from \"./iconTypes\";\nimport { uniqueId } from \"./jsUtils\";\nimport type { SVGIconProps } from \"./svgIconProps\";\n\nexport type SVGIconContainerProps<T extends Element> = Omit<SVGIconProps<T>, \"children\"> & {\n    /**\n     * Icon name.\n     */\n    iconName: IconName;\n\n    /**\n     * Icon contents, loaded via `IconLoader` and specified as `<path>` elements.\n     */\n    children: React.JSX.Element | React.JSX.Element[];\n};\n\n/**\n * Generic icon container component type. This is essentially a type hack required to make forwardRef work with generic\n * components. Note that this slows down TypeScript compilation, but it better than the alternative of globally\n * augmenting \"@types/react\".\n *\n * @see https://stackoverflow.com/a/73795494/7406866\n */\nexport interface SVGIconContainerComponent extends React.FC<SVGIconContainerProps<Element>> {\n    /**\n     * ReturnType here preserves type compatability with React 16 while we migrate to React 18.\n     * see: https://github.com/palantir/blueprint/pull/7142/files#r1915691062\n     */\n    // TODO(React 18): Replace return type with `React.ReactNode` once we drop support for React 16.\n    <T extends Element = Element>(\n        props: SVGIconContainerProps<T>,\n    ): ReturnType<React.FC<SVGIconContainerProps<Element>>> | null;\n}\n\n// eslint-disable-next-line prefer-arrow-callback\nexport const SVGIconContainer: SVGIconContainerComponent = React.forwardRef(function <T extends Element>(\n    props: SVGIconContainerProps<T>,\n    ref: React.Ref<T>,\n) {\n    const {\n        children,\n        className,\n        color,\n        htmlTitle,\n        iconName,\n        size = IconSize.STANDARD,\n        svgProps,\n        tagName = \"span\",\n        title,\n        ...htmlProps\n    } = props;\n\n    const isLarge = size >= IconSize.LARGE;\n    const pixelGridSize = isLarge ? IconSize.LARGE : IconSize.STANDARD;\n    const viewBox = `0 0 ${pixelGridSize} ${pixelGridSize}`;\n    const titleId = uniqueId(\"iconTitle\");\n    const sharedSvgProps: React.SVGProps<SVGSVGElement> = {\n        fill: color,\n        height: size,\n        role: \"img\",\n        viewBox,\n        width: size,\n        ...svgProps,\n    };\n\n    if (tagName === null) {\n        return (\n            <svg\n                aria-labelledby={title ? titleId : undefined}\n                data-icon={iconName}\n                ref={ref as React.Ref<SVGSVGElement>}\n                {...sharedSvgProps}\n                {...htmlProps}\n                className={classNames(className, svgProps?.className)}\n            >\n                {title && <title id={titleId}>{title}</title>}\n                {children}\n            </svg>\n        );\n    } else {\n        // N.B. styles for `Classes.ICON` are defined in @blueprintjs/core in `_icon.scss`\n        return React.createElement(\n            tagName,\n            {\n                \"aria-hidden\": title ? undefined : true,\n                ...htmlProps,\n                className: classNames(Classes.ICON, `${Classes.ICON}-${iconName}`, className),\n                ref,\n                title: htmlTitle,\n            },\n            <svg data-icon={iconName} {...sharedSvgProps} className={svgProps?.className}>\n                {title && <title>{title}</title>}\n                {children}\n            </svg>,\n        );\n    }\n});\nSVGIconContainer.displayName = \"Blueprint5.SVGIconContainer\";\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}