{"ast":null,"code":"/*\n * Copyright 2024 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React from \"react\";\nimport { Classes } from \"../../common\";\nimport { OVERLAY2_REQUIRES_OVERLAY_PROVDER } from \"../../common/errors\";\nimport { isNodeEnv } from \"../../common/utils\";\nimport { OverlaysContext } from \"../../context/overlays/overlaysProvider\";\nimport { useLegacyOverlayStack } from \"./useLegacyOverlayStack\";\n/**\n * React hook to interact with the global overlay stack.\n *\n * @see https://blueprintjs.com/docs/#core/hooks/use-overlay-stack\n */\nexport function useOverlayStack() {\n  // get the overlay stack from application-wide React context\n  var _a = React.useContext(OverlaysContext),\n    stack = _a.stack,\n    hasProvider = _a.hasProvider;\n  var legacyOverlayStack = useLegacyOverlayStack();\n  var getLastOpened = React.useCallback(function () {\n    return stack.current[stack.current.length - 1];\n  }, [stack]);\n  var getThisOverlayAndDescendants = React.useCallback(function (id) {\n    var index = stack.current.findIndex(function (o) {\n      return o.id === id;\n    });\n    if (index === -1) {\n      return [];\n    }\n    return stack.current.slice(index);\n  }, [stack]);\n  var resetStack = React.useCallback(function () {\n    stack.current = [];\n  }, [stack]);\n  var openOverlay = React.useCallback(function (overlay) {\n    stack.current.push(overlay);\n    if (overlay.props.usePortal && overlay.props.hasBackdrop) {\n      // add a class to the body to prevent scrolling of content below the overlay\n      document.body.classList.add(Classes.OVERLAY_OPEN);\n    }\n  }, [stack]);\n  var closeOverlay = React.useCallback(function (id) {\n    var otherOverlaysWithBackdrop = stack.current.filter(function (o) {\n      return o.props.usePortal && o.props.hasBackdrop && o.id !== id;\n    });\n    var index = stack.current.findIndex(function (o) {\n      return o.id === id;\n    });\n    if (index > -1) {\n      stack.current.splice(index, 1);\n    }\n    if (otherOverlaysWithBackdrop.length === 0) {\n      // remove body class which prevents scrolling of content below overlay\n      document.body.classList.remove(Classes.OVERLAY_OPEN);\n    }\n  }, [stack]);\n  if (!hasProvider) {\n    if (isNodeEnv(\"development\")) {\n      console.error(OVERLAY2_REQUIRES_OVERLAY_PROVDER);\n    }\n    return legacyOverlayStack;\n  }\n  return {\n    closeOverlay: closeOverlay,\n    getLastOpened: getLastOpened,\n    getThisOverlayAndDescendants: getThisOverlayAndDescendants,\n    openOverlay: openOverlay,\n    resetStack: resetStack\n  };\n}","map":{"version":3,"names":["React","Classes","OVERLAY2_REQUIRES_OVERLAY_PROVDER","isNodeEnv","OverlaysContext","useLegacyOverlayStack","useOverlayStack","_a","useContext","stack","hasProvider","legacyOverlayStack","getLastOpened","useCallback","current","length","getThisOverlayAndDescendants","id","index","findIndex","o","slice","resetStack","openOverlay","overlay","push","props","usePortal","hasBackdrop","document","body","classList","add","OVERLAY_OPEN","closeOverlay","otherOverlaysWithBackdrop","filter","splice","remove","console","error"],"sources":["C:\\Users\\deepa\\Deepak\\Working-File\\React-Project\\new-working-file\\React-Project\\my-app\\node_modules\\@blueprintjs\\core\\src\\hooks\\overlays\\useOverlayStack.ts"],"sourcesContent":["/*\n * Copyright 2024 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\n\nimport { Classes } from \"../../common\";\nimport { OVERLAY2_REQUIRES_OVERLAY_PROVDER } from \"../../common/errors\";\nimport { isNodeEnv } from \"../../common/utils\";\nimport type { OverlayInstance } from \"../../components\";\nimport { OverlaysContext } from \"../../context/overlays/overlaysProvider\";\n\nimport { useLegacyOverlayStack } from \"./useLegacyOverlayStack\";\n\nexport interface UseOverlayStackReturnValue {\n    /**\n     * Removes an existing overlay off the stack.\n     *\n     * N.B. This method accepts an id instead of an overlay instance because the latter may be\n     * null when an overlay is unmounting, and we may stil have some cleanup to do at that time.\n     * Also, this method is not idempotent: if the overlay is not found on the stack, nothing happens.\n     *\n     * @param id identifier of the overlay to be closed\n     */\n    closeOverlay: (id: string) => void;\n\n    /**\n     * @returns the last opened overlay on the stack\n     */\n    getLastOpened: () => OverlayInstance | undefined;\n\n    /**\n     * @param id current overlay identifier\n     * @returns a list of the current overlay and all overlays which are descendants of it.\n     */\n    getThisOverlayAndDescendants: (id: string) => OverlayInstance[];\n\n    /**\n     * Pushes a new overlay onto the stack.\n     */\n    openOverlay: (overlay: OverlayInstance) => void;\n\n    /**\n     * Resets the overlay stack, to be called after all overlays are closed.\n     * Warning: this should only be used in unit tests.\n     */\n    resetStack: () => void;\n}\n\n/**\n * React hook to interact with the global overlay stack.\n *\n * @see https://blueprintjs.com/docs/#core/hooks/use-overlay-stack\n */\nexport function useOverlayStack(): UseOverlayStackReturnValue {\n    // get the overlay stack from application-wide React context\n    const { stack, hasProvider } = React.useContext(OverlaysContext);\n    const legacyOverlayStack = useLegacyOverlayStack();\n\n    const getLastOpened = React.useCallback(() => {\n        return stack.current[stack.current.length - 1];\n    }, [stack]);\n\n    const getThisOverlayAndDescendants = React.useCallback(\n        (id: string) => {\n            const index = stack.current.findIndex(o => o.id === id);\n            if (index === -1) {\n                return [];\n            }\n            return stack.current.slice(index);\n        },\n        [stack],\n    );\n\n    const resetStack = React.useCallback(() => {\n        stack.current = [];\n    }, [stack]);\n\n    const openOverlay = React.useCallback(\n        (overlay: OverlayInstance) => {\n            stack.current.push(overlay);\n            if (overlay.props.usePortal && overlay.props.hasBackdrop) {\n                // add a class to the body to prevent scrolling of content below the overlay\n                document.body.classList.add(Classes.OVERLAY_OPEN);\n            }\n        },\n        [stack],\n    );\n\n    const closeOverlay = React.useCallback(\n        (id: string) => {\n            const otherOverlaysWithBackdrop = stack.current.filter(\n                o => o.props.usePortal && o.props.hasBackdrop && o.id !== id,\n            );\n\n            const index = stack.current.findIndex(o => o.id === id);\n            if (index > -1) {\n                stack.current.splice(index, 1);\n            }\n\n            if (otherOverlaysWithBackdrop.length === 0) {\n                // remove body class which prevents scrolling of content below overlay\n                document.body.classList.remove(Classes.OVERLAY_OPEN);\n            }\n        },\n        [stack],\n    );\n\n    if (!hasProvider) {\n        if (isNodeEnv(\"development\")) {\n            console.error(OVERLAY2_REQUIRES_OVERLAY_PROVDER);\n        }\n        return legacyOverlayStack;\n    }\n\n    return {\n        closeOverlay,\n        getLastOpened,\n        getThisOverlayAndDescendants,\n        openOverlay,\n        resetStack,\n    };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}