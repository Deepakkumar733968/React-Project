{"ast":null,"code":"/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __rest } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { ChevronDown, ChevronUp } from \"@blueprintjs/icons\";\nimport { Classes, Elevation, Utils } from \"../../common\";\nimport { DISPLAYNAME_PREFIX } from \"../../common/props\";\nimport { clickElementOnKeyPress, uniqueId } from \"../../common/utils\";\nimport { Card } from \"../card/card\";\nimport { Collapse } from \"../collapse/collapse\";\nimport { H6 } from \"../html/html\";\nimport { Icon } from \"../icon/icon\";\n/**\n * Section component.\n *\n * @see https://blueprintjs.com/docs/#core/components/section\n */\nexport var Section = React.forwardRef(function (props, ref) {\n  var _a, _b;\n  var _c;\n  var children = props.children,\n    className = props.className,\n    collapseProps = props.collapseProps,\n    collapsible = props.collapsible,\n    _d = props.compact,\n    compact = _d === void 0 ? false : _d,\n    _e = props.elevation,\n    elevation = _e === void 0 ? Elevation.ZERO : _e,\n    icon = props.icon,\n    rightElement = props.rightElement,\n    subtitle = props.subtitle,\n    title = props.title,\n    _f = props.titleRenderer,\n    titleRenderer = _f === void 0 ? H6 : _f,\n    htmlProps = __rest(props, [\"children\", \"className\", \"collapseProps\", \"collapsible\", \"compact\", \"elevation\", \"icon\", \"rightElement\", \"subtitle\", \"title\", \"titleRenderer\"]);\n  // Determine whether to use controlled or uncontrolled state.\n  var isControlled = (collapseProps === null || collapseProps === void 0 ? void 0 : collapseProps.isOpen) != null;\n  // The initial useState value is negated in order to conform to the `isCollapsed` expectation.\n  var _g = React.useState(!((_c = collapseProps === null || collapseProps === void 0 ? void 0 : collapseProps.defaultIsOpen) !== null && _c !== void 0 ? _c : true)),\n    isCollapsedUncontrolled = _g[0],\n    setIsCollapsed = _g[1];\n  var isCollapsed = isControlled ? !(collapseProps === null || collapseProps === void 0 ? void 0 : collapseProps.isOpen) : isCollapsedUncontrolled;\n  var toggleIsCollapsed = React.useCallback(function () {\n    var _a;\n    if (isControlled) {\n      (_a = collapseProps === null || collapseProps === void 0 ? void 0 : collapseProps.onToggle) === null || _a === void 0 ? void 0 : _a.call(collapseProps);\n    } else {\n      setIsCollapsed(!isCollapsed);\n    }\n  }, [collapseProps, isCollapsed, isControlled]);\n  var isHeaderRightContainerVisible = rightElement != null || collapsible;\n  var sectionId = uniqueId(\"section\");\n  var sectionTitleId = title ? uniqueId(\"section-title\") : undefined;\n  return React.createElement(Card, __assign({\n    className: classNames(className, Classes.SECTION, (_a = {}, _a[Classes.COMPACT] = compact, _a[Classes.SECTION_COLLAPSED] = collapsible && isCollapsed || Utils.isReactNodeEmpty(children), _a)),\n    elevation: elevation,\n    ref: ref,\n    \"aria-labelledby\": sectionTitleId\n  }, htmlProps, {\n    id: sectionId\n  }), title && React.createElement(\"div\", {\n    className: classNames(Classes.SECTION_HEADER, (_b = {}, _b[Classes.INTERACTIVE] = collapsible, _b)),\n    onClick: collapsible ? toggleIsCollapsed : undefined\n  }, React.createElement(\"div\", {\n    className: Classes.SECTION_HEADER_LEFT\n  }, icon && React.createElement(Icon, {\n    icon: icon,\n    \"aria-hidden\": true,\n    tabIndex: -1,\n    className: Classes.TEXT_MUTED\n  }), React.createElement(\"div\", null, React.createElement(titleRenderer, {\n    className: Classes.SECTION_HEADER_TITLE,\n    id: sectionTitleId\n  }, title), subtitle && React.createElement(\"div\", {\n    className: classNames(Classes.TEXT_MUTED, Classes.SECTION_HEADER_SUB_TITLE)\n  }, subtitle))), isHeaderRightContainerVisible && React.createElement(\"div\", {\n    className: Classes.SECTION_HEADER_RIGHT\n  }, rightElement, collapsible && React.createElement(\"span\", {\n    role: \"button\",\n    tabIndex: 0,\n    \"aria-pressed\": isCollapsed,\n    \"aria-expanded\": isCollapsed,\n    \"aria-controls\": sectionId,\n    \"aria-label\": isCollapsed ? \"expand section\" : \"collapse section\",\n    // no OnClick, click event triggers header below\n    onKeyDown: clickElementOnKeyPress([\"Enter\", \" \"]),\n    className: classNames(Classes.TEXT_MUTED, Classes.SECTION_HEADER_COLLAPSE_CARET)\n  }, isCollapsed ? React.createElement(ChevronDown, null) : React.createElement(ChevronUp, null)))), collapsible ? React.createElement(Collapse, __assign({}, collapseProps, {\n    isOpen: !isCollapsed\n  }), children) : children);\n});\nSection.displayName = \"\".concat(DISPLAYNAME_PREFIX, \".Section\");","map":{"version":3,"names":["classNames","React","ChevronDown","ChevronUp","Classes","Elevation","Utils","DISPLAYNAME_PREFIX","clickElementOnKeyPress","uniqueId","Card","Collapse","H6","Icon","Section","forwardRef","props","ref","children","className","collapseProps","collapsible","_d","compact","_e","elevation","ZERO","icon","rightElement","subtitle","title","_f","titleRenderer","htmlProps","__rest","isControlled","isOpen","_g","useState","_c","defaultIsOpen","isCollapsedUncontrolled","setIsCollapsed","isCollapsed","toggleIsCollapsed","useCallback","_a","onToggle","call","isHeaderRightContainerVisible","sectionId","sectionTitleId","undefined","createElement","__assign","SECTION","COMPACT","SECTION_COLLAPSED","isReactNodeEmpty","id","SECTION_HEADER","_b","INTERACTIVE","onClick","SECTION_HEADER_LEFT","tabIndex","TEXT_MUTED","SECTION_HEADER_TITLE","SECTION_HEADER_SUB_TITLE","SECTION_HEADER_RIGHT","role","onKeyDown","SECTION_HEADER_COLLAPSE_CARET","displayName","concat"],"sources":["C:\\Users\\deepa\\Deepak\\Working-File\\React-Project\\new-working-file\\React-Project\\my-app\\node_modules\\@blueprintjs\\core\\src\\components\\section\\section.tsx"],"sourcesContent":["/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport classNames from \"classnames\";\nimport * as React from \"react\";\n\nimport { ChevronDown, ChevronUp, type IconName } from \"@blueprintjs/icons\";\n\nimport { Classes, Elevation, Utils } from \"../../common\";\nimport { DISPLAYNAME_PREFIX, type HTMLDivProps, type MaybeElement, type Props } from \"../../common/props\";\nimport { clickElementOnKeyPress, uniqueId } from \"../../common/utils\";\nimport { Card } from \"../card/card\";\nimport { Collapse, type CollapseProps } from \"../collapse/collapse\";\nimport { H6 } from \"../html/html\";\nimport { Icon } from \"../icon/icon\";\n\n/**\n * Subset of {@link Elevation} options which are visually supported by the {@link Section} component.\n *\n * Note that an elevation greater than 1 creates too much visual clutter/noise in the UI, especially when\n * multiple Sections are shown on a single page.\n */\nexport type SectionElevation = typeof Elevation.ZERO | typeof Elevation.ONE;\n\nexport interface SectionCollapseProps\n    extends Pick<CollapseProps, \"className\" | \"isOpen\" | \"keepChildrenMounted\" | \"transitionDuration\"> {\n    /**\n     * Whether the component is initially open or closed.\n     *\n     * This prop has no effect if `collapsible={false}` or the component is in controlled mode,\n     * i.e. when `isOpen` is **not** `undefined`.\n     *\n     * @default true\n     */\n    defaultIsOpen?: boolean;\n\n    /**\n     * Whether the component is open or closed.\n     *\n     * Passing a boolean value to `isOpen` will enabled controlled mode for the component.\n     */\n    isOpen?: boolean;\n\n    /**\n     * Callback invoked in controlled mode when the collapse toggle element is clicked.\n     */\n    onToggle?: () => void;\n}\n\nexport interface SectionProps extends Props, Omit<HTMLDivProps, \"title\">, React.RefAttributes<HTMLDivElement> {\n    /**\n     * Whether this section's contents should be collapsible.\n     *\n     * @default false\n     */\n    collapsible?: boolean;\n\n    /**\n     * Subset of props to forward to the underlying {@link Collapse} component, with the addition of a\n     * `defaultIsOpen` option which sets the default open state of the component when in uncontrolled mode.\n     */\n    collapseProps?: SectionCollapseProps;\n\n    /**\n     * Whether this section should use compact styles.\n     *\n     * @default false\n     */\n    compact?: boolean;\n\n    /**\n     * Visual elevation of this container element.\n     *\n     * @default Elevation.ZERO\n     */\n    elevation?: SectionElevation;\n\n    /**\n     * Name of a Blueprint UI icon (or an icon element) to render in the section's header.\n     * Note that the header will only be rendered if `title` is provided.\n     */\n    icon?: IconName | MaybeElement;\n\n    /**\n     * Element to render on the right side of the section header.\n     * Note that the header will only be rendered if `title` is provided.\n     */\n    rightElement?: React.JSX.Element;\n\n    /**\n     * Sub-title of the section.\n     * Note that the header will only be rendered if `title` is provided.\n     */\n    subtitle?: React.JSX.Element | string;\n\n    /**\n     * Title of the section.\n     * Note that the header will only be rendered if `title` is provided.\n     */\n    title?: React.JSX.Element | string;\n\n    /**\n     * Optional title renderer function. If provided, it is recommended to include a Blueprint `<H6>` element\n     * as part of the title. The render function is supplied with `className` and `id` attributes which you must\n     * forward to the DOM. The `title` prop is also passed along to this renderer via `props.children`.\n     *\n     * @default H6\n     */\n    titleRenderer?: React.FC<React.HTMLAttributes<HTMLElement>>;\n}\n\n/**\n * Section component.\n *\n * @see https://blueprintjs.com/docs/#core/components/section\n */\nexport const Section: React.FC<SectionProps> = React.forwardRef((props, ref) => {\n    const {\n        children,\n        className,\n        collapseProps,\n        collapsible,\n        compact = false,\n        elevation = Elevation.ZERO,\n        icon,\n        rightElement,\n        subtitle,\n        title,\n        titleRenderer = H6,\n        ...htmlProps\n    } = props;\n    // Determine whether to use controlled or uncontrolled state.\n    const isControlled = collapseProps?.isOpen != null;\n\n    // The initial useState value is negated in order to conform to the `isCollapsed` expectation.\n    const [isCollapsedUncontrolled, setIsCollapsed] = React.useState<boolean>(!(collapseProps?.defaultIsOpen ?? true));\n\n    const isCollapsed = isControlled ? !collapseProps?.isOpen : isCollapsedUncontrolled;\n\n    const toggleIsCollapsed = React.useCallback(() => {\n        if (isControlled) {\n            collapseProps?.onToggle?.();\n        } else {\n            setIsCollapsed(!isCollapsed);\n        }\n    }, [collapseProps, isCollapsed, isControlled]);\n\n    const isHeaderRightContainerVisible = rightElement != null || collapsible;\n\n    const sectionId = uniqueId(\"section\");\n    const sectionTitleId = title ? uniqueId(\"section-title\") : undefined;\n\n    return (\n        <Card\n            className={classNames(className, Classes.SECTION, {\n                [Classes.COMPACT]: compact,\n                [Classes.SECTION_COLLAPSED]: (collapsible && isCollapsed) || Utils.isReactNodeEmpty(children),\n            })}\n            elevation={elevation}\n            ref={ref}\n            aria-labelledby={sectionTitleId}\n            {...htmlProps}\n            id={sectionId}\n        >\n            {title && (\n                <div\n                    className={classNames(Classes.SECTION_HEADER, {\n                        [Classes.INTERACTIVE]: collapsible,\n                    })}\n                    onClick={collapsible ? toggleIsCollapsed : undefined}\n                >\n                    <div className={Classes.SECTION_HEADER_LEFT}>\n                        {icon && <Icon icon={icon} aria-hidden={true} tabIndex={-1} className={Classes.TEXT_MUTED} />}\n                        <div>\n                            {React.createElement(\n                                titleRenderer,\n                                { className: Classes.SECTION_HEADER_TITLE, id: sectionTitleId },\n                                title,\n                            )}\n                            {subtitle && (\n                                <div className={classNames(Classes.TEXT_MUTED, Classes.SECTION_HEADER_SUB_TITLE)}>\n                                    {subtitle}\n                                </div>\n                            )}\n                        </div>\n                    </div>\n                    {isHeaderRightContainerVisible && (\n                        <div className={Classes.SECTION_HEADER_RIGHT}>\n                            {rightElement}\n                            {collapsible && (\n                                <span\n                                    role=\"button\"\n                                    tabIndex={0}\n                                    aria-pressed={isCollapsed}\n                                    aria-expanded={isCollapsed}\n                                    aria-controls={sectionId}\n                                    aria-label={isCollapsed ? \"expand section\" : \"collapse section\"}\n                                    // no OnClick, click event triggers header below\n                                    onKeyDown={clickElementOnKeyPress([\"Enter\", \" \"])}\n                                    className={classNames(Classes.TEXT_MUTED, Classes.SECTION_HEADER_COLLAPSE_CARET)}\n                                >\n                                    {isCollapsed ? <ChevronDown /> : <ChevronUp />}\n                                </span>\n                            )}\n                        </div>\n                    )}\n                </div>\n            )}\n\n            {collapsible ? (\n                <Collapse {...collapseProps} isOpen={!isCollapsed}>\n                    {children}\n                </Collapse>\n            ) : (\n                children\n            )}\n        </Card>\n    );\n});\nSection.displayName = `${DISPLAYNAME_PREFIX}.Section`;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}