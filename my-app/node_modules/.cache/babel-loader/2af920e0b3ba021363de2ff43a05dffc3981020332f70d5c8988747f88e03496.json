{"ast":null,"code":"/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __rest } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { Alignment, Classes } from \"../../common\";\nimport { DISPLAYNAME_PREFIX } from \"../../common/props\";\nimport { Card } from \"../card/card\";\nimport { Checkbox, Radio, Switch } from \"../forms/controls\";\nimport { useCheckedControl } from \"./useCheckedControl\";\n/**\n * ControlCard component, used to render a {@link Card} with a form control.\n *\n * @internal\n */\nexport var ControlCard = React.forwardRef(function (props, ref) {\n  var _a;\n  var _b = props.alignIndicator,\n    alignIndicator = _b === void 0 ? Alignment.END : _b,\n    _checked = props.checked,\n    children = props.children,\n    className = props.className,\n    controlKind = props.controlKind,\n    _defaultChecked = props.defaultChecked,\n    disabled = props.disabled,\n    inputProps = props.inputProps,\n    inputRef = props.inputRef,\n    label = props.label,\n    _onChange = props.onChange,\n    _c = props.showAsSelectedWhenChecked,\n    showAsSelectedWhenChecked = _c === void 0 ? true : _c,\n    value = props.value,\n    cardProps = __rest(props, [\"alignIndicator\", \"checked\", \"children\", \"className\", \"controlKind\", \"defaultChecked\", \"disabled\", \"inputProps\", \"inputRef\", \"label\", \"onChange\", \"showAsSelectedWhenChecked\", \"value\"]);\n  var _d = useCheckedControl(props),\n    checked = _d.checked,\n    onChange = _d.onChange;\n  // use a container element to achieve a good flex layout\n  var labelElement = React.createElement(\"div\", {\n    className: Classes.CONTROL_CARD_LABEL\n  }, children !== null && children !== void 0 ? children : label);\n  var controlProps = __assign({\n    alignIndicator: alignIndicator,\n    checked: checked,\n    disabled: disabled,\n    inline: true,\n    inputRef: inputRef,\n    labelElement: labelElement,\n    onChange: onChange,\n    value: value\n  }, inputProps);\n  var classes = classNames(Classes.CONTROL_CARD, className, (_a = {}, _a[Classes.SELECTED] = showAsSelectedWhenChecked && checked, _a));\n  return React.createElement(Card, __assign({\n    interactive: !disabled,\n    className: classes,\n    ref: ref\n  }, cardProps), controlKind === \"switch\" ? React.createElement(Switch, __assign({}, controlProps)) : controlKind === \"checkbox\" ? React.createElement(Checkbox, __assign({}, controlProps)) : controlKind === \"radio\" ? React.createElement(Radio, __assign({}, controlProps)) : labelElement);\n});\nControlCard.displayName = \"\".concat(DISPLAYNAME_PREFIX, \".ControlCard\");","map":{"version":3,"names":["classNames","React","Alignment","Classes","DISPLAYNAME_PREFIX","Card","Checkbox","Radio","Switch","useCheckedControl","ControlCard","forwardRef","props","ref","_b","alignIndicator","END","_checked","checked","children","className","controlKind","_defaultChecked","defaultChecked","disabled","inputProps","inputRef","label","_onChange","onChange","_c","showAsSelectedWhenChecked","value","cardProps","__rest","_d","labelElement","createElement","CONTROL_CARD_LABEL","controlProps","__assign","inline","classes","CONTROL_CARD","_a","SELECTED","interactive","displayName","concat"],"sources":["C:\\Users\\deepa\\Deepak\\Working-File\\React-Project\\new-working-file\\React-Project\\my-app\\node_modules\\@blueprintjs\\core\\src\\components\\control-card\\controlCard.tsx"],"sourcesContent":["/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport classNames from \"classnames\";\nimport * as React from \"react\";\n\nimport { Alignment, Classes } from \"../../common\";\nimport { DISPLAYNAME_PREFIX, type HTMLInputProps } from \"../../common/props\";\nimport { Card, type CardProps } from \"../card/card\";\nimport type { CheckedControlProps, ControlProps } from \"../forms/controlProps\";\nimport { Checkbox, Radio, Switch } from \"../forms/controls\";\n\nimport { useCheckedControl } from \"./useCheckedControl\";\n\nexport type ControlKind = \"switch\" | \"checkbox\" | \"radio\";\n\n/**\n * Subset of {@link CardProps} which can be used to adjust its behavior.\n */\ntype SupportedCardProps = Omit<CardProps, \"interactive\" | \"onChange\">;\n\n/**\n * Subset of {@link ControlProps} which can be used to adjust its behavior.\n */\ntype SupportedControlProps = Pick<\n    ControlProps,\n    keyof CheckedControlProps | \"alignIndicator\" | \"disabled\" | \"inputRef\" | \"label\" | \"value\"\n>;\n\n/**\n * Shared props interface for all control card components, including `CheckboxCard`, `RadioCard`, and `SwitchCard`.\n * The label content may be specified as either `label` or `children`, but not both.\n */\nexport interface ControlCardProps extends SupportedCardProps, SupportedControlProps {\n    /**\n     * Which kind of form control to render inside the card.\n     */\n    controlKind: ControlKind;\n\n    // N.B. this is split out of the root properties in the inerface because it would conflict with CardProps' HTMLDivProps\n    /**\n     * HTML input attributes to forward to the control `<input>` element.\n     */\n    inputProps?: Omit<HTMLInputProps, \"size\">;\n\n    /**\n     * Whether the component should use \"selected\" Card styling when checked.\n     *\n     * @default true\n     */\n    showAsSelectedWhenChecked?: boolean;\n}\n\n/**\n * ControlCard component, used to render a {@link Card} with a form control.\n *\n * @internal\n */\nexport const ControlCard: React.FC<ControlCardProps> = React.forwardRef((props, ref) => {\n    const {\n        alignIndicator = Alignment.END,\n        checked: _checked,\n        children,\n        className,\n        controlKind,\n        defaultChecked: _defaultChecked,\n        disabled,\n        inputProps,\n        inputRef,\n        label,\n        onChange: _onChange,\n        showAsSelectedWhenChecked = true,\n        value,\n        ...cardProps\n    } = props;\n\n    const { checked, onChange } = useCheckedControl(props);\n\n    // use a container element to achieve a good flex layout\n    const labelElement = <div className={Classes.CONTROL_CARD_LABEL}>{children ?? label}</div>;\n    const controlProps: ControlProps = {\n        alignIndicator,\n        checked,\n        disabled,\n        inline: true,\n        inputRef,\n        labelElement,\n        onChange,\n        value,\n        ...inputProps,\n    };\n    const classes = classNames(Classes.CONTROL_CARD, className, {\n        [Classes.SELECTED]: showAsSelectedWhenChecked && checked,\n    });\n\n    return (\n        <Card interactive={!disabled} className={classes} ref={ref} {...cardProps}>\n            {controlKind === \"switch\" ? (\n                <Switch {...controlProps} />\n            ) : controlKind === \"checkbox\" ? (\n                <Checkbox {...controlProps} />\n            ) : controlKind === \"radio\" ? (\n                <Radio {...controlProps} />\n            ) : (\n                labelElement\n            )}\n        </Card>\n    );\n});\nControlCard.displayName = `${DISPLAYNAME_PREFIX}.ControlCard`;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}