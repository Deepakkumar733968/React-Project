{"ast":null,"code":"/*\n * Copyright 2021 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __extends, __spreadArray } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport { AbstractPureComponent, Classes, Position } from \"../../common\";\nimport { TOASTER_CREATE_ASYNC_NULL, TOASTER_CREATE_NULL, TOASTER_MAX_TOASTS_INVALID, TOASTER_WARN_INLINE } from \"../../common/errors\";\nimport { DISPLAYNAME_PREFIX } from \"../../common/props\";\nimport { isElementOfType, isNodeEnv } from \"../../common/utils\";\nimport { Overlay2 } from \"../overlay2/overlay2\";\nimport { Toast } from \"./toast\";\nimport { Toast2 } from \"./toast2\";\nexport var OVERLAY_TOASTER_DELAY_MS = 50;\n/**\n * OverlayToaster component.\n *\n * @see https://blueprintjs.com/docs/#core/components/toast\n */\nvar OverlayToaster = /** @class */function (_super) {\n  __extends(OverlayToaster, _super);\n  function OverlayToaster() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.state = {\n      toastRefs: {},\n      toasts: []\n    };\n    // Queue of toasts to be displayed. If toasts are shown too quickly back to back, it can result in cut off toasts.\n    // The queue ensures that toasts are only displayed in QUEUE_TIMEOUT_MS increments.\n    _this.queue = {\n      cancel: undefined,\n      isRunning: false,\n      toasts: []\n    };\n    // auto-incrementing identifier for un-keyed toasts\n    _this.toastId = 0;\n    _this.toastRefs = {};\n    /** Compute a new collection of toast refs (usually after updating toasts) */\n    _this.getToastRefs = function (toasts) {\n      return toasts.reduce(function (refs, toast) {\n        refs[toast.key] = React.createRef();\n        return refs;\n      }, {});\n    };\n    _this.handleQueueTimeout = function () {\n      var nextToast = _this.queue.toasts.shift();\n      if (nextToast != null) {\n        _this.immediatelyShowToast(nextToast);\n        _this.startQueueTimeout();\n      } else {\n        _this.queue.isRunning = false;\n      }\n    };\n    _this.renderToast = function (toast) {\n      return React.createElement(Toast2, __assign({}, toast, {\n        onDismiss: _this.getDismissHandler(toast)\n      }));\n    };\n    _this.getDismissHandler = function (toast) {\n      return function (timeoutExpired) {\n        _this.dismiss(toast.key, timeoutExpired);\n      };\n    };\n    _this.handleClose = function (e) {\n      // NOTE that `e` isn't always a KeyboardEvent but that's the only type we care about\n      if (e.key === \"Escape\") {\n        _this.clear();\n      }\n    };\n    return _this;\n  }\n  /**\n   * Create a new `Toaster` instance that can be shared around your application.\n   * The `Toaster` will be rendered into a new element appended to the given container.\n   */\n  OverlayToaster.create = function (props, container) {\n    if (container === void 0) {\n      container = document.body;\n    }\n    if (props != null && props.usePortal != null && !isNodeEnv(\"production\")) {\n      console.warn(TOASTER_WARN_INLINE);\n    }\n    var containerElement = document.createElement(\"div\");\n    container.appendChild(containerElement);\n    // TODO(React 18): Replace deprecated ReactDOM methods. See: https://github.com/palantir/blueprint/issues/7166\n    // eslint-disable-next-line @typescript-eslint/no-deprecated\n    var toaster = ReactDOM.render(React.createElement(OverlayToaster, __assign({}, props, {\n      usePortal: false\n    })), containerElement);\n    if (toaster == null) {\n      throw new Error(TOASTER_CREATE_NULL);\n    }\n    return toaster;\n  };\n  /**\n   * Similar to {@link OverlayToaster.create}, but returns a Promise to a\n   * Toaster instance after it's rendered and mounted to the DOM.\n   *\n   * This API will replace the synchronous {@link OverlayToaster.create} in a\n   * future major version of Blueprint to reflect React 18+'s new asynchronous\n   * rendering API.\n   */\n  OverlayToaster.createAsync = function (props, options) {\n    var _a, _b;\n    if (props != null && props.usePortal != null && !isNodeEnv(\"production\")) {\n      console.warn(TOASTER_WARN_INLINE);\n    }\n    var container = (_a = options === null || options === void 0 ? void 0 : options.container) !== null && _a !== void 0 ? _a : document.body;\n    // TODO(React 18): Replace deprecated ReactDOM methods. See: https://github.com/palantir/blueprint/issues/7166\n    // eslint-disable-next-line @typescript-eslint/no-deprecated\n    var domRenderer = (_b = options === null || options === void 0 ? void 0 : options.domRenderer) !== null && _b !== void 0 ? _b : ReactDOM.render;\n    var toasterComponentRoot = document.createElement(\"div\");\n    container.appendChild(toasterComponentRoot);\n    return new Promise(function (resolve, reject) {\n      try {\n        // TODO(React 18): Replace deprecated ReactDOM methods. See: https://github.com/palantir/blueprint/issues/7166\n        // eslint-disable-next-line @typescript-eslint/no-deprecated\n        domRenderer(React.createElement(OverlayToaster, __assign({}, props, {\n          ref: handleRef,\n          usePortal: false\n        })), toasterComponentRoot);\n      } catch (error) {\n        // Note that we're catching errors from the domRenderer function\n        // call, but not errors when rendering <OverlayToaster>, which\n        // happens in a separate scheduled tick. Wrapping the\n        // OverlayToaster in an error boundary would be necessary to\n        // capture rendering errors, but that's still a bit unreliable\n        // and would only catch errors rendering the initial mount.\n        reject(error);\n      }\n      // We can get a rough guarantee that the OverlayToaster has been\n      // mounted to the DOM by waiting until the ref callback here has\n      // been fired.\n      //\n      // This is the approach suggested under \"What about the render\n      // callback?\" at https://github.com/reactwg/react-18/discussions/5.\n      function handleRef(ref) {\n        if (ref == null) {\n          reject(new Error(TOASTER_CREATE_ASYNC_NULL));\n          return;\n        }\n        resolve(ref);\n      }\n    });\n  };\n  OverlayToaster.prototype.show = function (props, key) {\n    var options = this.createToastOptions(props, key);\n    var wasExistingToastUpdated = this.maybeUpdateExistingToast(options, key);\n    if (wasExistingToastUpdated) {\n      return options.key;\n    }\n    if (this.queue.isRunning) {\n      // If a toast has been shown recently, push to the queued toasts to prevent toasts from being shown too\n      // quickly for the animations to keep up\n      this.queue.toasts.push(options);\n    } else {\n      // If we have not recently shown a toast, we can immediately show the given toast\n      this.immediatelyShowToast(options);\n      this.startQueueTimeout();\n    }\n    return options.key;\n  };\n  OverlayToaster.prototype.maybeUpdateExistingToast = function (options, key) {\n    if (key == null) {\n      return false;\n    }\n    var isExistingQueuedToast = this.queue.toasts.some(function (toast) {\n      return toast.key === key;\n    });\n    if (isExistingQueuedToast) {\n      this.queue.toasts = this.queue.toasts.map(function (t) {\n        return t.key === key ? options : t;\n      });\n      return true;\n    }\n    var isExistingShownToast = this.state.toasts.some(function (toast) {\n      return toast.key === key;\n    });\n    if (isExistingShownToast) {\n      this.updateToastsInState(function (toasts) {\n        return toasts.map(function (t) {\n          return t.key === key ? options : t;\n        });\n      });\n      return true;\n    }\n    return false;\n  };\n  OverlayToaster.prototype.immediatelyShowToast = function (options) {\n    if (this.props.maxToasts) {\n      // check if active number of toasts are at the maxToasts limit\n      this.dismissIfAtLimit();\n    }\n    this.updateToastsInState(function (toasts) {\n      return __spreadArray([options], toasts, true);\n    });\n  };\n  OverlayToaster.prototype.startQueueTimeout = function () {\n    this.queue.isRunning = true;\n    this.queue.cancel = this.setTimeout(this.handleQueueTimeout, OVERLAY_TOASTER_DELAY_MS);\n  };\n  OverlayToaster.prototype.updateToastsInState = function (getNewToasts) {\n    var _this = this;\n    this.setState(function (prevState) {\n      var toasts = getNewToasts(prevState.toasts);\n      return {\n        toastRefs: _this.getToastRefs(toasts),\n        toasts: toasts\n      };\n    });\n  };\n  OverlayToaster.prototype.dismiss = function (key, timeoutExpired) {\n    var _this = this;\n    if (timeoutExpired === void 0) {\n      timeoutExpired = false;\n    }\n    this.setState(function (prevState) {\n      var toasts = prevState.toasts.filter(function (t) {\n        var _a;\n        var matchesKey = t.key === key;\n        if (matchesKey) {\n          (_a = t.onDismiss) === null || _a === void 0 ? void 0 : _a.call(t, timeoutExpired);\n        }\n        return !matchesKey;\n      });\n      return {\n        toastRefs: _this.getToastRefs(toasts),\n        toasts: toasts\n      };\n    });\n  };\n  OverlayToaster.prototype.clear = function () {\n    var _a, _b;\n    (_b = (_a = this.queue).cancel) === null || _b === void 0 ? void 0 : _b.call(_a);\n    this.queue = {\n      cancel: undefined,\n      isRunning: false,\n      toasts: []\n    };\n    this.state.toasts.forEach(function (t) {\n      var _a;\n      return (_a = t.onDismiss) === null || _a === void 0 ? void 0 : _a.call(t, false);\n    });\n    this.setState({\n      toastRefs: {},\n      toasts: []\n    });\n  };\n  OverlayToaster.prototype.getToasts = function () {\n    return this.state.toasts;\n  };\n  OverlayToaster.prototype.render = function () {\n    var classes = classNames(Classes.TOAST_CONTAINER, this.getPositionClasses(), this.props.className);\n    return React.createElement(Overlay2, {\n      autoFocus: this.props.autoFocus,\n      canEscapeKeyClose: this.props.canEscapeKeyClear,\n      canOutsideClickClose: false,\n      className: classes,\n      childRefs: this.toastRefs,\n      enforceFocus: false,\n      hasBackdrop: false,\n      isOpen: this.state.toasts.length > 0 || this.props.children != null,\n      onClose: this.handleClose,\n      shouldReturnFocusOnClose: false,\n      // $pt-transition-duration * 3 + $pt-transition-duration / 2\n      transitionDuration: 350,\n      transitionName: Classes.TOAST,\n      usePortal: this.props.usePortal\n    }, this.state.toasts.map(this.renderToast, this), this.renderChildren());\n  };\n  OverlayToaster.prototype.validateProps = function (_a) {\n    var maxToasts = _a.maxToasts;\n    // maximum number of toasts should not be a number less than 1\n    if (maxToasts !== undefined && maxToasts < 1) {\n      throw new Error(TOASTER_MAX_TOASTS_INVALID);\n    }\n  };\n  /**\n   * If provided `Toast` children, automaticaly upgrade them to `Toast2` elements so that `Overlay2` can inject\n   * refs into them for use by `CSSTransition`. This is a bit hacky but ensures backwards compatibility for\n   * `OverlayToaster`. It should be an uncommon code path in most applications, since we expect most usage to\n   * occur via the imperative toaster APIs.\n   *\n   * We can remove this indirection once `Toast2` fully replaces `Toast` in a future major version.\n   *\n   * TODO(@adidahiya): Blueprint v6.0\n   */\n  OverlayToaster.prototype.renderChildren = function () {\n    return React.Children.map(this.props.children, function (child) {\n      // TODO(React 18): Replace deprecated ReactDOM methods. See: https://github.com/palantir/blueprint/issues/7166\n      // eslint-disable-next-line @typescript-eslint/no-deprecated\n      if (isElementOfType(child, Toast)) {\n        return React.createElement(Toast2, __assign({}, child.props));\n      } else {\n        return child;\n      }\n    });\n  };\n  OverlayToaster.prototype.dismissIfAtLimit = function () {\n    if (this.state.toasts.length === this.props.maxToasts) {\n      // dismiss the oldest toast to stay within the maxToasts limit\n      this.dismiss(this.state.toasts[this.state.toasts.length - 1].key);\n    }\n  };\n  OverlayToaster.prototype.createToastOptions = function (props, key) {\n    if (key === void 0) {\n      key = \"toast-\".concat(this.toastId++);\n    }\n    // clone the object before adding the key prop to avoid leaking the mutation\n    return __assign(__assign({}, props), {\n      key: key\n    });\n  };\n  OverlayToaster.prototype.getPositionClasses = function () {\n    var positions = this.props.position.split(\"-\");\n    // NOTE that there is no -center class because that's the default style\n    return __spreadArray(__spreadArray([], positions.map(function (p) {\n      return \"\".concat(Classes.TOAST_CONTAINER, \"-\").concat(p.toLowerCase());\n    }), true), [\"\".concat(Classes.TOAST_CONTAINER, \"-\").concat(this.props.usePortal ? \"in-portal\" : \"inline\")], false);\n  };\n  OverlayToaster.displayName = \"\".concat(DISPLAYNAME_PREFIX, \".OverlayToaster\");\n  OverlayToaster.defaultProps = {\n    autoFocus: false,\n    canEscapeKeyClear: true,\n    position: Position.TOP,\n    usePortal: true\n  };\n  return OverlayToaster;\n}(AbstractPureComponent);\nexport { OverlayToaster };","map":{"version":3,"names":["classNames","React","ReactDOM","AbstractPureComponent","Classes","Position","TOASTER_CREATE_ASYNC_NULL","TOASTER_CREATE_NULL","TOASTER_MAX_TOASTS_INVALID","TOASTER_WARN_INLINE","DISPLAYNAME_PREFIX","isElementOfType","isNodeEnv","Overlay2","Toast","Toast2","OVERLAY_TOASTER_DELAY_MS","OverlayToaster","_super","__extends","_this","state","toastRefs","toasts","queue","cancel","undefined","isRunning","toastId","getToastRefs","reduce","refs","toast","key","createRef","handleQueueTimeout","nextToast","shift","immediatelyShowToast","startQueueTimeout","renderToast","createElement","__assign","onDismiss","getDismissHandler","timeoutExpired","dismiss","handleClose","e","clear","create","props","container","document","body","usePortal","console","warn","containerElement","appendChild","toaster","render","Error","createAsync","options","_a","domRenderer","_b","toasterComponentRoot","Promise","resolve","reject","ref","handleRef","error","prototype","show","createToastOptions","wasExistingToastUpdated","maybeUpdateExistingToast","push","isExistingQueuedToast","some","map","t","isExistingShownToast","updateToastsInState","maxToasts","dismissIfAtLimit","__spreadArray","setTimeout","getNewToasts","setState","prevState","filter","matchesKey","call","forEach","getToasts","classes","TOAST_CONTAINER","getPositionClasses","className","autoFocus","canEscapeKeyClose","canEscapeKeyClear","canOutsideClickClose","childRefs","enforceFocus","hasBackdrop","isOpen","length","children","onClose","shouldReturnFocusOnClose","transitionDuration","transitionName","TOAST","renderChildren","validateProps","Children","child","concat","positions","position","split","p","toLowerCase","displayName","defaultProps","TOP"],"sources":["C:\\Users\\deepa\\Deepak\\Working-File\\React-Project\\new-working-file\\React-Project\\my-app\\node_modules\\@blueprintjs\\core\\src\\components\\toast\\overlayToaster.tsx"],"sourcesContent":["/*\n * Copyright 2021 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\n\nimport { AbstractPureComponent, Classes, Position } from \"../../common\";\nimport {\n    TOASTER_CREATE_ASYNC_NULL,\n    TOASTER_CREATE_NULL,\n    TOASTER_MAX_TOASTS_INVALID,\n    TOASTER_WARN_INLINE,\n} from \"../../common/errors\";\nimport { DISPLAYNAME_PREFIX } from \"../../common/props\";\nimport { isElementOfType, isNodeEnv } from \"../../common/utils\";\nimport type { DOMMountOptions } from \"../../common/utils/mountOptions\";\nimport { Overlay2 } from \"../overlay2/overlay2\";\n\nimport type { OverlayToasterProps } from \"./overlayToasterProps\";\nimport { Toast } from \"./toast\";\nimport { Toast2 } from \"./toast2\";\nimport type { Toaster, ToastOptions } from \"./toaster\";\nimport type { ToastProps } from \"./toastProps\";\n\nexport interface OverlayToasterState {\n    toasts: ToastOptions[];\n    toastRefs: Record<string, React.RefObject<HTMLElement>>;\n}\n\nexport type OverlayToasterCreateOptions = DOMMountOptions<OverlayToasterProps>;\n\ninterface OverlayToasterQueueState {\n    cancel: (() => void) | undefined;\n    isRunning: boolean;\n    toasts: ToastOptions[];\n}\n\nexport const OVERLAY_TOASTER_DELAY_MS = 50;\n\n/**\n * OverlayToaster component.\n *\n * @see https://blueprintjs.com/docs/#core/components/toast\n */\nexport class OverlayToaster extends AbstractPureComponent<OverlayToasterProps, OverlayToasterState> implements Toaster {\n    public static displayName = `${DISPLAYNAME_PREFIX}.OverlayToaster`;\n\n    public static defaultProps: OverlayToasterProps = {\n        autoFocus: false,\n        canEscapeKeyClear: true,\n        position: Position.TOP,\n        usePortal: true,\n    };\n\n    /**\n     * Create a new `Toaster` instance that can be shared around your application.\n     * The `Toaster` will be rendered into a new element appended to the given container.\n     */\n    public static create(props?: OverlayToasterProps, container = document.body): Toaster {\n        if (props != null && props.usePortal != null && !isNodeEnv(\"production\")) {\n            console.warn(TOASTER_WARN_INLINE);\n        }\n        const containerElement = document.createElement(\"div\");\n        container.appendChild(containerElement);\n        // TODO(React 18): Replace deprecated ReactDOM methods. See: https://github.com/palantir/blueprint/issues/7166\n        // eslint-disable-next-line @typescript-eslint/no-deprecated\n        const toaster = ReactDOM.render<OverlayToasterProps>(\n            <OverlayToaster {...props} usePortal={false} />,\n            containerElement,\n        ) as OverlayToaster;\n        if (toaster == null) {\n            throw new Error(TOASTER_CREATE_NULL);\n        }\n        return toaster;\n    }\n\n    /**\n     * Similar to {@link OverlayToaster.create}, but returns a Promise to a\n     * Toaster instance after it's rendered and mounted to the DOM.\n     *\n     * This API will replace the synchronous {@link OverlayToaster.create} in a\n     * future major version of Blueprint to reflect React 18+'s new asynchronous\n     * rendering API.\n     */\n    public static createAsync(props?: OverlayToasterProps, options?: OverlayToasterCreateOptions): Promise<Toaster> {\n        if (props != null && props.usePortal != null && !isNodeEnv(\"production\")) {\n            console.warn(TOASTER_WARN_INLINE);\n        }\n\n        const container = options?.container ?? document.body;\n        // TODO(React 18): Replace deprecated ReactDOM methods. See: https://github.com/palantir/blueprint/issues/7166\n        // eslint-disable-next-line @typescript-eslint/no-deprecated\n        const domRenderer = options?.domRenderer ?? ReactDOM.render;\n\n        const toasterComponentRoot = document.createElement(\"div\");\n        container.appendChild(toasterComponentRoot);\n\n        return new Promise<Toaster>((resolve, reject) => {\n            try {\n                // TODO(React 18): Replace deprecated ReactDOM methods. See: https://github.com/palantir/blueprint/issues/7166\n                // eslint-disable-next-line @typescript-eslint/no-deprecated\n                domRenderer(<OverlayToaster {...props} ref={handleRef} usePortal={false} />, toasterComponentRoot);\n            } catch (error) {\n                // Note that we're catching errors from the domRenderer function\n                // call, but not errors when rendering <OverlayToaster>, which\n                // happens in a separate scheduled tick. Wrapping the\n                // OverlayToaster in an error boundary would be necessary to\n                // capture rendering errors, but that's still a bit unreliable\n                // and would only catch errors rendering the initial mount.\n                reject(error);\n            }\n\n            // We can get a rough guarantee that the OverlayToaster has been\n            // mounted to the DOM by waiting until the ref callback here has\n            // been fired.\n            //\n            // This is the approach suggested under \"What about the render\n            // callback?\" at https://github.com/reactwg/react-18/discussions/5.\n            function handleRef(ref: OverlayToaster | null) {\n                if (ref == null) {\n                    reject(new Error(TOASTER_CREATE_ASYNC_NULL));\n                    return;\n                }\n\n                resolve(ref);\n            }\n        });\n    }\n\n    public state: OverlayToasterState = {\n        toastRefs: {},\n        toasts: [],\n    };\n\n    // Queue of toasts to be displayed. If toasts are shown too quickly back to back, it can result in cut off toasts.\n    // The queue ensures that toasts are only displayed in QUEUE_TIMEOUT_MS increments.\n    private queue: OverlayToasterQueueState = {\n        cancel: undefined,\n        isRunning: false,\n        toasts: [],\n    };\n\n    // auto-incrementing identifier for un-keyed toasts\n    private toastId = 0;\n\n    private toastRefs: Record<string, React.RefObject<HTMLElement>> = {};\n\n    /** Compute a new collection of toast refs (usually after updating toasts) */\n    private getToastRefs = (toasts: ToastOptions[]) => {\n        return toasts.reduce<typeof this.toastRefs>((refs, toast) => {\n            refs[toast.key!] = React.createRef<HTMLElement>();\n            return refs;\n        }, {});\n    };\n\n    public show(props: ToastProps, key?: string) {\n        const options = this.createToastOptions(props, key);\n        const wasExistingToastUpdated = this.maybeUpdateExistingToast(options, key);\n        if (wasExistingToastUpdated) {\n            return options.key;\n        }\n\n        if (this.queue.isRunning) {\n            // If a toast has been shown recently, push to the queued toasts to prevent toasts from being shown too\n            // quickly for the animations to keep up\n            this.queue.toasts.push(options);\n        } else {\n            // If we have not recently shown a toast, we can immediately show the given toast\n            this.immediatelyShowToast(options);\n            this.startQueueTimeout();\n        }\n\n        return options.key;\n    }\n\n    private maybeUpdateExistingToast(options: ToastOptions, key: string | undefined) {\n        if (key == null) {\n            return false;\n        }\n\n        const isExistingQueuedToast = this.queue.toasts.some(toast => toast.key === key);\n        if (isExistingQueuedToast) {\n            this.queue.toasts = this.queue.toasts.map(t => (t.key === key ? options : t));\n            return true;\n        }\n\n        const isExistingShownToast = this.state.toasts.some(toast => toast.key === key);\n        if (isExistingShownToast) {\n            this.updateToastsInState(toasts => toasts.map(t => (t.key === key ? options : t)));\n            return true;\n        }\n\n        return false;\n    }\n\n    private immediatelyShowToast(options: ToastOptions) {\n        if (this.props.maxToasts) {\n            // check if active number of toasts are at the maxToasts limit\n            this.dismissIfAtLimit();\n        }\n\n        this.updateToastsInState(toasts => [options, ...toasts]);\n    }\n\n    private startQueueTimeout() {\n        this.queue.isRunning = true;\n        this.queue.cancel = this.setTimeout(this.handleQueueTimeout, OVERLAY_TOASTER_DELAY_MS);\n    }\n\n    private handleQueueTimeout = () => {\n        const nextToast = this.queue.toasts.shift();\n        if (nextToast != null) {\n            this.immediatelyShowToast(nextToast);\n            this.startQueueTimeout();\n        } else {\n            this.queue.isRunning = false;\n        }\n    };\n\n    private updateToastsInState(getNewToasts: (toasts: ToastOptions[]) => ToastOptions[]) {\n        this.setState(prevState => {\n            const toasts = getNewToasts(prevState.toasts);\n            return { toastRefs: this.getToastRefs(toasts), toasts };\n        });\n    }\n\n    public dismiss(key: string, timeoutExpired = false) {\n        this.setState(prevState => {\n            const toasts = prevState.toasts.filter(t => {\n                const matchesKey = t.key === key;\n                if (matchesKey) {\n                    t.onDismiss?.(timeoutExpired);\n                }\n                return !matchesKey;\n            });\n            return { toastRefs: this.getToastRefs(toasts), toasts };\n        });\n    }\n\n    public clear() {\n        this.queue.cancel?.();\n        this.queue = { cancel: undefined, isRunning: false, toasts: [] };\n        this.state.toasts.forEach(t => t.onDismiss?.(false));\n        this.setState({ toastRefs: {}, toasts: [] });\n    }\n\n    public getToasts() {\n        return this.state.toasts;\n    }\n\n    public render() {\n        const classes = classNames(Classes.TOAST_CONTAINER, this.getPositionClasses(), this.props.className);\n        return (\n            <Overlay2\n                autoFocus={this.props.autoFocus}\n                canEscapeKeyClose={this.props.canEscapeKeyClear}\n                canOutsideClickClose={false}\n                className={classes}\n                childRefs={this.toastRefs}\n                enforceFocus={false}\n                hasBackdrop={false}\n                isOpen={this.state.toasts.length > 0 || this.props.children != null}\n                onClose={this.handleClose}\n                shouldReturnFocusOnClose={false}\n                // $pt-transition-duration * 3 + $pt-transition-duration / 2\n                transitionDuration={350}\n                transitionName={Classes.TOAST}\n                usePortal={this.props.usePortal}\n            >\n                {this.state.toasts.map(this.renderToast, this)}\n                {this.renderChildren()}\n            </Overlay2>\n        );\n    }\n\n    protected validateProps({ maxToasts }: OverlayToasterProps) {\n        // maximum number of toasts should not be a number less than 1\n        if (maxToasts !== undefined && maxToasts < 1) {\n            throw new Error(TOASTER_MAX_TOASTS_INVALID);\n        }\n    }\n\n    /**\n     * If provided `Toast` children, automaticaly upgrade them to `Toast2` elements so that `Overlay2` can inject\n     * refs into them for use by `CSSTransition`. This is a bit hacky but ensures backwards compatibility for\n     * `OverlayToaster`. It should be an uncommon code path in most applications, since we expect most usage to\n     * occur via the imperative toaster APIs.\n     *\n     * We can remove this indirection once `Toast2` fully replaces `Toast` in a future major version.\n     *\n     * TODO(@adidahiya): Blueprint v6.0\n     */\n    private renderChildren() {\n        return React.Children.map(this.props.children, child => {\n            // TODO(React 18): Replace deprecated ReactDOM methods. See: https://github.com/palantir/blueprint/issues/7166\n            // eslint-disable-next-line @typescript-eslint/no-deprecated\n            if (isElementOfType(child, Toast)) {\n                return <Toast2 {...child.props} />;\n            } else {\n                return child;\n            }\n        });\n    }\n\n    private dismissIfAtLimit() {\n        if (this.state.toasts.length === this.props.maxToasts) {\n            // dismiss the oldest toast to stay within the maxToasts limit\n            this.dismiss(this.state.toasts[this.state.toasts.length - 1].key!);\n        }\n    }\n\n    private renderToast = (toast: ToastOptions) => {\n        return <Toast2 {...toast} onDismiss={this.getDismissHandler(toast)} />;\n    };\n\n    private createToastOptions(props: ToastProps, key = `toast-${this.toastId++}`) {\n        // clone the object before adding the key prop to avoid leaking the mutation\n        return { ...props, key };\n    }\n\n    private getPositionClasses() {\n        const positions = this.props.position!.split(\"-\");\n        // NOTE that there is no -center class because that's the default style\n        return [\n            ...positions.map(p => `${Classes.TOAST_CONTAINER}-${p.toLowerCase()}`),\n            `${Classes.TOAST_CONTAINER}-${this.props.usePortal ? \"in-portal\" : \"inline\"}`,\n        ];\n    }\n\n    private getDismissHandler = (toast: ToastOptions) => (timeoutExpired: boolean) => {\n        this.dismiss(toast.key, timeoutExpired);\n    };\n\n    private handleClose = (e: React.SyntheticEvent<HTMLElement>) => {\n        // NOTE that `e` isn't always a KeyboardEvent but that's the only type we care about\n        if ((e as React.KeyboardEvent<HTMLElement>).key === \"Escape\") {\n            this.clear();\n        }\n    };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}