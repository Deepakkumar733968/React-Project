{"ast":null,"code":"/*\n * Copyright 2024 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __extends } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { AbstractPureComponent, Classes, Utils } from \"../../common\";\nimport \"./tab\";\nimport { generateTabIds } from \"./tabTitle\";\n/**\n * Wraps the passed `panel`.\n */\nvar TabPanel = /** @class */function (_super) {\n  __extends(TabPanel, _super);\n  function TabPanel() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  TabPanel.prototype.render = function () {\n    var _a = this.props,\n      className = _a.className,\n      id = _a.id,\n      parentId = _a.parentId,\n      selectedTabId = _a.selectedTabId,\n      panel = _a.panel,\n      renderActiveTabPanelOnly = _a.renderActiveTabPanelOnly;\n    var isSelected = id === selectedTabId;\n    if (panel === undefined || renderActiveTabPanelOnly && !isSelected) {\n      return undefined;\n    }\n    var _b = generateTabIds(parentId, id),\n      tabTitleId = _b.tabTitleId,\n      tabPanelId = _b.tabPanelId;\n    return React.createElement(\"div\", {\n      \"aria-labelledby\": tabTitleId,\n      \"aria-hidden\": !isSelected,\n      className: classNames(Classes.TAB_PANEL, className),\n      id: tabPanelId,\n      role: \"tabpanel\"\n    }, Utils.isFunction(panel) ? panel({\n      tabPanelId: tabPanelId,\n      tabTitleId: tabTitleId\n    }) : panel);\n  };\n  return TabPanel;\n}(AbstractPureComponent);\nexport { TabPanel };","map":{"version":3,"names":["classNames","React","AbstractPureComponent","Classes","Utils","generateTabIds","TabPanel","_super","__extends","prototype","render","_a","props","className","id","parentId","selectedTabId","panel","renderActiveTabPanelOnly","isSelected","undefined","_b","tabTitleId","tabPanelId","createElement","TAB_PANEL","role","isFunction"],"sources":["C:\\Users\\deepa\\Deepak\\Working-File\\React-Project\\new-working-file\\React-Project\\my-app\\node_modules\\@blueprintjs\\core\\src\\components\\tabs\\tabPanel.tsx"],"sourcesContent":["/*\n * Copyright 2024 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport classNames from \"classnames\";\nimport * as React from \"react\";\n\nimport { AbstractPureComponent, Classes, Utils } from \"../../common\";\n\nimport { type TabId, type TabProps } from \"./tab\";\nimport type { TabsProps } from \"./tabs\";\nimport { generateTabIds, type TabTitleProps } from \"./tabTitle\";\n\nexport interface TabPanelProps\n    extends Pick<TabProps, \"className\" | \"id\" | \"panel\">,\n        Pick<TabsProps, \"renderActiveTabPanelOnly\" | \"selectedTabId\">,\n        Pick<TabTitleProps, \"parentId\"> {\n    /**\n     * Used for setting visibility. This `TabPanel` will be visibile when `selectedTabId === id`, with proper accessibility attributes set.\n     */\n    selectedTabId: TabId | undefined;\n}\n\n/**\n * Wraps the passed `panel`.\n */\nexport class TabPanel extends AbstractPureComponent<TabPanelProps> {\n    public render() {\n        const { className, id, parentId, selectedTabId, panel, renderActiveTabPanelOnly } = this.props;\n\n        const isSelected = id === selectedTabId;\n\n        if (panel === undefined || (renderActiveTabPanelOnly && !isSelected)) {\n            return undefined;\n        }\n\n        const { tabTitleId, tabPanelId } = generateTabIds(parentId, id);\n\n        return (\n            <div\n                aria-labelledby={tabTitleId}\n                aria-hidden={!isSelected}\n                className={classNames(Classes.TAB_PANEL, className)}\n                id={tabPanelId}\n                role=\"tabpanel\"\n            >\n                {Utils.isFunction(panel) ? panel({ tabPanelId, tabTitleId }) : panel}\n            </div>\n        );\n    }\n}\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAgBA,OAAOA,UAAU,MAAM,YAAY;AACnC,OAAO,KAAKC,KAAK,MAAM,OAAO;AAE9B,SAASC,qBAAqB,EAAEC,OAAO,EAAEC,KAAK,QAAQ,cAAc;AAEpE,OAA0C,OAAO;AAEjD,SAASC,cAAc,QAA4B,YAAY;AAY/D;;;AAGA,IAAAC,QAAA,0BAAAC,MAAA;EAA8BC,SAAA,CAAAF,QAAA,EAAAC,MAAA;EAA9B,SAAAD,SAAA;;EAwBA;EAvBWA,QAAA,CAAAG,SAAA,CAAAC,MAAM,GAAb;IACU,IAAAC,EAAA,GAA8E,IAAI,CAACC,KAAK;MAAtFC,SAAS,GAAAF,EAAA,CAAAE,SAAA;MAAEC,EAAE,GAAAH,EAAA,CAAAG,EAAA;MAAEC,QAAQ,GAAAJ,EAAA,CAAAI,QAAA;MAAEC,aAAa,GAAAL,EAAA,CAAAK,aAAA;MAAEC,KAAK,GAAAN,EAAA,CAAAM,KAAA;MAAEC,wBAAwB,GAAAP,EAAA,CAAAO,wBAAe;IAE9F,IAAMC,UAAU,GAAGL,EAAE,KAAKE,aAAa;IAEvC,IAAIC,KAAK,KAAKG,SAAS,IAAKF,wBAAwB,IAAI,CAACC,UAAW,EAAE;MAClE,OAAOC,SAAS;IACpB;IAEM,IAAAC,EAAA,GAA6BhB,cAAc,CAACU,QAAQ,EAAED,EAAE,CAAC;MAAvDQ,UAAU,GAAAD,EAAA,CAAAC,UAAA;MAAEC,UAAU,GAAAF,EAAA,CAAAE,UAAiC;IAE/D,OACItB,KAAA,CAAAuB,aAAA;MAAA,mBACqBF,UAAU;MAAA,eACd,CAACH,UAAU;MACxBN,SAAS,EAAEb,UAAU,CAACG,OAAO,CAACsB,SAAS,EAAEZ,SAAS,CAAC;MACnDC,EAAE,EAAES,UAAU;MACdG,IAAI,EAAC;IAAU,GAEdtB,KAAK,CAACuB,UAAU,CAACV,KAAK,CAAC,GAAGA,KAAK,CAAC;MAAEM,UAAU,EAAAA,UAAA;MAAED,UAAU,EAAAA;IAAA,CAAE,CAAC,GAAGL,KAAK,CAClE;EAEd,CAAC;EACL,OAAAX,QAAC;AAAD,CAAC,CAxB6BJ,qBAAqB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}