{"ast":null,"code":"/*\n * Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __rest } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { Error, InfoSign, Tick, WarningSign } from \"@blueprintjs/icons\";\nimport { Classes, DISPLAYNAME_PREFIX, Intent, Utils } from \"../../common\";\nimport { H5 } from \"../html/html\";\nimport { Icon } from \"../icon/icon\";\n/**\n * Callout component.\n *\n * @see https://blueprintjs.com/docs/#core/components/callout\n */\nexport var Callout = function (props) {\n  var _a;\n  var className = props.className,\n    children = props.children,\n    icon = props.icon,\n    intent = props.intent,\n    title = props.title,\n    compact = props.compact,\n    _b = props.minimal,\n    minimal = _b === void 0 ? false : _b,\n    htmlProps = __rest(props, [\"className\", \"children\", \"icon\", \"intent\", \"title\", \"compact\", \"minimal\"]);\n  var iconElement = renderIcon(icon, intent);\n  var classes = classNames(Classes.CALLOUT, Classes.intentClass(intent), className, (_a = {}, _a[Classes.CALLOUT_HAS_BODY_CONTENT] = !Utils.isReactNodeEmpty(children), _a[Classes.CALLOUT_ICON] = iconElement != null, _a[Classes.COMPACT] = compact, _a[Classes.MINIMAL] = minimal, _a));\n  return React.createElement(\"div\", __assign({\n    className: classes\n  }, htmlProps), iconElement, title && React.createElement(H5, null, title), children);\n};\nCallout.displayName = \"\".concat(DISPLAYNAME_PREFIX, \".Callout\");\nvar renderIcon = function (icon, intent) {\n  // 1. no icon\n  if (icon === null || icon === false) {\n    return undefined;\n  }\n  var iconProps = {\n    \"aria-hidden\": true,\n    tabIndex: -1\n  };\n  // 2. icon specified by name or as a custom SVG element\n  if (icon !== undefined) {\n    return React.createElement(Icon, __assign({\n      icon: icon\n    }, iconProps));\n  }\n  // 3. icon specified by intent prop\n  switch (intent) {\n    case Intent.DANGER:\n      return React.createElement(Error, __assign({}, iconProps));\n    case Intent.PRIMARY:\n      return React.createElement(InfoSign, __assign({}, iconProps));\n    case Intent.WARNING:\n      return React.createElement(WarningSign, __assign({}, iconProps));\n    case Intent.SUCCESS:\n      return React.createElement(Tick, __assign({}, iconProps));\n    default:\n      return undefined;\n  }\n};","map":{"version":3,"names":["classNames","React","Error","InfoSign","Tick","WarningSign","Classes","DISPLAYNAME_PREFIX","Intent","Utils","H5","Icon","Callout","props","className","children","icon","intent","title","compact","_b","minimal","htmlProps","__rest","iconElement","renderIcon","classes","CALLOUT","intentClass","_a","CALLOUT_HAS_BODY_CONTENT","isReactNodeEmpty","CALLOUT_ICON","COMPACT","MINIMAL","createElement","__assign","displayName","concat","undefined","iconProps","tabIndex","DANGER","PRIMARY","WARNING","SUCCESS"],"sources":["C:\\Users\\deepa\\Deepak\\Working-File\\React-Project\\new-working-file\\React-Project\\my-app\\node_modules\\@blueprintjs\\core\\src\\components\\callout\\callout.tsx"],"sourcesContent":["/*\n * Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport classNames from \"classnames\";\nimport * as React from \"react\";\n\nimport { Error, type IconName, InfoSign, type SVGIconProps, Tick, WarningSign } from \"@blueprintjs/icons\";\n\nimport {\n    Classes,\n    DISPLAYNAME_PREFIX,\n    type HTMLDivProps,\n    Intent,\n    type IntentProps,\n    type MaybeElement,\n    type Props,\n    Utils,\n} from \"../../common\";\nimport { H5 } from \"../html/html\";\nimport { Icon } from \"../icon/icon\";\n\n/** This component also supports the full range of HTML `<div>` attributes. */\nexport interface CalloutProps extends IntentProps, Props, HTMLDivProps {\n    /** Callout contents. */\n    children?: React.ReactNode;\n\n    /**\n     * Whether to use a compact appearance, which reduces the visual padding around callout content.\n     */\n    compact?: boolean;\n\n    /**\n     * Name of a Blueprint UI icon (or an icon element) to render on the left side.\n     *\n     * If this prop is omitted or `undefined`, the `intent` prop will determine a default icon.\n     * If this prop is explicitly `null`, no icon will be displayed (regardless of `intent`).\n     */\n    icon?: IconName | MaybeElement;\n\n    /**\n     * Visual intent color to apply to background, title, and icon.\n     *\n     * Defining this prop also applies a default icon, if the `icon` prop is omitted.\n     */\n    intent?: Intent;\n\n    /**\n     * Whether the callout should have a minimal appearance with no background color fill.\n     *\n     * @default false\n     */\n    minimal?: boolean;\n\n    /**\n     * String content of optional title element.\n     *\n     * Due to a conflict with the HTML prop types, to provide JSX content simply\n     * pass `<H4>JSX title content</H4>` as first `children` element instead of\n     * using this prop (note uppercase tag name to use the Blueprint Heading\n     * component).\n     */\n    title?: string;\n}\n\n/**\n * Callout component.\n *\n * @see https://blueprintjs.com/docs/#core/components/callout\n */\nexport const Callout: React.FC<CalloutProps> = props => {\n    const { className, children, icon, intent, title, compact, minimal = false, ...htmlProps } = props;\n    const iconElement = renderIcon(icon, intent);\n    const classes = classNames(Classes.CALLOUT, Classes.intentClass(intent), className, {\n        [Classes.CALLOUT_HAS_BODY_CONTENT]: !Utils.isReactNodeEmpty(children),\n        [Classes.CALLOUT_ICON]: iconElement != null,\n        [Classes.COMPACT]: compact,\n        [Classes.MINIMAL]: minimal,\n    });\n\n    return (\n        <div className={classes} {...htmlProps}>\n            {iconElement}\n            {title && <H5>{title}</H5>}\n            {children}\n        </div>\n    );\n};\nCallout.displayName = `${DISPLAYNAME_PREFIX}.Callout`;\n\nconst renderIcon = (icon?: CalloutProps[\"icon\"], intent?: Intent): IconName | MaybeElement => {\n    // 1. no icon\n    if (icon === null || icon === false) {\n        return undefined;\n    }\n\n    const iconProps = {\n        \"aria-hidden\": true,\n        tabIndex: -1,\n    } satisfies SVGIconProps;\n\n    // 2. icon specified by name or as a custom SVG element\n    if (icon !== undefined) {\n        return <Icon icon={icon} {...iconProps} />;\n    }\n\n    // 3. icon specified by intent prop\n    switch (intent) {\n        case Intent.DANGER:\n            return <Error {...iconProps} />;\n        case Intent.PRIMARY:\n            return <InfoSign {...iconProps} />;\n        case Intent.WARNING:\n            return <WarningSign {...iconProps} />;\n        case Intent.SUCCESS:\n            return <Tick {...iconProps} />;\n        default:\n            return undefined;\n    }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}