{"ast":null,"code":"/* !\n * (c) Copyright 2024 Palantir Technologies Inc. All rights reserved.\n */\nimport * as React from \"react\";\nimport { mergeRefs, Utils } from \"../common\";\nvar DEFAULT_OPTIONS = {\n  defaultTabIndex: undefined,\n  disabledTabIndex: -1\n};\nexport function useInteractiveAttributes(interactive, props, ref, options) {\n  if (options === void 0) {\n    options = DEFAULT_OPTIONS;\n  }\n  var defaultTabIndex = options.defaultTabIndex,\n    disabledTabIndex = options.disabledTabIndex;\n  var active = props.active,\n    onClick = props.onClick,\n    onFocus = props.onFocus,\n    onKeyDown = props.onKeyDown,\n    onKeyUp = props.onKeyUp,\n    onBlur = props.onBlur,\n    _a = props.tabIndex,\n    tabIndex = _a === void 0 ? defaultTabIndex : _a;\n  // the current key being pressed\n  var _b = React.useState(),\n    currentKeyPressed = _b[0],\n    setCurrentKeyPressed = _b[1];\n  // whether the button is in \"active\" state\n  var _c = React.useState(false),\n    isActive = _c[0],\n    setIsActive = _c[1];\n  // our local ref for the interactive element, merged with the consumer's own ref in this hook's return value\n  var elementRef = React.useRef(null);\n  var handleBlur = React.useCallback(function (e) {\n    if (isActive) {\n      setIsActive(false);\n    }\n    onBlur === null || onBlur === void 0 ? void 0 : onBlur(e);\n  }, [isActive, onBlur]);\n  var handleKeyDown = React.useCallback(function (e) {\n    if (Utils.isKeyboardClick(e)) {\n      e.preventDefault();\n      if (e.key !== currentKeyPressed) {\n        setIsActive(true);\n      }\n    }\n    setCurrentKeyPressed(e.key);\n    onKeyDown === null || onKeyDown === void 0 ? void 0 : onKeyDown(e);\n  }, [currentKeyPressed, onKeyDown]);\n  var handleKeyUp = React.useCallback(function (e) {\n    var _a;\n    if (Utils.isKeyboardClick(e)) {\n      setIsActive(false);\n      (_a = elementRef.current) === null || _a === void 0 ? void 0 : _a.click();\n    }\n    setCurrentKeyPressed(undefined);\n    onKeyUp === null || onKeyUp === void 0 ? void 0 : onKeyUp(e);\n  }, [onKeyUp, elementRef]);\n  var resolvedActive = interactive && (active || isActive);\n  return [resolvedActive, {\n    onBlur: handleBlur,\n    onClick: interactive ? onClick : undefined,\n    onFocus: interactive ? onFocus : undefined,\n    onKeyDown: handleKeyDown,\n    onKeyUp: handleKeyUp,\n    ref: mergeRefs(elementRef, ref),\n    tabIndex: interactive ? tabIndex : disabledTabIndex\n  }];\n}","map":{"version":3,"names":["React","mergeRefs","Utils","DEFAULT_OPTIONS","defaultTabIndex","undefined","disabledTabIndex","useInteractiveAttributes","interactive","props","ref","options","active","onClick","onFocus","onKeyDown","onKeyUp","onBlur","_a","tabIndex","_b","useState","currentKeyPressed","setCurrentKeyPressed","_c","isActive","setIsActive","elementRef","useRef","handleBlur","useCallback","e","handleKeyDown","isKeyboardClick","preventDefault","key","handleKeyUp","current","click","resolvedActive"],"sources":["C:\\Users\\deepa\\Deepak\\Working-File\\React-Project\\new-working-file\\React-Project\\my-app\\node_modules\\@blueprintjs\\core\\src\\accessibility\\useInteractiveAttributes.ts"],"sourcesContent":["/* !\n * (c) Copyright 2024 Palantir Technologies Inc. All rights reserved.\n */\n\nimport * as React from \"react\";\n\nimport { mergeRefs, Utils } from \"../common\";\n\ntype InteractiveHTMLAttributes<E extends HTMLElement> = Pick<\n    React.HTMLAttributes<E>,\n    \"onBlur\" | \"onClick\" | \"onFocus\" | \"onKeyDown\" | \"onKeyUp\" | \"tabIndex\"\n>;\n\ninterface InteractiveComponentProps extends InteractiveHTMLAttributes<HTMLElement> {\n    active?: boolean | undefined;\n}\n\ninterface InteractiveAttributes<E extends HTMLElement> extends InteractiveHTMLAttributes<E> {\n    ref: React.Ref<E>;\n}\n\nexport interface UseInteractiveAttributesOptions {\n    defaultTabIndex: number | undefined;\n    disabledTabIndex: number | undefined;\n}\n\nconst DEFAULT_OPTIONS: UseInteractiveAttributesOptions = { defaultTabIndex: undefined, disabledTabIndex: -1 };\n\nexport function useInteractiveAttributes<E extends HTMLElement>(\n    interactive: boolean,\n    props: InteractiveComponentProps,\n    ref: React.Ref<E>,\n    options: UseInteractiveAttributesOptions = DEFAULT_OPTIONS,\n): [active: boolean, interactiveProps: InteractiveAttributes<E>] {\n    const { defaultTabIndex, disabledTabIndex } = options;\n    const { active, onClick, onFocus, onKeyDown, onKeyUp, onBlur, tabIndex = defaultTabIndex } = props;\n    // the current key being pressed\n    const [currentKeyPressed, setCurrentKeyPressed] = React.useState<string | undefined>();\n    // whether the button is in \"active\" state\n    const [isActive, setIsActive] = React.useState(false);\n    // our local ref for the interactive element, merged with the consumer's own ref in this hook's return value\n    const elementRef = React.useRef<E | null>(null);\n\n    const handleBlur = React.useCallback(\n        (e: React.FocusEvent<E>) => {\n            if (isActive) {\n                setIsActive(false);\n            }\n\n            onBlur?.(e);\n        },\n        [isActive, onBlur],\n    );\n\n    const handleKeyDown = React.useCallback(\n        (e: React.KeyboardEvent<E>) => {\n            if (Utils.isKeyboardClick(e)) {\n                e.preventDefault();\n                if (e.key !== currentKeyPressed) {\n                    setIsActive(true);\n                }\n            }\n\n            setCurrentKeyPressed(e.key);\n            onKeyDown?.(e);\n        },\n        [currentKeyPressed, onKeyDown],\n    );\n\n    const handleKeyUp = React.useCallback(\n        (e: React.KeyboardEvent<E>) => {\n            if (Utils.isKeyboardClick(e)) {\n                setIsActive(false);\n                elementRef.current?.click();\n            }\n            setCurrentKeyPressed(undefined);\n            onKeyUp?.(e);\n        },\n        [onKeyUp, elementRef],\n    );\n\n    const resolvedActive = interactive && (active || isActive);\n\n    return [\n        resolvedActive,\n        {\n            onBlur: handleBlur,\n            onClick: interactive ? onClick : undefined,\n            onFocus: interactive ? onFocus : undefined,\n            onKeyDown: handleKeyDown,\n            onKeyUp: handleKeyUp,\n            ref: mergeRefs(elementRef, ref),\n            tabIndex: interactive ? tabIndex : disabledTabIndex,\n        },\n    ];\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}