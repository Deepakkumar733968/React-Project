{"ast":null,"code":"/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __rest } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { Classes, DISPLAYNAME_PREFIX, Elevation } from \"../../common\";\nimport { Card } from \"../card/card\";\nexport var CardList = React.forwardRef(function (props, ref) {\n  var _a;\n  var _b = props.bordered,\n    bordered = _b === void 0 ? true : _b,\n    className = props.className,\n    children = props.children,\n    _c = props.compact,\n    compact = _c === void 0 ? false : _c,\n    htmlProps = __rest(props, [\"bordered\", \"className\", \"children\", \"compact\"]);\n  var classes = classNames(className, Classes.CARD_LIST, (_a = {}, _a[Classes.CARD_LIST_BORDERED] = bordered, _a[Classes.COMPACT] = compact, _a));\n  return React.createElement(Card, __assign({\n    role: \"list\",\n    elevation: Elevation.ZERO,\n    className: classes\n  }, htmlProps, {\n    ref: ref\n  }), children);\n});\nCardList.displayName = \"\".concat(DISPLAYNAME_PREFIX, \".CardList\");","map":{"version":3,"names":["classNames","React","Classes","DISPLAYNAME_PREFIX","Elevation","Card","CardList","forwardRef","props","ref","_b","bordered","className","children","_c","compact","htmlProps","__rest","classes","CARD_LIST","_a","CARD_LIST_BORDERED","COMPACT","createElement","__assign","role","elevation","ZERO","displayName","concat"],"sources":["C:\\Users\\deepa\\Deepak\\Working-File\\React-Project\\new-working-file\\React-Project\\my-app\\node_modules\\@blueprintjs\\core\\src\\components\\card-list\\cardList.tsx"],"sourcesContent":["/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport classNames from \"classnames\";\nimport * as React from \"react\";\n\nimport { Classes, DISPLAYNAME_PREFIX, Elevation, type HTMLDivProps, type Props } from \"../../common\";\nimport { Card } from \"../card/card\";\n\nexport interface CardListProps extends Props, HTMLDivProps, React.RefAttributes<HTMLDivElement> {\n    /**\n     * Whether this container element should have a visual border.\n     *\n     * Set this to `false` to remove elevation and border radius styles, which allows this element to be a child of\n     * another bordered container element without padding (like SectionCard). Note that this also sets a 1px margin\n     * _in dark theme_ to account for inset box shadows in that theme used across the design system. Be sure to test\n     * your UI in both light and dark theme if you modify this prop value.\n     *\n     * @default true\n     */\n    bordered?: boolean;\n\n    /**\n     * Whether this component should use compact styles with reduced visual padding.\n     *\n     * Note that this prop affects styling for all Cards within this CardList and you do not need to set the\n     * `compact` prop individually on those child Cards.\n     *\n     * @default false\n     */\n    compact?: boolean;\n}\n\nexport const CardList: React.FC<CardListProps> = React.forwardRef((props, ref) => {\n    const { bordered = true, className, children, compact = false, ...htmlProps } = props;\n\n    const classes = classNames(className, Classes.CARD_LIST, {\n        [Classes.CARD_LIST_BORDERED]: bordered,\n        [Classes.COMPACT]: compact,\n    });\n\n    return (\n        <Card role=\"list\" elevation={Elevation.ZERO} className={classes} {...htmlProps} ref={ref}>\n            {children}\n        </Card>\n    );\n});\nCardList.displayName = `${DISPLAYNAME_PREFIX}.CardList`;\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAgBA,OAAOA,UAAU,MAAM,YAAY;AACnC,OAAO,KAAKC,KAAK,MAAM,OAAO;AAE9B,SAASC,OAAO,EAAEC,kBAAkB,EAAEC,SAAS,QAAuC,cAAc;AACpG,SAASC,IAAI,QAAQ,cAAc;AA0BnC,OAAO,IAAMC,QAAQ,GAA4BL,KAAK,CAACM,UAAU,CAAC,UAACC,KAAK,EAAEC,GAAG;;EACjE,IAAAC,EAAA,GAAwEF,KAAK,CAAAG,QAA9D;IAAfA,QAAQ,GAAAD,EAAA,cAAG,IAAI,GAAAA,EAAA;IAAEE,SAAS,GAA8CJ,KAAK,CAAAI,SAAnD;IAAEC,QAAQ,GAAoCL,KAAK,CAAAK,QAAzC;IAAEC,EAAA,GAAkCN,KAAK,CAAAO,OAAxB;IAAfA,OAAO,GAAAD,EAAA,cAAG,KAAK,GAAAA,EAAA;IAAKE,SAAS,GAAAC,MAAA,CAAKT,KAAK,EAA/E,gDAAuE,CAAF;EAE3E,IAAMU,OAAO,GAAGlB,UAAU,CAACY,SAAS,EAAEV,OAAO,CAACiB,SAAS,GAAAC,EAAA,OACnDA,EAAA,CAAClB,OAAO,CAACmB,kBAAkB,IAAGV,QAAQ,EACtCS,EAAA,CAAClB,OAAO,CAACoB,OAAO,IAAGP,OAAO,E,IAC5B;EAEF,OACId,KAAA,CAAAsB,aAAA,CAAClB,IAAI,EAAAmB,QAAA;IAACC,IAAI,EAAC,MAAM;IAACC,SAAS,EAAEtB,SAAS,CAACuB,IAAI;IAAEf,SAAS,EAAEM;EAAO,GAAMF,SAAS;IAAEP,GAAG,EAAEA;EAAG,IACnFI,QAAQ,CACN;AAEf,CAAC,CAAC;AACFP,QAAQ,CAACsB,WAAW,GAAG,GAAAC,MAAA,CAAG1B,kBAAkB,cAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}