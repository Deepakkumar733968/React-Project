{"ast":null,"code":"/* !\n * (c) Copyright 2025 Palantir Technologies Inc. All rights reserved.\n */\nimport * as React from \"react\";\nimport { isNodeEnv } from \"../common/utils\";\n/**\n * Custom hook for validating component props during development.\n * This hook runs validation checks only in non-production environments,\n * following the same pattern as AbstractComponent.\n *\n * @param validator - Function that performs the validation checks\n * @param dependencies - Optional array of dependencies that trigger validation when changed\n *\n * @example\n * useValidateProps(() => {\n *     if (value < 0) console.warn(\"Value must be positive\");\n * }, [value]);\n */\nexport function useValidateProps(validator, dependencies) {\n  if (dependencies === void 0) {\n    dependencies = [];\n  }\n  React.useEffect(function () {\n    if (!isNodeEnv(\"production\")) {\n      validator();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, dependencies);\n}","map":{"version":3,"names":["React","isNodeEnv","useValidateProps","validator","dependencies","useEffect"],"sources":["C:\\Users\\deepa\\Deepak\\Working-File\\React-Project\\new-working-file\\React-Project\\my-app\\node_modules\\@blueprintjs\\core\\src\\hooks\\useValidateProps.ts"],"sourcesContent":["/* !\n * (c) Copyright 2025 Palantir Technologies Inc. All rights reserved.\n */\n\nimport * as React from \"react\";\n\nimport { isNodeEnv } from \"../common/utils\";\n\n/**\n * Custom hook for validating component props during development.\n * This hook runs validation checks only in non-production environments,\n * following the same pattern as AbstractComponent.\n *\n * @param validator - Function that performs the validation checks\n * @param dependencies - Optional array of dependencies that trigger validation when changed\n *\n * @example\n * useValidateProps(() => {\n *     if (value < 0) console.warn(\"Value must be positive\");\n * }, [value]);\n */\nexport function useValidateProps(validator: () => void, dependencies: React.DependencyList = []) {\n    React.useEffect(() => {\n        if (!isNodeEnv(\"production\")) {\n            validator();\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, dependencies);\n}\n"],"mappings":"AAAA;;;AAIA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAE9B,SAASC,SAAS,QAAQ,iBAAiB;AAE3C;;;;;;;;;;;;;AAaA,OAAM,SAAUC,gBAAgBA,CAACC,SAAqB,EAAEC,YAAuC;EAAvC,IAAAA,YAAA;IAAAA,YAAA,KAAuC;EAAA;EAC3FJ,KAAK,CAACK,SAAS,CAAC;IACZ,IAAI,CAACJ,SAAS,CAAC,YAAY,CAAC,EAAE;MAC1BE,SAAS,EAAE;IACf;IACA;EACJ,CAAC,EAAEC,YAAY,CAAC;AACpB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}