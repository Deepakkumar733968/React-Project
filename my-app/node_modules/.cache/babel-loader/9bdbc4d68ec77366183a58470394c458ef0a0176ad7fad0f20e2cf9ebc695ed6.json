{"ast":null,"code":"/*\n * Copyright 2018 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __extends, __rest } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { IconSize, SmallCross } from \"@blueprintjs/icons\";\nimport { AbstractPureComponent, Classes } from \"../../common\";\nimport * as Errors from \"../../common/errors\";\nimport { getPositionIgnoreAngles, isPositionHorizontal } from \"../../common/position\";\nimport { DISPLAYNAME_PREFIX } from \"../../common/props\";\nimport { Button } from \"../button/buttons\";\nimport { H4 } from \"../html/html\";\nimport { Icon } from \"../icon/icon\";\nimport { Overlay2 } from \"../overlay2/overlay2\";\nexport var DrawerSize;\n(function (DrawerSize) {\n  DrawerSize[\"SMALL\"] = \"360px\";\n  DrawerSize[\"STANDARD\"] = \"50%\";\n  DrawerSize[\"LARGE\"] = \"90%\";\n})(DrawerSize || (DrawerSize = {}));\nvar Drawer = /** @class */function (_super) {\n  __extends(Drawer, _super);\n  function Drawer() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Drawer.prototype.render = function () {\n    var _a, _b, _c;\n    var _d;\n    var _e = this.props,\n      hasBackdrop = _e.hasBackdrop,\n      size = _e.size,\n      style = _e.style,\n      position = _e.position;\n    var _f = this.props,\n      className = _f.className,\n      children = _f.children,\n      overlayProps = __rest(_f, [\"className\", \"children\"]);\n    var realPosition = getPositionIgnoreAngles(position);\n    var classes = classNames(Classes.DRAWER, (_a = {}, _a[(_d = Classes.positionClass(realPosition)) !== null && _d !== void 0 ? _d : \"\"] = true, _a), className);\n    var styleProp = size == null ? style : __assign(__assign({}, style), (_b = {}, _b[isPositionHorizontal(realPosition) ? \"height\" : \"width\"] = size, _b));\n    return (\n      // N.B. the `OVERLAY_CONTAINER` class is a bit of a misnomer since it is only being used by the Drawer\n      // component, but we keep it for backwards compatibility.\n      React.createElement(Overlay2, __assign({}, overlayProps, {\n        className: classNames((_c = {}, _c[Classes.OVERLAY_CONTAINER] = hasBackdrop, _c))\n      }), React.createElement(\"div\", {\n        className: classes,\n        style: styleProp\n      }, this.maybeRenderHeader(), children))\n    );\n  };\n  Drawer.prototype.validateProps = function (props) {\n    if (props.title == null) {\n      if (props.icon != null) {\n        console.warn(Errors.DIALOG_WARN_NO_HEADER_ICON);\n      }\n      if (props.isCloseButtonShown != null) {\n        console.warn(Errors.DIALOG_WARN_NO_HEADER_CLOSE_BUTTON);\n      }\n    }\n    if (props.position != null) {\n      if (props.position !== getPositionIgnoreAngles(props.position)) {\n        console.warn(Errors.DRAWER_ANGLE_POSITIONS_ARE_CASTED);\n      }\n    }\n  };\n  Drawer.prototype.maybeRenderCloseButton = function () {\n    // `isCloseButtonShown` can't be defaulted through default props because of props validation\n    // so this check actually defaults it to true (fails only if directly set to false)\n    if (this.props.isCloseButtonShown !== false) {\n      return React.createElement(Button, {\n        \"aria-label\": \"Close\",\n        className: Classes.DIALOG_CLOSE_BUTTON,\n        icon: React.createElement(SmallCross, {\n          size: IconSize.LARGE\n        }),\n        onClick: this.props.onClose,\n        variant: \"minimal\"\n      });\n    } else {\n      return null;\n    }\n  };\n  Drawer.prototype.maybeRenderHeader = function () {\n    var _a = this.props,\n      icon = _a.icon,\n      title = _a.title;\n    if (title == null) {\n      return null;\n    }\n    return React.createElement(\"div\", {\n      className: Classes.DRAWER_HEADER\n    }, React.createElement(Icon, {\n      icon: icon,\n      size: IconSize.LARGE\n    }), React.createElement(H4, null, title), this.maybeRenderCloseButton());\n  };\n  Drawer.displayName = \"\".concat(DISPLAYNAME_PREFIX, \".Drawer\");\n  Drawer.defaultProps = {\n    canOutsideClickClose: true,\n    isOpen: false,\n    position: \"right\",\n    style: {}\n  };\n  return Drawer;\n}(AbstractPureComponent);\nexport { Drawer };","map":{"version":3,"names":["classNames","React","IconSize","SmallCross","AbstractPureComponent","Classes","Errors","getPositionIgnoreAngles","isPositionHorizontal","DISPLAYNAME_PREFIX","Button","H4","Icon","Overlay2","DrawerSize","Drawer","_super","__extends","prototype","render","_e","props","hasBackdrop","size","style","position","_f","className","children","overlayProps","__rest","realPosition","classes","DRAWER","_a","_d","positionClass","styleProp","__assign","_b","createElement","_c","OVERLAY_CONTAINER","maybeRenderHeader","validateProps","title","icon","console","warn","DIALOG_WARN_NO_HEADER_ICON","isCloseButtonShown","DIALOG_WARN_NO_HEADER_CLOSE_BUTTON","DRAWER_ANGLE_POSITIONS_ARE_CASTED","maybeRenderCloseButton","DIALOG_CLOSE_BUTTON","LARGE","onClick","onClose","variant","DRAWER_HEADER","displayName","concat","defaultProps","canOutsideClickClose","isOpen"],"sources":["C:\\Users\\deepa\\Deepak\\Working-File\\React-Project\\new-working-file\\React-Project\\my-app\\node_modules\\@blueprintjs\\core\\src\\components\\drawer\\drawer.tsx"],"sourcesContent":["/*\n * Copyright 2018 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport classNames from \"classnames\";\nimport * as React from \"react\";\n\nimport { type IconName, IconSize, SmallCross } from \"@blueprintjs/icons\";\n\nimport { AbstractPureComponent, Classes, type Props } from \"../../common\";\nimport * as Errors from \"../../common/errors\";\nimport { getPositionIgnoreAngles, isPositionHorizontal, type Position } from \"../../common/position\";\nimport { DISPLAYNAME_PREFIX, type MaybeElement } from \"../../common/props\";\nimport { Button } from \"../button/buttons\";\nimport { H4 } from \"../html/html\";\nimport { Icon } from \"../icon/icon\";\nimport type { BackdropProps, OverlayableProps } from \"../overlay/overlayProps\";\nimport { Overlay2 } from \"../overlay2/overlay2\";\n\nexport enum DrawerSize {\n    SMALL = \"360px\",\n    STANDARD = \"50%\",\n    LARGE = \"90%\",\n}\n\nexport interface DrawerProps extends OverlayableProps, BackdropProps, Props {\n    /** Drawer contents. */\n    children?: React.ReactNode;\n\n    /**\n     * Name of a Blueprint UI icon (or an icon element) to render in the\n     * drawer's header. Note that the header will only be rendered if `title` is\n     * provided.\n     */\n    icon?: IconName | MaybeElement;\n\n    /**\n     * Whether to show the close button in the dialog's header.\n     * Note that the header will only be rendered if `title` is provided.\n     *\n     * @default true\n     */\n    isCloseButtonShown?: boolean;\n\n    /**\n     * Toggles the visibility of the overlay and its children.\n     * This prop is required because the component is controlled.\n     */\n    isOpen: boolean;\n\n    /**\n     * Position of a drawer. All angled positions will be casted into pure positions\n     * (top, bottom, left, or right).\n     *\n     * @default \"right\"\n     */\n    position?: Position;\n\n    /**\n     * CSS size of the drawer. This sets `width` if horizontal position (default)\n     * and `height` otherwise.\n     *\n     * Constants are available for common sizes:\n     * - `DrawerSize.SMALL = 360px`\n     * - `DrawerSize.STANDARD = 50%`\n     * - `DrawerSize.LARGE = 90%`\n     *\n     * @default DrawerSize.STANDARD = \"50%\"\n     */\n    size?: number | string;\n\n    /**\n     * CSS styles to apply to the dialog.\n     *\n     * @default {}\n     */\n    style?: React.CSSProperties;\n\n    /**\n     * Title of the dialog. If provided, an element with `Classes.DIALOG_HEADER`\n     * will be rendered inside the dialog before any children elements.\n     */\n    title?: React.ReactNode;\n\n    /**\n     * Name of the transition for internal `CSSTransition`. Providing your own\n     * name here will require defining new CSS transition properties.\n     */\n    transitionName?: string;\n}\n\nexport class Drawer extends AbstractPureComponent<DrawerProps> {\n    public static displayName = `${DISPLAYNAME_PREFIX}.Drawer`;\n\n    public static defaultProps: DrawerProps = {\n        canOutsideClickClose: true,\n        isOpen: false,\n        position: \"right\",\n        style: {},\n    };\n\n    public render() {\n        const { hasBackdrop, size, style, position } = this.props;\n        const { className, children, ...overlayProps } = this.props;\n        const realPosition = getPositionIgnoreAngles(position!);\n\n        const classes = classNames(\n            Classes.DRAWER,\n            {\n                [Classes.positionClass(realPosition) ?? \"\"]: true,\n            },\n            className,\n        );\n\n        const styleProp =\n            size == null\n                ? style\n                : {\n                      ...style,\n                      [isPositionHorizontal(realPosition) ? \"height\" : \"width\"]: size,\n                  };\n\n        return (\n            // N.B. the `OVERLAY_CONTAINER` class is a bit of a misnomer since it is only being used by the Drawer\n            // component, but we keep it for backwards compatibility.\n            <Overlay2 {...overlayProps} className={classNames({ [Classes.OVERLAY_CONTAINER]: hasBackdrop })}>\n                <div className={classes} style={styleProp}>\n                    {this.maybeRenderHeader()}\n                    {children}\n                </div>\n            </Overlay2>\n        );\n    }\n\n    protected validateProps(props: DrawerProps) {\n        if (props.title == null) {\n            if (props.icon != null) {\n                console.warn(Errors.DIALOG_WARN_NO_HEADER_ICON);\n            }\n            if (props.isCloseButtonShown != null) {\n                console.warn(Errors.DIALOG_WARN_NO_HEADER_CLOSE_BUTTON);\n            }\n        }\n        if (props.position != null) {\n            if (props.position !== getPositionIgnoreAngles(props.position)) {\n                console.warn(Errors.DRAWER_ANGLE_POSITIONS_ARE_CASTED);\n            }\n        }\n    }\n\n    private maybeRenderCloseButton() {\n        // `isCloseButtonShown` can't be defaulted through default props because of props validation\n        // so this check actually defaults it to true (fails only if directly set to false)\n        if (this.props.isCloseButtonShown !== false) {\n            return (\n                <Button\n                    aria-label=\"Close\"\n                    className={Classes.DIALOG_CLOSE_BUTTON}\n                    icon={<SmallCross size={IconSize.LARGE} />}\n                    onClick={this.props.onClose}\n                    variant=\"minimal\"\n                />\n            );\n        } else {\n            return null;\n        }\n    }\n\n    private maybeRenderHeader() {\n        const { icon, title } = this.props;\n        if (title == null) {\n            return null;\n        }\n        return (\n            <div className={Classes.DRAWER_HEADER}>\n                <Icon icon={icon} size={IconSize.LARGE} />\n                <H4>{title}</H4>\n                {this.maybeRenderCloseButton()}\n            </div>\n        );\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}