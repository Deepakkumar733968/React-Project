{"ast":null,"code":"/*\n * Copyright 2020 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __rest } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { Classes } from \"../../common\";\nimport { DISPLAYNAME_PREFIX } from \"../../common/props\";\n/* istanbul ignore next */\n/**\n * Dialog step component.\n *\n * @see https://blueprintjs.com/docs/#core/components/dialog.dialogstep\n */\nexport var DialogStep = function (props) {\n  var className = props.className,\n    id = props.id,\n    title = props.title,\n    htmlProps = __rest(props, [\"className\", \"id\", \"title\"]);\n  // this component is never rendered directly; see MultistepDialog#renderDialogStep()\n  return React.createElement(\"div\", __assign({}, htmlProps, {\n    className: Classes.DIALOG_STEP_CONTAINER,\n    role: \"tab\"\n  }), React.createElement(\"div\", {\n    className: classNames(Classes.DIALOG_STEP, className)\n  }));\n};\nDialogStep.displayName = \"\".concat(DISPLAYNAME_PREFIX, \".DialogStep\");","map":{"version":3,"names":["classNames","React","Classes","DISPLAYNAME_PREFIX","DialogStep","props","className","id","title","htmlProps","__rest","createElement","__assign","DIALOG_STEP_CONTAINER","role","DIALOG_STEP","displayName","concat"],"sources":["C:\\Users\\deepa\\Deepak\\Working-File\\React-Project\\new-working-file\\React-Project\\my-app\\node_modules\\@blueprintjs\\core\\src\\components\\dialog\\dialogStep.tsx"],"sourcesContent":["/*\n * Copyright 2020 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport classNames from \"classnames\";\nimport * as React from \"react\";\n\nimport { Classes } from \"../../common\";\nimport { DISPLAYNAME_PREFIX, type HTMLDivProps, type Props } from \"../../common/props\";\n\nimport type { DialogStepButtonProps } from \"./dialogStepButton\";\n\nexport type DialogStepId = string | number;\n\nexport interface DialogStepProps extends Props, Omit<HTMLDivProps, \"id\" | \"title\" | \"onClick\"> {\n    /**\n     * Unique identifier used to identify which step is selected.\n     */\n    id: DialogStepId;\n\n    /**\n     * Panel content, rendered by the parent `MultistepDialog` when this step is active.\n     */\n    panel: React.JSX.Element;\n\n    /**\n     * Space-delimited string of class names applied to multistep dialog panel container.\n     */\n    panelClassName?: string;\n\n    /**\n     * Content of step title element, rendered in a list left of the active panel.\n     */\n    title?: React.ReactNode;\n\n    /**\n     * Props for the back button.\n     */\n    backButtonProps?: DialogStepButtonProps;\n\n    /**\n     * Props for the next button.\n     */\n    nextButtonProps?: DialogStepButtonProps;\n}\n\n/* istanbul ignore next */\n/**\n * Dialog step component.\n *\n * @see https://blueprintjs.com/docs/#core/components/dialog.dialogstep\n */\nexport const DialogStep: React.FC<DialogStepProps> = props => {\n    const { className, id, title, ...htmlProps } = props;\n\n    // this component is never rendered directly; see MultistepDialog#renderDialogStep()\n    return (\n        <div {...htmlProps} className={Classes.DIALOG_STEP_CONTAINER} role=\"tab\">\n            <div className={classNames(Classes.DIALOG_STEP, className)} />\n        </div>\n    );\n};\n\nDialogStep.displayName = `${DISPLAYNAME_PREFIX}.DialogStep`;\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAgBA,OAAOA,UAAU,MAAM,YAAY;AACnC,OAAO,KAAKC,KAAK,MAAM,OAAO;AAE9B,SAASC,OAAO,QAAQ,cAAc;AACtC,SAASC,kBAAkB,QAAuC,oBAAoB;AAsCtF;AACA;;;;;AAKA,OAAO,IAAMC,UAAU,GAA8B,SAAAA,CAAAC,KAAK;EAC9C,IAAAC,SAAS,GAA8BD,KAAK,CAAAC,SAAnC;IAAEC,EAAE,GAA0BF,KAAK,CAAAE,EAA/B;IAAEC,KAAK,GAAmBH,KAAK,CAAAG,KAAxB;IAAKC,SAAS,GAAAC,MAAA,CAAKL,KAAK,EAA9C,4BAAsC,CAAF;EAE1C;EACA,OACIJ,KAAA,CAAAU,aAAA,QAAAC,QAAA,KAASH,SAAS;IAAEH,SAAS,EAAEJ,OAAO,CAACW,qBAAqB;IAAEC,IAAI,EAAC;EAAK,IACpEb,KAAA,CAAAU,aAAA;IAAKL,SAAS,EAAEN,UAAU,CAACE,OAAO,CAACa,WAAW,EAAET,SAAS;EAAC,EAAI,CAC5D;AAEd,CAAC;AAEDF,UAAU,CAACY,WAAW,GAAG,GAAAC,MAAA,CAAGd,kBAAkB,gBAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}