{"ast":null,"code":"/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __rest } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { Classes, mergeRefs } from \"../../common\";\nimport { DISPLAYNAME_PREFIX } from \"../../common/props\";\n/**\n * Renders common control elements, with additional props to customize appearance.\n * This component is not exported and is only used within this module for `Checkbox`, `Radio`, and `Switch` below.\n */\nvar ControlInternal = React.forwardRef(function (props, ref) {\n  var _a;\n  var alignIndicator = props.alignIndicator,\n    children = props.children,\n    className = props.className,\n    indicatorChildren = props.indicatorChildren,\n    inline = props.inline,\n    inputRef = props.inputRef,\n    label = props.label,\n    labelElement = props.labelElement,\n    // eslint-disable-next-line @typescript-eslint/no-deprecated\n    large = props.large,\n    _b = props.size,\n    size = _b === void 0 ? \"medium\" : _b,\n    style = props.style,\n    type = props.type,\n    typeClassName = props.typeClassName,\n    _c = props.tagName,\n    tagName = _c === void 0 ? \"label\" : _c,\n    htmlProps = __rest(props, [\"alignIndicator\", \"children\", \"className\", \"indicatorChildren\", \"inline\", \"inputRef\", \"label\", \"labelElement\", \"large\", \"size\", \"style\", \"type\", \"typeClassName\", \"tagName\"]);\n  var classes = classNames(Classes.CONTROL, typeClassName, (_a = {}, _a[Classes.DISABLED] = htmlProps.disabled, _a[Classes.INLINE] = inline, _a), Classes.alignmentClass(alignIndicator), Classes.sizeClass(size, {\n    large: large\n  }), className);\n  return React.createElement(tagName, {\n    className: classes,\n    ref: ref,\n    style: style\n  }, React.createElement(\"input\", __assign({}, htmlProps, {\n    ref: inputRef,\n    type: type\n  })), React.createElement(\"span\", {\n    className: Classes.CONTROL_INDICATOR\n  }, indicatorChildren), label, labelElement, children);\n});\nControlInternal.displayName = \"\".concat(DISPLAYNAME_PREFIX, \".Control\");\n/**\n * Switch component.\n *\n * @see https://blueprintjs.com/docs/#core/components/switch\n */\nexport var Switch = React.forwardRef(function (props, ref) {\n  var innerLabelChecked = props.innerLabelChecked,\n    innerLabel = props.innerLabel,\n    controlProps = __rest(props, [\"innerLabelChecked\", \"innerLabel\"]);\n  var switchLabels = innerLabel || innerLabelChecked ? [React.createElement(\"div\", {\n    key: \"checked\",\n    className: Classes.CONTROL_INDICATOR_CHILD\n  }, React.createElement(\"div\", {\n    className: Classes.SWITCH_INNER_TEXT\n  }, innerLabelChecked ? innerLabelChecked : innerLabel)), React.createElement(\"div\", {\n    key: \"unchecked\",\n    className: Classes.CONTROL_INDICATOR_CHILD\n  }, React.createElement(\"div\", {\n    className: Classes.SWITCH_INNER_TEXT\n  }, innerLabel))] : null;\n  return React.createElement(ControlInternal, __assign({}, controlProps, {\n    indicatorChildren: switchLabels,\n    ref: ref,\n    type: \"checkbox\",\n    typeClassName: Classes.SWITCH\n  }));\n});\nSwitch.displayName = \"\".concat(DISPLAYNAME_PREFIX, \".Switch\");\n/**\n * Radio component.\n *\n * @see https://blueprintjs.com/docs/#core/components/radio\n */\nexport var Radio = React.forwardRef(function (props, ref) {\n  return React.createElement(ControlInternal, __assign({}, props, {\n    ref: ref,\n    type: \"radio\",\n    typeClassName: Classes.RADIO\n  }));\n});\nRadio.displayName = \"\".concat(DISPLAYNAME_PREFIX, \".Radio\");\n/**\n * Checkbox component.\n *\n * @see https://blueprintjs.com/docs/#core/components/checkbox\n */\nexport var Checkbox = React.forwardRef(function (props, ref) {\n  var defaultIndeterminate = props.defaultIndeterminate,\n    indeterminate = props.indeterminate,\n    onChange = props.onChange,\n    controlProps = __rest(props, [\"defaultIndeterminate\", \"indeterminate\", \"onChange\"]);\n  var _a = React.useState(indeterminate || defaultIndeterminate || false),\n    isIndeterminate = _a[0],\n    setIsIndeterminate = _a[1];\n  var localInputRef = React.useRef(null);\n  var inputRef = mergeRefs(props.inputRef, localInputRef);\n  var handleChange = React.useCallback(function (evt) {\n    // update state immediately only if uncontrolled\n    if (indeterminate === undefined) {\n      setIsIndeterminate(evt.target.indeterminate);\n    }\n    // otherwise wait for props change. always invoke handler.\n    onChange === null || onChange === void 0 ? void 0 : onChange(evt);\n  }, [indeterminate, onChange]);\n  React.useEffect(function () {\n    if (indeterminate !== undefined) {\n      setIsIndeterminate(indeterminate);\n    }\n  }, [indeterminate]);\n  React.useEffect(function () {\n    if (localInputRef.current != null) {\n      localInputRef.current.indeterminate = isIndeterminate;\n    }\n  }, [localInputRef, isIndeterminate]);\n  return React.createElement(ControlInternal, __assign({}, controlProps, {\n    inputRef: inputRef,\n    onChange: handleChange,\n    ref: ref,\n    type: \"checkbox\",\n    typeClassName: Classes.CHECKBOX\n  }));\n});\nCheckbox.displayName = \"\".concat(DISPLAYNAME_PREFIX, \".Checkbox\");","map":{"version":3,"names":["classNames","React","Classes","mergeRefs","DISPLAYNAME_PREFIX","ControlInternal","forwardRef","props","ref","alignIndicator","children","className","indicatorChildren","inline","inputRef","label","labelElement","large","_b","size","style","type","typeClassName","_c","tagName","htmlProps","__rest","classes","CONTROL","_a","DISABLED","disabled","INLINE","alignmentClass","sizeClass","createElement","__assign","CONTROL_INDICATOR","displayName","concat","Switch","innerLabelChecked","innerLabel","controlProps","switchLabels","key","CONTROL_INDICATOR_CHILD","SWITCH_INNER_TEXT","SWITCH","Radio","RADIO","Checkbox","defaultIndeterminate","indeterminate","onChange","useState","isIndeterminate","setIsIndeterminate","localInputRef","useRef","handleChange","useCallback","evt","undefined","target","useEffect","current","CHECKBOX"],"sources":["C:\\Users\\deepa\\Deepak\\Working-File\\React-Project\\new-working-file\\React-Project\\my-app\\node_modules\\@blueprintjs\\core\\src\\components\\forms\\controls.tsx"],"sourcesContent":["/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport classNames from \"classnames\";\nimport * as React from \"react\";\n\nimport { Classes, mergeRefs } from \"../../common\";\nimport { DISPLAYNAME_PREFIX } from \"../../common/props\";\n\nimport type { ControlProps } from \"./controlProps\";\n\n/** Internal props for Checkbox/Radio/Switch to render correctly. */\ninterface ControlInternalProps extends ControlProps {\n    type: \"checkbox\" | \"radio\";\n    typeClassName: string;\n    indicatorChildren?: React.ReactNode;\n}\n\n/**\n * Renders common control elements, with additional props to customize appearance.\n * This component is not exported and is only used within this module for `Checkbox`, `Radio`, and `Switch` below.\n */\nconst ControlInternal: React.FC<ControlInternalProps> = React.forwardRef<HTMLLabelElement, ControlInternalProps>(\n    (props, ref) => {\n        const {\n            alignIndicator,\n            children,\n            className,\n            indicatorChildren,\n            inline,\n            inputRef,\n            label,\n            labelElement,\n            // eslint-disable-next-line @typescript-eslint/no-deprecated\n            large,\n            size = \"medium\",\n            style,\n            type,\n            typeClassName,\n            tagName = \"label\",\n            ...htmlProps\n        } = props;\n\n        const classes = classNames(\n            Classes.CONTROL,\n            typeClassName,\n            {\n                [Classes.DISABLED]: htmlProps.disabled,\n                [Classes.INLINE]: inline,\n            },\n            Classes.alignmentClass(alignIndicator),\n            Classes.sizeClass(size, { large }),\n            className,\n        );\n\n        return React.createElement(\n            tagName,\n            { className: classes, ref, style },\n            <input {...htmlProps} ref={inputRef} type={type} />,\n            <span className={Classes.CONTROL_INDICATOR}>{indicatorChildren}</span>,\n            label,\n            labelElement,\n            children,\n        );\n    },\n);\nControlInternal.displayName = `${DISPLAYNAME_PREFIX}.Control`;\n\n//\n// Switch\n//\n\n/**\n * Switch component props.\n */\nexport interface SwitchProps extends ControlProps {\n    /**\n     * Text to display inside the switch indicator when checked.\n     * If `innerLabel` is provided and this prop is omitted, then `innerLabel`\n     * will be used for both states.\n     *\n     * @default innerLabel\n     */\n    innerLabelChecked?: string;\n\n    /**\n     * Text to display inside the switch indicator when unchecked.\n     */\n    innerLabel?: string;\n}\n\n/**\n * Switch component.\n *\n * @see https://blueprintjs.com/docs/#core/components/switch\n */\nexport const Switch: React.FC<SwitchProps> = React.forwardRef((props, ref) => {\n    const { innerLabelChecked, innerLabel, ...controlProps } = props;\n    const switchLabels =\n        innerLabel || innerLabelChecked\n            ? [\n                  <div key=\"checked\" className={Classes.CONTROL_INDICATOR_CHILD}>\n                      <div className={Classes.SWITCH_INNER_TEXT}>\n                          {innerLabelChecked ? innerLabelChecked : innerLabel}\n                      </div>\n                  </div>,\n                  <div key=\"unchecked\" className={Classes.CONTROL_INDICATOR_CHILD}>\n                      <div className={Classes.SWITCH_INNER_TEXT}>{innerLabel}</div>\n                  </div>,\n              ]\n            : null;\n    return (\n        <ControlInternal\n            {...controlProps}\n            indicatorChildren={switchLabels}\n            ref={ref}\n            type=\"checkbox\"\n            typeClassName={Classes.SWITCH}\n        />\n    );\n});\nSwitch.displayName = `${DISPLAYNAME_PREFIX}.Switch`;\n\n//\n// Radio\n//\n\n/**\n * Radio component props.\n */\nexport type RadioProps = ControlProps;\n\n/**\n * Radio component.\n *\n * @see https://blueprintjs.com/docs/#core/components/radio\n */\nexport const Radio: React.FC<RadioProps> = React.forwardRef((props, ref) => {\n    return <ControlInternal {...props} ref={ref} type=\"radio\" typeClassName={Classes.RADIO} />;\n});\nRadio.displayName = `${DISPLAYNAME_PREFIX}.Radio`;\n\n//\n// Checkbox\n//\n\n/**\n * Checkbox component props.\n */\nexport interface CheckboxProps extends ControlProps {\n    /** Whether this checkbox is initially indeterminate (uncontrolled mode). */\n    defaultIndeterminate?: boolean;\n\n    /**\n     * Whether this checkbox is indeterminate, or \"partially checked.\"\n     * The checkbox will appear with a small dash instead of a tick to indicate that the value\n     * is not exactly true or false.\n     *\n     * Note that this prop takes precendence over `checked`: if a checkbox is marked both\n     * `checked` and `indeterminate` via props, it will appear as indeterminate in the DOM.\n     */\n    indeterminate?: boolean;\n}\n\n/**\n * Checkbox component.\n *\n * @see https://blueprintjs.com/docs/#core/components/checkbox\n */\nexport const Checkbox: React.FC<CheckboxProps> = React.forwardRef((props, ref) => {\n    const { defaultIndeterminate, indeterminate, onChange, ...controlProps } = props;\n\n    const [isIndeterminate, setIsIndeterminate] = React.useState<boolean>(\n        indeterminate || defaultIndeterminate || false,\n    );\n\n    const localInputRef = React.useRef<HTMLInputElement>(null);\n    const inputRef = mergeRefs(props.inputRef, localInputRef);\n\n    const handleChange = React.useCallback(\n        (evt: React.ChangeEvent<HTMLInputElement>) => {\n            // update state immediately only if uncontrolled\n            if (indeterminate === undefined) {\n                setIsIndeterminate(evt.target.indeterminate);\n            }\n            // otherwise wait for props change. always invoke handler.\n            onChange?.(evt);\n        },\n        [indeterminate, onChange],\n    );\n\n    React.useEffect(() => {\n        if (indeterminate !== undefined) {\n            setIsIndeterminate(indeterminate);\n        }\n    }, [indeterminate]);\n\n    React.useEffect(() => {\n        if (localInputRef.current != null) {\n            localInputRef.current.indeterminate = isIndeterminate;\n        }\n    }, [localInputRef, isIndeterminate]);\n\n    return (\n        <ControlInternal\n            {...controlProps}\n            inputRef={inputRef}\n            onChange={handleChange}\n            ref={ref}\n            type=\"checkbox\"\n            typeClassName={Classes.CHECKBOX}\n        />\n    );\n});\nCheckbox.displayName = `${DISPLAYNAME_PREFIX}.Checkbox`;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}