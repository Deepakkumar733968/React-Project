{"ast":null,"code":"/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __rest } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { Classes } from \"../../common\";\nimport { DISPLAYNAME_PREFIX } from \"../../common/props\";\nimport { clamp } from \"../../common/utils\";\n/**\n * Progress bar component.\n *\n * @see https://blueprintjs.com/docs/#core/components/progress-bar\n */\nexport var ProgressBar = function (props) {\n  var _a;\n  var _b = props.animate,\n    animate = _b === void 0 ? true : _b,\n    className = props.className,\n    intent = props.intent,\n    _c = props.stripes,\n    stripes = _c === void 0 ? true : _c,\n    value = props.value,\n    htmlProps = __rest(props, [\"animate\", \"className\", \"intent\", \"stripes\", \"value\"]);\n  var classes = classNames(Classes.PROGRESS_BAR, Classes.intentClass(intent), (_a = {}, _a[Classes.PROGRESS_NO_ANIMATION] = !animate, _a[Classes.PROGRESS_NO_STRIPES] = !stripes, _a), className);\n  var percent = value == null ? undefined : 100 * clamp(value, 0, 1);\n  // don't set width if value is null (rely on default CSS value)\n  var width = percent == null ? undefined : percent + \"%\";\n  return React.createElement(\"div\", __assign({}, htmlProps, {\n    \"aria-valuemax\": 100,\n    \"aria-valuemin\": 0,\n    \"aria-valuenow\": percent == null ? undefined : Math.round(percent),\n    className: classes,\n    role: \"progressbar\"\n  }), React.createElement(\"div\", {\n    className: Classes.PROGRESS_METER,\n    style: {\n      width: width\n    }\n  }));\n};\nProgressBar.displayName = \"\".concat(DISPLAYNAME_PREFIX, \".ProgressBar\");","map":{"version":3,"names":["classNames","React","Classes","DISPLAYNAME_PREFIX","clamp","ProgressBar","props","_b","animate","className","intent","_c","stripes","value","htmlProps","__rest","classes","PROGRESS_BAR","intentClass","_a","PROGRESS_NO_ANIMATION","PROGRESS_NO_STRIPES","percent","undefined","width","createElement","__assign","Math","round","role","PROGRESS_METER","style","displayName","concat"],"sources":["C:\\Users\\deepa\\Deepak\\Working-File\\React-Project\\new-working-file\\React-Project\\my-app\\node_modules\\@blueprintjs\\core\\src\\components\\progress-bar\\progressBar.tsx"],"sourcesContent":["/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport classNames from \"classnames\";\nimport * as React from \"react\";\n\nimport { Classes } from \"../../common\";\nimport { DISPLAYNAME_PREFIX, type HTMLDivProps, type IntentProps, type Props } from \"../../common/props\";\nimport { clamp } from \"../../common/utils\";\n\nexport interface ProgressBarProps extends Props, IntentProps, HTMLDivProps {\n    /**\n     * Whether the background should animate.\n     *\n     * @default true\n     */\n    animate?: boolean;\n\n    /**\n     * Whether the background should be striped.\n     *\n     * @default true\n     */\n    stripes?: boolean;\n\n    /**\n     * A value between 0 and 1 (inclusive) representing how far along the operation is.\n     * Values below 0 or above 1 will be interpreted as 0 or 1, respectively.\n     * Omitting this prop will result in an \"indeterminate\" progress meter that fills the entire bar.\n     */\n    value?: number;\n}\n\n/**\n * Progress bar component.\n *\n * @see https://blueprintjs.com/docs/#core/components/progress-bar\n */\nexport const ProgressBar: React.FC<ProgressBarProps> = props => {\n    const { animate = true, className, intent, stripes = true, value, ...htmlProps } = props;\n    const classes = classNames(\n        Classes.PROGRESS_BAR,\n        Classes.intentClass(intent),\n        {\n            [Classes.PROGRESS_NO_ANIMATION]: !animate,\n            [Classes.PROGRESS_NO_STRIPES]: !stripes,\n        },\n        className,\n    );\n    const percent = value == null ? undefined : 100 * clamp(value, 0, 1);\n    // don't set width if value is null (rely on default CSS value)\n    const width = percent == null ? undefined : percent + \"%\";\n\n    return (\n        <div\n            {...htmlProps}\n            aria-valuemax={100}\n            aria-valuemin={0}\n            aria-valuenow={percent == null ? undefined : Math.round(percent)}\n            className={classes}\n            role=\"progressbar\"\n        >\n            <div className={Classes.PROGRESS_METER} style={{ width }} />\n        </div>\n    );\n};\n\nProgressBar.displayName = `${DISPLAYNAME_PREFIX}.ProgressBar`;\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAgBA,OAAOA,UAAU,MAAM,YAAY;AACnC,OAAO,KAAKC,KAAK,MAAM,OAAO;AAE9B,SAASC,OAAO,QAAQ,cAAc;AACtC,SAASC,kBAAkB,QAAyD,oBAAoB;AACxG,SAASC,KAAK,QAAQ,oBAAoB;AAyB1C;;;;;AAKA,OAAO,IAAMC,WAAW,GAA+B,SAAAA,CAAAC,KAAK;;EAChD,IAAAC,EAAA,GAA2ED,KAAK,CAAAE,OAAlE;IAAdA,OAAO,GAAAD,EAAA,cAAG,IAAI,GAAAA,EAAA;IAAEE,SAAS,GAAkDH,KAAK,CAAAG,SAAvD;IAAEC,MAAM,GAA0CJ,KAAK,CAAAI,MAA/C;IAAEC,EAAA,GAAwCL,KAAK,CAAAM,OAA/B;IAAdA,OAAO,GAAAD,EAAA,cAAG,IAAI,GAAAA,EAAA;IAAEE,KAAK,GAAmBP,KAAK,CAAAO,KAAxB;IAAKC,SAAS,GAAAC,MAAA,CAAKT,KAAK,EAAlF,sDAA0E,CAAF;EAC9E,IAAMU,OAAO,GAAGhB,UAAU,CACtBE,OAAO,CAACe,YAAY,EACpBf,OAAO,CAACgB,WAAW,CAACR,MAAM,CAAC,GAAAS,EAAA,OAEvBA,EAAA,CAACjB,OAAO,CAACkB,qBAAqB,IAAG,CAACZ,OAAO,EACzCW,EAAA,CAACjB,OAAO,CAACmB,mBAAmB,IAAG,CAACT,OAAO,E,KAE3CH,SAAS,CACZ;EACD,IAAMa,OAAO,GAAGT,KAAK,IAAI,IAAI,GAAGU,SAAS,GAAG,GAAG,GAAGnB,KAAK,CAACS,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC;EACpE;EACA,IAAMW,KAAK,GAAGF,OAAO,IAAI,IAAI,GAAGC,SAAS,GAAGD,OAAO,GAAG,GAAG;EAEzD,OACIrB,KAAA,CAAAwB,aAAA,QAAAC,QAAA,KACQZ,SAAS;IAAA,iBACE,GAAG;IAAA,iBACH,CAAC;IAAA,iBACDQ,OAAO,IAAI,IAAI,GAAGC,SAAS,GAAGI,IAAI,CAACC,KAAK,CAACN,OAAO,CAAC;IAChEb,SAAS,EAAEO,OAAO;IAClBa,IAAI,EAAC;EAAa,IAElB5B,KAAA,CAAAwB,aAAA;IAAKhB,SAAS,EAAEP,OAAO,CAAC4B,cAAc;IAAEC,KAAK,EAAE;MAAEP,KAAK,EAAAA;IAAA;EAAE,EAAI,CAC1D;AAEd,CAAC;AAEDnB,WAAW,CAAC2B,WAAW,GAAG,GAAAC,MAAA,CAAG9B,kBAAkB,iBAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}