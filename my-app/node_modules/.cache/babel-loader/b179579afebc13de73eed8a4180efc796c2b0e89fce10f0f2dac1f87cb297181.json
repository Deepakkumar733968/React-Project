{"ast":null,"code":"/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __rest } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { useInteractiveAttributes } from \"../../accessibility/useInteractiveAttributes\";\nimport { Classes, DISPLAYNAME_PREFIX, removeNonHTMLProps, Utils } from \"../../common\";\nimport { isReactNodeEmpty } from \"../../common/utils\";\nimport { Icon } from \"../icon/icon\";\nimport { Text } from \"../text/text\";\nimport { TagRemoveButton } from \"./tagRemoveButton\";\n/**\n * Tag component.\n *\n * @see https://blueprintjs.com/docs/#core/components/tag\n */\nexport var Tag = React.forwardRef(function (props, ref) {\n  var _a;\n  var children = props.children,\n    className = props.className,\n    endIcon = props.endIcon,\n    _b = props.fill,\n    fill = _b === void 0 ? false : _b,\n    icon = props.icon,\n    intent = props.intent,\n    interactive = props.interactive,\n    // eslint-disable-next-line @typescript-eslint/no-deprecated\n    _c = props.large,\n    // eslint-disable-next-line @typescript-eslint/no-deprecated\n    large = _c === void 0 ? false : _c,\n    _d = props.minimal,\n    minimal = _d === void 0 ? false : _d,\n    multiline = props.multiline,\n    onRemove = props.onRemove,\n    // eslint-disable-next-line @typescript-eslint/no-deprecated\n    rightIcon = props.rightIcon,\n    _e = props.round,\n    round = _e === void 0 ? false : _e,\n    _f = props.size,\n    size = _f === void 0 ? \"medium\" : _f,\n    _g = props.tabIndex,\n    tabIndex = _g === void 0 ? 0 : _g,\n    htmlTitle = props.htmlTitle,\n    htmlProps = __rest(props, [\"children\", \"className\", \"endIcon\", \"fill\", \"icon\", \"intent\", \"interactive\", \"large\", \"minimal\", \"multiline\", \"onRemove\", \"rightIcon\", \"round\", \"size\", \"tabIndex\", \"htmlTitle\"]);\n  var isRemovable = Utils.isFunction(onRemove);\n  var isInteractive = interactive !== null && interactive !== void 0 ? interactive : htmlProps.onClick != null;\n  var _h = useInteractiveAttributes(isInteractive, props, ref, {\n      defaultTabIndex: 0,\n      disabledTabIndex: undefined\n    }),\n    active = _h[0],\n    interactiveProps = _h[1];\n  var tagClasses = classNames(Classes.TAG, Classes.intentClass(intent), Classes.sizeClass(size, {\n    large: large\n  }), (_a = {}, _a[Classes.ACTIVE] = active, _a[Classes.FILL] = fill, _a[Classes.INTERACTIVE] = isInteractive, _a[Classes.MINIMAL] = minimal, _a[Classes.ROUND] = round, _a), className);\n  return React.createElement(\"span\", __assign({}, removeNonHTMLProps(htmlProps), interactiveProps, {\n    className: tagClasses\n  }), React.createElement(Icon, {\n    icon: icon\n  }), !isReactNodeEmpty(children) && React.createElement(Text, {\n    className: Classes.FILL,\n    ellipsize: !multiline,\n    tagName: \"span\",\n    title: htmlTitle\n  }, children), React.createElement(Icon, {\n    icon: endIcon !== null && endIcon !== void 0 ? endIcon : rightIcon\n  }), isRemovable && React.createElement(TagRemoveButton, __assign({}, props)));\n});\nTag.displayName = \"\".concat(DISPLAYNAME_PREFIX, \".Tag\");","map":{"version":3,"names":["classNames","React","useInteractiveAttributes","Classes","DISPLAYNAME_PREFIX","removeNonHTMLProps","Utils","isReactNodeEmpty","Icon","Text","TagRemoveButton","Tag","forwardRef","props","ref","children","className","endIcon","_b","fill","icon","intent","interactive","_c","large","_d","minimal","multiline","onRemove","rightIcon","_e","round","_f","size","_g","tabIndex","htmlTitle","htmlProps","__rest","isRemovable","isFunction","isInteractive","onClick","_h","defaultTabIndex","disabledTabIndex","undefined","active","interactiveProps","tagClasses","TAG","intentClass","sizeClass","_a","ACTIVE","FILL","INTERACTIVE","MINIMAL","ROUND","createElement","__assign","ellipsize","tagName","title","displayName","concat"],"sources":["C:\\Users\\deepa\\Deepak\\Working-File\\React-Project\\new-working-file\\React-Project\\my-app\\node_modules\\@blueprintjs\\core\\src\\components\\tag\\tag.tsx"],"sourcesContent":["/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport classNames from \"classnames\";\nimport * as React from \"react\";\n\nimport type { IconName } from \"@blueprintjs/icons\";\n\nimport { useInteractiveAttributes } from \"../../accessibility/useInteractiveAttributes\";\nimport {\n    Classes,\n    DISPLAYNAME_PREFIX,\n    type IntentProps,\n    type MaybeElement,\n    type Props,\n    removeNonHTMLProps,\n    Utils,\n} from \"../../common\";\nimport { isReactNodeEmpty } from \"../../common/utils\";\nimport { Icon } from \"../icon/icon\";\nimport { Text } from \"../text/text\";\n\nimport { TagRemoveButton } from \"./tagRemoveButton\";\nimport type { TagSharedProps } from \"./tagSharedProps\";\n\nexport interface TagProps\n    extends Props,\n        IntentProps,\n        TagSharedProps,\n        React.RefAttributes<HTMLSpanElement>,\n        React.HTMLAttributes<HTMLSpanElement> {\n    /**\n     * Child nodes which will be rendered inside a `<Text>` element.\n     */\n    children?: React.ReactNode;\n\n    /**\n     * HTML title to be passed to the <Text> component\n     */\n    htmlTitle?: string;\n\n    /**\n     * Whether the tag should visually respond to user interactions. If set to `true`, hovering over the\n     * tag will change its color and mouse cursor.\n     *\n     * Tags will be marked as interactive automatically if an onClick handler is provided and this prop is not.\n     *\n     * @default false\n     */\n    interactive?: boolean;\n\n    /**\n     * Name of a Blueprint UI icon (or an icon element) to render on the left side of the tag,\n     * before the child nodes.\n     */\n    icon?: IconName | MaybeElement;\n\n    /**\n     * Whether tag content should be allowed to occupy multiple lines.\n     * If `false`, a single line of text will be truncated with an ellipsis if it overflows.\n     * Note that icons will be vertically centered relative to multiline text.\n     *\n     * @default false\n     */\n    multiline?: boolean;\n\n    /**\n     * Click handler for remove button.\n     * The remove button will only be rendered if this prop is defined.\n     */\n    onRemove?: (e: React.MouseEvent<HTMLButtonElement>, tagProps: TagProps) => void;\n}\n\n/**\n * Tag component.\n *\n * @see https://blueprintjs.com/docs/#core/components/tag\n */\nexport const Tag: React.FC<TagProps> = React.forwardRef((props, ref) => {\n    const {\n        children,\n        className,\n        endIcon,\n        fill = false,\n        icon,\n        intent,\n        interactive,\n        // eslint-disable-next-line @typescript-eslint/no-deprecated\n        large = false,\n        minimal = false,\n        multiline,\n        onRemove,\n        // eslint-disable-next-line @typescript-eslint/no-deprecated\n        rightIcon,\n        round = false,\n        size = \"medium\",\n        tabIndex = 0,\n        htmlTitle,\n        ...htmlProps\n    } = props;\n\n    const isRemovable = Utils.isFunction(onRemove);\n    const isInteractive = interactive ?? htmlProps.onClick != null;\n\n    const [active, interactiveProps] = useInteractiveAttributes(isInteractive, props, ref, {\n        defaultTabIndex: 0,\n        disabledTabIndex: undefined,\n    });\n\n    const tagClasses = classNames(\n        Classes.TAG,\n        Classes.intentClass(intent),\n        Classes.sizeClass(size, { large }),\n        {\n            [Classes.ACTIVE]: active,\n            [Classes.FILL]: fill,\n            [Classes.INTERACTIVE]: isInteractive,\n            [Classes.MINIMAL]: minimal,\n            [Classes.ROUND]: round,\n        },\n        className,\n    );\n\n    return (\n        <span {...removeNonHTMLProps(htmlProps)} {...interactiveProps} className={tagClasses}>\n            <Icon icon={icon} />\n            {!isReactNodeEmpty(children) && (\n                <Text className={Classes.FILL} ellipsize={!multiline} tagName=\"span\" title={htmlTitle}>\n                    {children}\n                </Text>\n            )}\n            <Icon icon={endIcon ?? rightIcon} />\n            {isRemovable && <TagRemoveButton {...props} />}\n        </span>\n    );\n});\nTag.displayName = `${DISPLAYNAME_PREFIX}.Tag`;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}