{"ast":null,"code":"/*\n * Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __rest } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { Classes } from \"../../common\";\nimport { DISPLAYNAME_PREFIX } from \"../../common/props\";\nvar NS = Classes.getClassNamespace();\n// this is a simple component, unit tests would be mostly tautological\n/* istanbul ignore next */\n/**\n * File input component.\n *\n * @see https://blueprintjs.com/docs/#core/components/file-input\n */\nexport var FileInput = function (props) {\n  var _a, _b, _c;\n  var buttonText = props.buttonText,\n    className = props.className,\n    disabled = props.disabled,\n    fill = props.fill,\n    _d = props.hasSelection,\n    hasSelection = _d === void 0 ? false : _d,\n    _e = props.inputProps,\n    inputProps = _e === void 0 ? {} : _e,\n    // eslint-disable-next-line @typescript-eslint/no-deprecated\n    _f = props.large,\n    // eslint-disable-next-line @typescript-eslint/no-deprecated\n    large = _f === void 0 ? false : _f,\n    onInputChange = props.onInputChange,\n    _g = props.size,\n    size = _g === void 0 ? \"medium\" : _g,\n    // eslint-disable-next-line @typescript-eslint/no-deprecated\n    _h = props.small,\n    // eslint-disable-next-line @typescript-eslint/no-deprecated\n    small = _h === void 0 ? false : _h,\n    _j = props.text,\n    text = _j === void 0 ? \"Choose file...\" : _j,\n    htmlProps = __rest(props, [\"buttonText\", \"className\", \"disabled\", \"fill\", \"hasSelection\", \"inputProps\", \"large\", \"onInputChange\", \"size\", \"small\", \"text\"]);\n  var rootClasses = classNames(className, Classes.FILE_INPUT, (_a = {}, _a[Classes.DISABLED] = disabled, _a[Classes.FILL] = fill, _a[Classes.FILE_INPUT_HAS_SELECTION] = hasSelection, _a), Classes.sizeClass(size, {\n    large: large,\n    small: small\n  }));\n  var uploadProps = (_b = {}, _b[\"\".concat(NS, \"-button-text\")] = buttonText, _b.className = classNames(Classes.FILE_UPLOAD_INPUT, (_c = {}, _c[Classes.FILE_UPLOAD_INPUT_CUSTOM_TEXT] = !!buttonText, _c)), _b);\n  var handleInputChange = function (e) {\n    var _a;\n    onInputChange === null || onInputChange === void 0 ? void 0 : onInputChange(e);\n    (_a = inputProps === null || inputProps === void 0 ? void 0 : inputProps.onChange) === null || _a === void 0 ? void 0 : _a.call(inputProps, e);\n  };\n  return React.createElement(\"label\", __assign({}, htmlProps, {\n    className: rootClasses\n  }), React.createElement(\"input\", __assign({}, inputProps, {\n    onChange: handleInputChange,\n    type: \"file\",\n    disabled: disabled\n  })), React.createElement(\"span\", __assign({}, uploadProps), text));\n};\nFileInput.displayName = \"\".concat(DISPLAYNAME_PREFIX, \".FileInput\");","map":{"version":3,"names":["classNames","React","Classes","DISPLAYNAME_PREFIX","NS","getClassNamespace","FileInput","props","buttonText","className","disabled","fill","_d","hasSelection","_e","inputProps","_f","large","onInputChange","_g","size","_h","small","_j","text","htmlProps","__rest","rootClasses","FILE_INPUT","_a","DISABLED","FILL","FILE_INPUT_HAS_SELECTION","sizeClass","uploadProps","_b","concat","FILE_UPLOAD_INPUT","_c","FILE_UPLOAD_INPUT_CUSTOM_TEXT","handleInputChange","e","onChange","call","createElement","__assign","type","displayName"],"sources":["C:\\Users\\deepa\\Deepak\\Working-File\\React-Project\\new-working-file\\React-Project\\my-app\\node_modules\\@blueprintjs\\core\\src\\components\\forms\\fileInput.tsx"],"sourcesContent":["/*\n * Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport classNames from \"classnames\";\nimport * as React from \"react\";\n\nimport { Classes } from \"../../common\";\nimport { DISPLAYNAME_PREFIX, type Props } from \"../../common/props\";\nimport type { Size } from \"../../common/size\";\n\nexport interface FileInputProps extends React.LabelHTMLAttributes<HTMLLabelElement>, Props {\n    /**\n     * Whether the file input is non-interactive.\n     * Setting this to `true` will automatically disable the child input too.\n     */\n    disabled?: boolean;\n\n    /**\n     * Whether the file input should take up the full width of its container.\n     */\n    fill?: boolean;\n\n    /**\n     * Whether the user has made a selection in the input. This will affect the component's\n     * text styling. Make sure to set a non-empty value for the text prop as well.\n     *\n     * @default false\n     */\n    hasSelection?: boolean;\n\n    /**\n     * The props to pass to the child input.\n     * `disabled` will be ignored in favor of the top-level prop.\n     * `type` will be ignored, because the input _must_ be `type=\"file\"`.\n     * Pass `onChange` here to be notified when the user selects a file.\n     */\n    inputProps?: React.HTMLProps<HTMLInputElement>;\n\n    /**\n     * Whether the file input should appear with large styling.\n     *\n     * @deprecated use `size=\"large\"` instead.\n     * @default false\n     */\n    large?: boolean;\n\n    /**\n     * Callback invoked on `<input>` `change` events.\n     *\n     * This callback is offered as a convenience; it is equivalent to `inputProps.onChange`.\n     *\n     * __Note:__ The top-level `onChange` prop is passed to the `<label>` element rather than the `<input>`,\n     * which may not be what you expect.\n     */\n    onInputChange?: React.FormEventHandler<HTMLInputElement>;\n\n    /**\n     * Whether the file input should appear with small styling.\n     *\n     * @deprecated use `size=\"small\"` instead.\n     * @default false\n     */\n    small?: boolean;\n\n    /**\n     * The size of the file input.\n     */\n    size?: Size;\n\n    /**\n     * The text to display inside the input.\n     *\n     * @default \"Choose file...\"\n     */\n    text?: React.ReactNode;\n\n    /**\n     * The button text to display on the right side of the input.\n     *\n     * @default \"Browse\"\n     */\n    buttonText?: string;\n}\n\nconst NS = Classes.getClassNamespace();\n\n// this is a simple component, unit tests would be mostly tautological\n/* istanbul ignore next */\n/**\n * File input component.\n *\n * @see https://blueprintjs.com/docs/#core/components/file-input\n */\nexport const FileInput = (props: FileInputProps) => {\n    const {\n        buttonText,\n        className,\n        disabled,\n        fill,\n        hasSelection = false,\n        inputProps = {},\n        // eslint-disable-next-line @typescript-eslint/no-deprecated\n        large = false,\n        onInputChange,\n        size = \"medium\",\n        // eslint-disable-next-line @typescript-eslint/no-deprecated\n        small = false,\n        text = \"Choose file...\",\n        ...htmlProps\n    } = props;\n\n    const rootClasses = classNames(\n        className,\n        Classes.FILE_INPUT,\n        {\n            [Classes.DISABLED]: disabled,\n            [Classes.FILL]: fill,\n            [Classes.FILE_INPUT_HAS_SELECTION]: hasSelection,\n        },\n        Classes.sizeClass(size, { large, small }),\n    );\n\n    const uploadProps = {\n        [`${NS}-button-text`]: buttonText,\n        className: classNames(Classes.FILE_UPLOAD_INPUT, {\n            [Classes.FILE_UPLOAD_INPUT_CUSTOM_TEXT]: !!buttonText,\n        }),\n    } satisfies React.HTMLProps<HTMLElement>;\n\n    const handleInputChange = (e: React.FormEvent<HTMLInputElement>) => {\n        onInputChange?.(e);\n        inputProps?.onChange?.(e);\n    };\n\n    return (\n        <label {...htmlProps} className={rootClasses}>\n            <input {...inputProps} onChange={handleInputChange} type=\"file\" disabled={disabled} />\n            <span {...uploadProps}>{text}</span>\n        </label>\n    );\n};\n\nFileInput.displayName = `${DISPLAYNAME_PREFIX}.FileInput`;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}