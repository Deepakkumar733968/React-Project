{"ast":null,"code":"/*\n * Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __rest } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { Classes } from \"../../common\";\nimport { DISPLAYNAME_PREFIX } from \"../../common/props\";\n// this component is simple enough that tests would be purely tautological.\n/* istanbul ignore next */\n/**\n * Button group component.\n *\n * @see https://blueprintjs.com/docs/#core/components/button-group\n */\nexport var ButtonGroup = React.forwardRef(function (props, ref) {\n  var _a;\n  var alignText = props.alignText,\n    className = props.className,\n    fill = props.fill,\n    // eslint-disable-next-line @typescript-eslint/no-deprecated\n    minimal = props.minimal,\n    // eslint-disable-next-line @typescript-eslint/no-deprecated\n    outlined = props.outlined,\n    // eslint-disable-next-line @typescript-eslint/no-deprecated\n    large = props.large,\n    _b = props.size,\n    size = _b === void 0 ? \"medium\" : _b,\n    _c = props.variant,\n    variant = _c === void 0 ? \"solid\" : _c,\n    vertical = props.vertical,\n    htmlProps = __rest(props, [\"alignText\", \"className\", \"fill\", \"minimal\", \"outlined\", \"large\", \"size\", \"variant\", \"vertical\"]);\n  var buttonGroupClasses = classNames(Classes.BUTTON_GROUP, (_a = {}, _a[Classes.FILL] = fill, _a[Classes.VERTICAL] = vertical, _a), Classes.alignmentClass(alignText), Classes.sizeClass(size, {\n    large: large\n  }), Classes.variantClass(variant, {\n    minimal: minimal,\n    outlined: outlined\n  }), className);\n  return React.createElement(\"div\", __assign({}, htmlProps, {\n    ref: ref,\n    className: buttonGroupClasses\n  }), props.children);\n});\nButtonGroup.displayName = \"\".concat(DISPLAYNAME_PREFIX, \".ButtonGroup\");","map":{"version":3,"names":["classNames","React","Classes","DISPLAYNAME_PREFIX","ButtonGroup","forwardRef","props","ref","alignText","className","fill","minimal","outlined","large","_b","size","_c","variant","vertical","htmlProps","__rest","buttonGroupClasses","BUTTON_GROUP","_a","FILL","VERTICAL","alignmentClass","sizeClass","variantClass","createElement","__assign","children","displayName","concat"],"sources":["C:\\Users\\deepa\\Deepak\\Working-File\\React-Project\\new-working-file\\React-Project\\my-app\\node_modules\\@blueprintjs\\core\\src\\components\\button\\buttonGroup.tsx"],"sourcesContent":["/*\n * Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport classNames from \"classnames\";\nimport * as React from \"react\";\n\nimport { type Alignment, type ButtonVariant, Classes, type Size } from \"../../common\";\nimport { DISPLAYNAME_PREFIX, type HTMLDivProps, type Props } from \"../../common/props\";\n\nexport interface ButtonGroupProps extends Props, HTMLDivProps, React.RefAttributes<HTMLDivElement> {\n    /**\n     * Text alignment within button. By default, icons and text will be centered\n     * within the button. Passing `\"start\"` or `\"end\"` will align the button\n     * text to that side and push `icon` and `endIcon` to either edge. Passing\n     * `\"center\"` will center the text and icons together.\n     */\n    alignText?: Alignment;\n\n    /** Buttons in this group. */\n    children: React.ReactNode;\n\n    /**\n     * Whether the button group should take up the full width of its container.\n     *\n     * @default false\n     */\n    fill?: boolean;\n\n    /**\n     * Whether the child buttons should appear with minimal styling.\n     *\n     * @deprecated use `variant=\"minimal\"` instead\n     * @default false\n     */\n    minimal?: boolean;\n\n    /**\n     * Whether the child buttons should use outlined styles.\n     *\n     * @deprecated use `variant=\"outlined\"` instead\n     * @default false\n     */\n    outlined?: boolean;\n\n    /**\n     * Visual style variant for the child buttons.\n     *\n     * @default \"solid\"\n     */\n    variant?: ButtonVariant;\n\n    /**\n     * Whether the child buttons should appear with large styling.\n     *\n     * @deprecated use `size=\"large\"` instead.\n     * @default false\n     */\n    large?: boolean;\n\n    /**\n     * The size of the child buttons.\n     *\n     * @default \"medium\"\n     */\n    size?: Size;\n\n    /**\n     * Whether the button group should appear with vertical styling.\n     *\n     * @default false\n     */\n    vertical?: boolean;\n}\n\n// this component is simple enough that tests would be purely tautological.\n/* istanbul ignore next */\n/**\n * Button group component.\n *\n * @see https://blueprintjs.com/docs/#core/components/button-group\n */\nexport const ButtonGroup: React.FC<ButtonGroupProps> = React.forwardRef<HTMLDivElement, ButtonGroupProps>(\n    (props, ref) => {\n        const {\n            alignText,\n            className,\n            fill,\n            // eslint-disable-next-line @typescript-eslint/no-deprecated\n            minimal,\n            // eslint-disable-next-line @typescript-eslint/no-deprecated\n            outlined,\n            // eslint-disable-next-line @typescript-eslint/no-deprecated\n            large,\n            size = \"medium\",\n            variant = \"solid\",\n            vertical,\n            ...htmlProps\n        } = props;\n\n        const buttonGroupClasses = classNames(\n            Classes.BUTTON_GROUP,\n            {\n                [Classes.FILL]: fill,\n                [Classes.VERTICAL]: vertical,\n            },\n            Classes.alignmentClass(alignText),\n            Classes.sizeClass(size, { large }),\n            Classes.variantClass(variant, { minimal, outlined }),\n            className,\n        );\n        return (\n            <div {...htmlProps} ref={ref} className={buttonGroupClasses}>\n                {props.children}\n            </div>\n        );\n    },\n);\nButtonGroup.displayName = `${DISPLAYNAME_PREFIX}.ButtonGroup`;\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAgBA,OAAOA,UAAU,MAAM,YAAY;AACnC,OAAO,KAAKC,KAAK,MAAM,OAAO;AAE9B,SAA6CC,OAAO,QAAmB,cAAc;AACrF,SAASC,kBAAkB,QAAuC,oBAAoB;AAmEtF;AACA;AACA;;;;;AAKA,OAAO,IAAMC,WAAW,GAA+BH,KAAK,CAACI,UAAU,CACnE,UAACC,KAAK,EAAEC,GAAG;;EAEH,IAAAC,SAAS,GAaTF,KAAK,CAAAE,SAbI;IACTC,SAAS,GAYTH,KAAK,CAAAG,SAZI;IACTC,IAAI,GAWJJ,KAAK,CAAAI,IAXD;IACJ;IACAC,OAAO,GASPL,KAAK,CAAAK,OATE;IACP;IACAC,QAAQ,GAORN,KAAK,CAAAM,QAPG;IACR;IACAC,KAAK,GAKLP,KAAK,CAAAO,KALA;IACLC,EAAA,GAIAR,KAAK,CAAAS,IAJU;IAAfA,IAAI,GAAAD,EAAA,cAAG,QAAQ,GAAAA,EAAA;IACfE,EAAA,GAGAV,KAAK,CAAAW,OAHY;IAAjBA,OAAO,GAAAD,EAAA,cAAG,OAAO,GAAAA,EAAA;IACjBE,QAAQ,GAERZ,KAAK,CAAAY,QAFG;IACLC,SAAS,GAAAC,MAAA,CACZd,KAAK,EAdH,iGAcL,CADe;EAGhB,IAAMe,kBAAkB,GAAGrB,UAAU,CACjCE,OAAO,CAACoB,YAAY,GAAAC,EAAA,OAEhBA,EAAA,CAACrB,OAAO,CAACsB,IAAI,IAAGd,IAAI,EACpBa,EAAA,CAACrB,OAAO,CAACuB,QAAQ,IAAGP,QAAQ,E,KAEhChB,OAAO,CAACwB,cAAc,CAAClB,SAAS,CAAC,EACjCN,OAAO,CAACyB,SAAS,CAACZ,IAAI,EAAE;IAAEF,KAAK,EAAAA;EAAA,CAAE,CAAC,EAClCX,OAAO,CAAC0B,YAAY,CAACX,OAAO,EAAE;IAAEN,OAAO,EAAAA,OAAA;IAAEC,QAAQ,EAAAA;EAAA,CAAE,CAAC,EACpDH,SAAS,CACZ;EACD,OACIR,KAAA,CAAA4B,aAAA,QAAAC,QAAA,KAASX,SAAS;IAAEZ,GAAG,EAAEA,GAAG;IAAEE,SAAS,EAAEY;EAAkB,IACtDf,KAAK,CAACyB,QAAQ,CACb;AAEd,CAAC,CACJ;AACD3B,WAAW,CAAC4B,WAAW,GAAG,GAAAC,MAAA,CAAG9B,kBAAkB,iBAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}