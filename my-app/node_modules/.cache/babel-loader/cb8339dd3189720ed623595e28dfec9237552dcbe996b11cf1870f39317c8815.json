{"ast":null,"code":"/*\n * Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __rest } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { Classes, mergeRefs } from \"../../common\";\nimport { DISPLAYNAME_PREFIX } from \"../../common/props\";\nimport { useIsomorphicLayoutEffect } from \"../../hooks/useIsomorphicLayoutEffect\";\n/**\n * Text component.\n *\n * @see https://blueprintjs.com/docs/#core/components/text\n */\nexport var Text = React.forwardRef(function (_a, forwardedRef) {\n  var _b;\n  var children = _a.children,\n    _c = _a.tagName,\n    tagName = _c === void 0 ? \"div\" : _c,\n    title = _a.title,\n    className = _a.className,\n    _d = _a.ellipsize,\n    ellipsize = _d === void 0 ? false : _d,\n    htmlProps = __rest(_a, [\"children\", \"tagName\", \"title\", \"className\", \"ellipsize\"]);\n  var contentMeasuringRef = React.useRef();\n  var textRef = React.useMemo(function () {\n    return mergeRefs(contentMeasuringRef, forwardedRef);\n  }, [forwardedRef]);\n  var _e = React.useState(\"\"),\n    textContent = _e[0],\n    setTextContent = _e[1];\n  var _f = React.useState(),\n    isContentOverflowing = _f[0],\n    setIsContentOverflowing = _f[1];\n  // try to be conservative about running this effect, since querying scrollWidth causes the browser to reflow / recalculate styles,\n  // which can be very expensive for long lists (for example, in long Menus)\n  useIsomorphicLayoutEffect(function () {\n    var _a;\n    if (((_a = contentMeasuringRef.current) === null || _a === void 0 ? void 0 : _a.textContent) != null) {\n      setIsContentOverflowing(ellipsize && contentMeasuringRef.current.scrollWidth > contentMeasuringRef.current.clientWidth);\n      setTextContent(contentMeasuringRef.current.textContent);\n    }\n  }, [contentMeasuringRef, children, ellipsize]);\n  return React.createElement(tagName, __assign(__assign({}, htmlProps), {\n    className: classNames((_b = {}, _b[Classes.TEXT_OVERFLOW_ELLIPSIS] = ellipsize, _b), className),\n    ref: textRef,\n    title: title !== null && title !== void 0 ? title : isContentOverflowing ? textContent : undefined\n  }), children);\n});\nText.displayName = \"\".concat(DISPLAYNAME_PREFIX, \".Text\");","map":{"version":3,"names":["classNames","React","Classes","mergeRefs","DISPLAYNAME_PREFIX","useIsomorphicLayoutEffect","Text","forwardRef","_a","forwardedRef","children","_c","tagName","title","className","_d","ellipsize","htmlProps","__rest","contentMeasuringRef","useRef","textRef","useMemo","_e","useState","textContent","setTextContent","_f","isContentOverflowing","setIsContentOverflowing","current","scrollWidth","clientWidth","createElement","__assign","_b","TEXT_OVERFLOW_ELLIPSIS","ref","undefined","displayName","concat"],"sources":["C:\\Users\\deepa\\Deepak\\Working-File\\React-Project\\new-working-file\\React-Project\\my-app\\node_modules\\@blueprintjs\\core\\src\\components\\text\\text.tsx"],"sourcesContent":["/*\n * Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport classNames from \"classnames\";\nimport * as React from \"react\";\n\nimport { Classes, mergeRefs } from \"../../common\";\nimport { DISPLAYNAME_PREFIX, type Props } from \"../../common/props\";\nimport { useIsomorphicLayoutEffect } from \"../../hooks/useIsomorphicLayoutEffect\";\n\nexport interface TextProps\n    extends Props,\n        React.RefAttributes<HTMLElement>,\n        Omit<React.HTMLAttributes<HTMLElement>, \"title\"> {\n    children?: React.ReactNode;\n\n    /**\n     * Indicates that this component should be truncated with an ellipsis if it overflows its container.\n     * The `title` attribute will also be added when content overflows to show the full text of the children on hover.\n     *\n     * @default false\n     */\n    ellipsize?: boolean;\n\n    /**\n     * HTML tag name to use for rendered element.\n     *\n     * @default \"div\"\n     */\n    tagName?: keyof React.JSX.IntrinsicElements;\n\n    /**\n     * HTML title of the element\n     */\n    title?: string;\n}\n\n/**\n * Text component.\n *\n * @see https://blueprintjs.com/docs/#core/components/text\n */\nexport const Text: React.FC<TextProps> = React.forwardRef<HTMLElement, TextProps>(\n    ({ children, tagName = \"div\", title, className, ellipsize = false, ...htmlProps }, forwardedRef) => {\n        const contentMeasuringRef = React.useRef<HTMLElement>();\n        const textRef = React.useMemo(() => mergeRefs(contentMeasuringRef, forwardedRef), [forwardedRef]);\n        const [textContent, setTextContent] = React.useState<string>(\"\");\n        const [isContentOverflowing, setIsContentOverflowing] = React.useState<boolean>();\n\n        // try to be conservative about running this effect, since querying scrollWidth causes the browser to reflow / recalculate styles,\n        // which can be very expensive for long lists (for example, in long Menus)\n        useIsomorphicLayoutEffect(() => {\n            if (contentMeasuringRef.current?.textContent != null) {\n                setIsContentOverflowing(\n                    ellipsize! && contentMeasuringRef.current.scrollWidth > contentMeasuringRef.current.clientWidth,\n                );\n                setTextContent(contentMeasuringRef.current.textContent);\n            }\n        }, [contentMeasuringRef, children, ellipsize]);\n\n        return React.createElement(\n            tagName,\n            {\n                ...htmlProps,\n                className: classNames(\n                    {\n                        [Classes.TEXT_OVERFLOW_ELLIPSIS]: ellipsize,\n                    },\n                    className,\n                ),\n                ref: textRef,\n                title: title ?? (isContentOverflowing ? textContent : undefined),\n            },\n            children,\n        );\n    },\n);\nText.displayName = `${DISPLAYNAME_PREFIX}.Text`;\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAgBA,OAAOA,UAAU,MAAM,YAAY;AACnC,OAAO,KAAKC,KAAK,MAAM,OAAO;AAE9B,SAASC,OAAO,EAAEC,SAAS,QAAQ,cAAc;AACjD,SAASC,kBAAkB,QAAoB,oBAAoB;AACnE,SAASC,yBAAyB,QAAQ,uCAAuC;AA6BjF;;;;;AAKA,OAAO,IAAMC,IAAI,GAAwBL,KAAK,CAACM,UAAU,CACrD,UAACC,EAAgF,EAAEC,YAAY;;EAA5F,IAAAC,QAAQ,GAAAF,EAAA,CAAAE,QAAA;IAAEC,EAAA,GAAAH,EAAA,CAAAI,OAAe;IAAfA,OAAO,GAAAD,EAAA,cAAG,KAAK,GAAAA,EAAA;IAAEE,KAAK,GAAAL,EAAA,CAAAK,KAAA;IAAEC,SAAS,GAAAN,EAAA,CAAAM,SAAA;IAAEC,EAAA,GAAAP,EAAA,CAAAQ,SAAiB;IAAjBA,SAAS,GAAAD,EAAA,cAAG,KAAK,GAAAA,EAAA;IAAKE,SAAS,GAAAC,MAAA,CAAAV,EAAA,EAA9E,0DAAgF,CAAF;EAC3E,IAAMW,mBAAmB,GAAGlB,KAAK,CAACmB,MAAM,EAAe;EACvD,IAAMC,OAAO,GAAGpB,KAAK,CAACqB,OAAO,CAAC;IAAM,OAAAnB,SAAS,CAACgB,mBAAmB,EAAEV,YAAY,CAAC;EAA5C,CAA4C,EAAE,CAACA,YAAY,CAAC,CAAC;EAC3F,IAAAc,EAAA,GAAgCtB,KAAK,CAACuB,QAAQ,CAAS,EAAE,CAAC;IAAzDC,WAAW,GAAAF,EAAA;IAAEG,cAAc,GAAAH,EAAA,GAA8B;EAC1D,IAAAI,EAAA,GAAkD1B,KAAK,CAACuB,QAAQ,EAAW;IAA1EI,oBAAoB,GAAAD,EAAA;IAAEE,uBAAuB,GAAAF,EAAA,GAA6B;EAEjF;EACA;EACAtB,yBAAyB,CAAC;;IACtB,IAAI,EAAAG,EAAA,GAAAW,mBAAmB,CAACW,OAAO,cAAAtB,EAAA,uBAAAA,EAAA,CAAEiB,WAAW,KAAI,IAAI,EAAE;MAClDI,uBAAuB,CACnBb,SAAU,IAAIG,mBAAmB,CAACW,OAAO,CAACC,WAAW,GAAGZ,mBAAmB,CAACW,OAAO,CAACE,WAAW,CAClG;MACDN,cAAc,CAACP,mBAAmB,CAACW,OAAO,CAACL,WAAW,CAAC;IAC3D;EACJ,CAAC,EAAE,CAACN,mBAAmB,EAAET,QAAQ,EAAEM,SAAS,CAAC,CAAC;EAE9C,OAAOf,KAAK,CAACgC,aAAa,CACtBrB,OAAO,EAAAsB,QAAA,CAAAA,QAAA,KAEAjB,SAAS;IACZH,SAAS,EAAEd,UAAU,EAAAmC,EAAA,OAEbA,EAAA,CAACjC,OAAO,CAACkC,sBAAsB,IAAGpB,SAAS,E,KAE/CF,SAAS,CACZ;IACDuB,GAAG,EAAEhB,OAAO;IACZR,KAAK,EAAEA,KAAK,aAALA,KAAK,cAALA,KAAK,GAAKe,oBAAoB,GAAGH,WAAW,GAAGa;EAAU,IAEpE5B,QAAQ,CACX;AACL,CAAC,CACJ;AACDJ,IAAI,CAACiC,WAAW,GAAG,GAAAC,MAAA,CAAGpC,kBAAkB,UAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}