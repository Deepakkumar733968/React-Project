{"ast":null,"code":"/*\n * Copyright 2022 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __extends } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { AbstractPureComponent, Boundary, Classes, removeNonHTMLProps } from \"../../common\";\nimport { Menu } from \"../menu/menu\";\nimport { MenuItem } from \"../menu/menuItem\";\nimport { OverflowList } from \"../overflow-list/overflowList\";\nimport { Popover } from \"../popover/popover\";\nimport { Breadcrumb } from \"./breadcrumb\";\n/**\n * Breadcrumbs component.\n *\n * @see https://blueprintjs.com/docs/#core/components/breadcrumbs\n */\nvar Breadcrumbs = /** @class */function (_super) {\n  __extends(Breadcrumbs, _super);\n  function Breadcrumbs() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.renderOverflow = function (items) {\n      var _a = _this.props,\n        collapseFrom = _a.collapseFrom,\n        overflowButtonProps = _a.overflowButtonProps,\n        popoverProps = _a.popoverProps;\n      var orderedItems = items;\n      if (collapseFrom === Boundary.START) {\n        // If we're collapsing from the start, the menu should be read from the bottom to the\n        // top, continuing with the breadcrumbs to the right. Since this means the first\n        // breadcrumb in the props must be the last in the menu, we need to reverse the overlow\n        // order.\n        orderedItems = items.slice().reverse();\n      }\n      return React.createElement(\"li\", null, React.createElement(Popover, __assign({\n        placement: collapseFrom === Boundary.END ? \"bottom-end\" : \"bottom-start\",\n        disabled: orderedItems.length === 0,\n        content: React.createElement(Menu, null, orderedItems.map(_this.renderOverflowBreadcrumb))\n      }, popoverProps), React.createElement(\"span\", __assign({\n        \"aria-label\": \"collapsed breadcrumbs\",\n        role: \"button\",\n        tabIndex: 0\n      }, overflowButtonProps, {\n        className: classNames(Classes.BREADCRUMBS_COLLAPSED, overflowButtonProps === null || overflowButtonProps === void 0 ? void 0 : overflowButtonProps.className)\n      }))));\n    };\n    _this.renderOverflowBreadcrumb = function (props, index) {\n      var isClickable = props.href != null || props.onClick != null;\n      var htmlProps = removeNonHTMLProps(props);\n      return React.createElement(MenuItem, __assign({\n        disabled: !isClickable\n      }, htmlProps, {\n        text: props.text,\n        key: index\n      }));\n    };\n    _this.renderBreadcrumbWrapper = function (props, index) {\n      var isCurrent = _this.props.items[_this.props.items.length - 1] === props;\n      return React.createElement(\"li\", {\n        key: index\n      }, _this.renderBreadcrumb(props, isCurrent));\n    };\n    return _this;\n  }\n  Breadcrumbs.prototype.render = function () {\n    var _a = this.props,\n      className = _a.className,\n      collapseFrom = _a.collapseFrom,\n      items = _a.items,\n      minVisibleItems = _a.minVisibleItems,\n      _b = _a.overflowListProps,\n      overflowListProps = _b === void 0 ? {} : _b;\n    return React.createElement(OverflowList, __assign({\n      collapseFrom: collapseFrom,\n      minVisibleItems: minVisibleItems,\n      tagName: \"ol\"\n    }, overflowListProps, {\n      className: classNames(Classes.BREADCRUMBS, overflowListProps.className, className),\n      items: items,\n      overflowRenderer: this.renderOverflow,\n      visibleItemRenderer: this.renderBreadcrumbWrapper\n    }));\n  };\n  Breadcrumbs.prototype.renderBreadcrumb = function (props, isCurrent) {\n    if (isCurrent && this.props.currentBreadcrumbRenderer != null) {\n      return this.props.currentBreadcrumbRenderer(props);\n    } else if (this.props.breadcrumbRenderer != null) {\n      return this.props.breadcrumbRenderer(props);\n    } else {\n      // allow user to override 'current' prop\n      return React.createElement(Breadcrumb, __assign({\n        current: isCurrent\n      }, props));\n    }\n  };\n  Breadcrumbs.defaultProps = {\n    collapseFrom: Boundary.START\n  };\n  return Breadcrumbs;\n}(AbstractPureComponent);\nexport { Breadcrumbs };","map":{"version":3,"names":["classNames","React","AbstractPureComponent","Boundary","Classes","removeNonHTMLProps","Menu","MenuItem","OverflowList","Popover","Breadcrumb","Breadcrumbs","_super","__extends","_this","renderOverflow","items","_a","props","collapseFrom","overflowButtonProps","popoverProps","orderedItems","START","slice","reverse","createElement","__assign","placement","END","disabled","length","content","map","renderOverflowBreadcrumb","role","tabIndex","className","BREADCRUMBS_COLLAPSED","index","isClickable","href","onClick","htmlProps","text","key","renderBreadcrumbWrapper","isCurrent","renderBreadcrumb","prototype","render","minVisibleItems","_b","overflowListProps","tagName","BREADCRUMBS","overflowRenderer","visibleItemRenderer","currentBreadcrumbRenderer","breadcrumbRenderer","current","defaultProps"],"sources":["C:\\Users\\deepa\\Deepak\\Working-File\\React-Project\\new-working-file\\React-Project\\my-app\\node_modules\\@blueprintjs\\core\\src\\components\\breadcrumbs\\breadcrumbs.tsx"],"sourcesContent":["/*\n * Copyright 2022 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport classNames from \"classnames\";\nimport * as React from \"react\";\n\nimport { AbstractPureComponent, Boundary, Classes, type Props, removeNonHTMLProps } from \"../../common\";\nimport { Menu } from \"../menu/menu\";\nimport { MenuItem } from \"../menu/menuItem\";\nimport { OverflowList, type OverflowListProps } from \"../overflow-list/overflowList\";\nimport { Popover, type PopoverProps } from \"../popover/popover\";\n\nimport { Breadcrumb, type BreadcrumbProps } from \"./breadcrumb\";\n\nexport interface BreadcrumbsProps extends Props {\n    /**\n     * Callback invoked to render visible breadcrumbs. Best practice is to\n     * render a `<Breadcrumb>` element. If `currentBreadcrumbRenderer` is also\n     * supplied, that callback will be used for the current breadcrumb instead.\n     *\n     * @default Breadcrumb\n     */\n    breadcrumbRenderer?: (props: BreadcrumbProps) => React.JSX.Element;\n\n    /**\n     * Which direction the breadcrumbs should collapse from: start or end.\n     *\n     * @default Boundary.START\n     */\n    collapseFrom?: Boundary;\n\n    /**\n     * Callback invoked to render the current breadcrumb, which is the last\n     * element in the `items` array.\n     *\n     * If this prop is omitted, `breadcrumbRenderer` will be invoked for the\n     * current breadcrumb instead.\n     */\n    currentBreadcrumbRenderer?: (props: BreadcrumbProps) => React.JSX.Element;\n\n    /**\n     * All breadcrumbs to display. Breadcrumbs that do not fit in the container\n     * will be rendered in an overflow menu instead.\n     */\n    items: readonly BreadcrumbProps[];\n\n    /**\n     * The minimum number of visible breadcrumbs that should never collapse into\n     * the overflow menu, regardless of DOM dimensions.\n     *\n     * @default 0\n     */\n    minVisibleItems?: number;\n\n    /**\n     * Props to spread to the `OverflowList` popover target.\n     */\n    overflowButtonProps?: React.HTMLProps<HTMLSpanElement>;\n\n    /**\n     * Props to spread to `OverflowList`. Note that `items`,\n     * `overflowRenderer`, and `visibleItemRenderer` cannot be changed.\n     */\n    overflowListProps?: Partial<\n        Omit<OverflowListProps<BreadcrumbProps>, \"items\" | \"overflowRenderer\" | \"visibleItemRenderer\">\n    >;\n\n    /**\n     * Props to spread to the popover showing the overflow menu.\n     */\n    popoverProps?: Partial<\n        Omit<PopoverProps, \"content\" | \"defaultIsOpen\" | \"disabled\" | \"fill\" | \"renderTarget\" | \"targetTagName\">\n    >;\n}\n\n/**\n * Breadcrumbs component.\n *\n * @see https://blueprintjs.com/docs/#core/components/breadcrumbs\n */\nexport class Breadcrumbs extends AbstractPureComponent<BreadcrumbsProps> {\n    public static defaultProps: Partial<BreadcrumbsProps> = {\n        collapseFrom: Boundary.START,\n    };\n\n    public render() {\n        const { className, collapseFrom, items, minVisibleItems, overflowListProps = {} } = this.props;\n        return (\n            <OverflowList\n                collapseFrom={collapseFrom}\n                minVisibleItems={minVisibleItems}\n                tagName=\"ol\"\n                {...overflowListProps}\n                className={classNames(Classes.BREADCRUMBS, overflowListProps.className, className)}\n                items={items}\n                overflowRenderer={this.renderOverflow}\n                visibleItemRenderer={this.renderBreadcrumbWrapper}\n            />\n        );\n    }\n\n    private renderOverflow = (items: readonly BreadcrumbProps[]) => {\n        const { collapseFrom, overflowButtonProps, popoverProps } = this.props;\n\n        let orderedItems = items;\n        if (collapseFrom === Boundary.START) {\n            // If we're collapsing from the start, the menu should be read from the bottom to the\n            // top, continuing with the breadcrumbs to the right. Since this means the first\n            // breadcrumb in the props must be the last in the menu, we need to reverse the overlow\n            // order.\n            orderedItems = items.slice().reverse();\n        }\n\n        return (\n            <li>\n                <Popover\n                    placement={collapseFrom === Boundary.END ? \"bottom-end\" : \"bottom-start\"}\n                    disabled={orderedItems.length === 0}\n                    content={<Menu>{orderedItems.map(this.renderOverflowBreadcrumb)}</Menu>}\n                    {...popoverProps}\n                >\n                    <span\n                        aria-label=\"collapsed breadcrumbs\"\n                        role=\"button\"\n                        tabIndex={0}\n                        {...overflowButtonProps}\n                        className={classNames(Classes.BREADCRUMBS_COLLAPSED, overflowButtonProps?.className)}\n                    />\n                </Popover>\n            </li>\n        );\n    };\n\n    private renderOverflowBreadcrumb = (props: BreadcrumbProps, index: number) => {\n        const isClickable = props.href != null || props.onClick != null;\n        const htmlProps = removeNonHTMLProps(props);\n        return <MenuItem disabled={!isClickable} {...htmlProps} text={props.text} key={index} />;\n    };\n\n    private renderBreadcrumbWrapper = (props: BreadcrumbProps, index: number) => {\n        const isCurrent = this.props.items[this.props.items.length - 1] === props;\n        return <li key={index}>{this.renderBreadcrumb(props, isCurrent)}</li>;\n    };\n\n    private renderBreadcrumb(props: BreadcrumbProps, isCurrent: boolean) {\n        if (isCurrent && this.props.currentBreadcrumbRenderer != null) {\n            return this.props.currentBreadcrumbRenderer(props);\n        } else if (this.props.breadcrumbRenderer != null) {\n            return this.props.breadcrumbRenderer(props);\n        } else {\n            // allow user to override 'current' prop\n            return <Breadcrumb current={isCurrent} {...props} />;\n        }\n    }\n}\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAgBA,OAAOA,UAAU,MAAM,YAAY;AACnC,OAAO,KAAKC,KAAK,MAAM,OAAO;AAE9B,SAASC,qBAAqB,EAAEC,QAAQ,EAAEC,OAAO,EAAcC,kBAAkB,QAAQ,cAAc;AACvG,SAASC,IAAI,QAAQ,cAAc;AACnC,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,YAAY,QAAgC,+BAA+B;AACpF,SAASC,OAAO,QAA2B,oBAAoB;AAE/D,SAASC,UAAU,QAA8B,cAAc;AA+D/D;;;;;AAKA,IAAAC,WAAA,0BAAAC,MAAA;EAAiCC,SAAA,CAAAF,WAAA,EAAAC,MAAA;EAAjC,SAAAD,YAAA;;IAqBYG,KAAA,CAAAC,cAAc,GAAG,UAACC,KAAiC;MACjD,IAAAC,EAAA,GAAsDH,KAAI,CAACI,KAAK;QAA9DC,YAAY,GAAAF,EAAA,CAAAE,YAAA;QAAEC,mBAAmB,GAAAH,EAAA,CAAAG,mBAAA;QAAEC,YAAY,GAAAJ,EAAA,CAAAI,YAAe;MAEtE,IAAIC,YAAY,GAAGN,KAAK;MACxB,IAAIG,YAAY,KAAKhB,QAAQ,CAACoB,KAAK,EAAE;QACjC;QACA;QACA;QACA;QACAD,YAAY,GAAGN,KAAK,CAACQ,KAAK,EAAE,CAACC,OAAO,EAAE;MAC1C;MAEA,OACIxB,KAAA,CAAAyB,aAAA,aACIzB,KAAA,CAAAyB,aAAA,CAACjB,OAAO,EAAAkB,QAAA;QACJC,SAAS,EAAET,YAAY,KAAKhB,QAAQ,CAAC0B,GAAG,GAAG,YAAY,GAAG,cAAc;QACxEC,QAAQ,EAAER,YAAY,CAACS,MAAM,KAAK,CAAC;QACnCC,OAAO,EAAE/B,KAAA,CAAAyB,aAAA,CAACpB,IAAI,QAAEgB,YAAY,CAACW,GAAG,CAACnB,KAAI,CAACoB,wBAAwB,CAAC;MAAQ,GACnEb,YAAY,GAEhBpB,KAAA,CAAAyB,aAAA,SAAAC,QAAA;QAAA,cACe,uBAAuB;QAClCQ,IAAI,EAAC,QAAQ;QACbC,QAAQ,EAAE;MAAC,GACPhB,mBAAmB;QACvBiB,SAAS,EAAErC,UAAU,CAACI,OAAO,CAACkC,qBAAqB,EAAElB,mBAAmB,aAAnBA,mBAAmB,uBAAnBA,mBAAmB,CAAEiB,SAAS;MAAC,GACtF,CACI,CACT;IAEb,CAAC;IAEOvB,KAAA,CAAAoB,wBAAwB,GAAG,UAAChB,KAAsB,EAAEqB,KAAa;MACrE,IAAMC,WAAW,GAAGtB,KAAK,CAACuB,IAAI,IAAI,IAAI,IAAIvB,KAAK,CAACwB,OAAO,IAAI,IAAI;MAC/D,IAAMC,SAAS,GAAGtC,kBAAkB,CAACa,KAAK,CAAC;MAC3C,OAAOjB,KAAA,CAAAyB,aAAA,CAACnB,QAAQ,EAAAoB,QAAA;QAACG,QAAQ,EAAE,CAACU;MAAW,GAAMG,SAAS;QAAEC,IAAI,EAAE1B,KAAK,CAAC0B,IAAI;QAAEC,GAAG,EAAEN;MAAK,GAAI;IAC5F,CAAC;IAEOzB,KAAA,CAAAgC,uBAAuB,GAAG,UAAC5B,KAAsB,EAAEqB,KAAa;MACpE,IAAMQ,SAAS,GAAGjC,KAAI,CAACI,KAAK,CAACF,KAAK,CAACF,KAAI,CAACI,KAAK,CAACF,KAAK,CAACe,MAAM,GAAG,CAAC,CAAC,KAAKb,KAAK;MACzE,OAAOjB,KAAA,CAAAyB,aAAA;QAAImB,GAAG,EAAEN;MAAK,GAAGzB,KAAI,CAACkC,gBAAgB,CAAC9B,KAAK,EAAE6B,SAAS,CAAC,CAAM;IACzE,CAAC;;EAYL;EArEWpC,WAAA,CAAAsC,SAAA,CAAAC,MAAM,GAAb;IACU,IAAAjC,EAAA,GAA8E,IAAI,CAACC,KAAK;MAAtFmB,SAAS,GAAApB,EAAA,CAAAoB,SAAA;MAAElB,YAAY,GAAAF,EAAA,CAAAE,YAAA;MAAEH,KAAK,GAAAC,EAAA,CAAAD,KAAA;MAAEmC,eAAe,GAAAlC,EAAA,CAAAkC,eAAA;MAAEC,EAAA,GAAAnC,EAAA,CAAAoC,iBAAsB;MAAtBA,iBAAiB,GAAAD,EAAA,cAAG,EAAE,GAAAA,EAAe;IAC9F,OACInD,KAAA,CAAAyB,aAAA,CAAClB,YAAY,EAAAmB,QAAA;MACTR,YAAY,EAAEA,YAAY;MAC1BgC,eAAe,EAAEA,eAAe;MAChCG,OAAO,EAAC;IAAI,GACRD,iBAAiB;MACrBhB,SAAS,EAAErC,UAAU,CAACI,OAAO,CAACmD,WAAW,EAAEF,iBAAiB,CAAChB,SAAS,EAAEA,SAAS,CAAC;MAClFrB,KAAK,EAAEA,KAAK;MACZwC,gBAAgB,EAAE,IAAI,CAACzC,cAAc;MACrC0C,mBAAmB,EAAE,IAAI,CAACX;IAAuB,GACnD;EAEV,CAAC;EA6COnC,WAAA,CAAAsC,SAAA,CAAAD,gBAAgB,GAAxB,UAAyB9B,KAAsB,EAAE6B,SAAkB;IAC/D,IAAIA,SAAS,IAAI,IAAI,CAAC7B,KAAK,CAACwC,yBAAyB,IAAI,IAAI,EAAE;MAC3D,OAAO,IAAI,CAACxC,KAAK,CAACwC,yBAAyB,CAACxC,KAAK,CAAC;IACtD,CAAC,MAAM,IAAI,IAAI,CAACA,KAAK,CAACyC,kBAAkB,IAAI,IAAI,EAAE;MAC9C,OAAO,IAAI,CAACzC,KAAK,CAACyC,kBAAkB,CAACzC,KAAK,CAAC;IAC/C,CAAC,MAAM;MACH;MACA,OAAOjB,KAAA,CAAAyB,aAAA,CAAChB,UAAU,EAAAiB,QAAA;QAACiC,OAAO,EAAEb;MAAS,GAAM7B,KAAK,EAAI;IACxD;EACJ,CAAC;EAxEaP,WAAA,CAAAkD,YAAY,GAA8B;IACpD1C,YAAY,EAAEhB,QAAQ,CAACoB;GAC1B;EAuEL,OAAAZ,WAAC;CAAA,CA1EgCT,qBAAqB;SAAzCS,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}