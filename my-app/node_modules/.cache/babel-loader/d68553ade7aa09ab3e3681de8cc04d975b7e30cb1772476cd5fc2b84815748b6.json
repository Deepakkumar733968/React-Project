{"ast":null,"code":"/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __extends } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { ArrowDown, ArrowLeft, ArrowRight, ArrowUp, KeyCommand, KeyControl, KeyDelete, KeyEnter, KeyOption, KeyShift } from \"@blueprintjs/icons\";\nimport { AbstractPureComponent, Classes, DISPLAYNAME_PREFIX } from \"../../common\";\nimport { Icon } from \"../icon/icon\";\nimport { isMac, normalizeKeyCombo } from \"./hotkeyParser\";\nvar KEY_ICONS = {\n  alt: {\n    icon: React.createElement(KeyOption, null),\n    iconTitle: \"Alt/Option key\",\n    isMacOnly: true\n  },\n  arrowdown: {\n    icon: React.createElement(ArrowDown, null),\n    iconTitle: \"Down key\"\n  },\n  arrowleft: {\n    icon: React.createElement(ArrowLeft, null),\n    iconTitle: \"Left key\"\n  },\n  arrowright: {\n    icon: React.createElement(ArrowRight, null),\n    iconTitle: \"Right key\"\n  },\n  arrowup: {\n    icon: React.createElement(ArrowUp, null),\n    iconTitle: \"Up key\"\n  },\n  cmd: {\n    icon: React.createElement(KeyCommand, null),\n    iconTitle: \"Command key\",\n    isMacOnly: true\n  },\n  ctrl: {\n    icon: React.createElement(KeyControl, null),\n    iconTitle: \"Control key\",\n    isMacOnly: true\n  },\n  delete: {\n    icon: React.createElement(KeyDelete, null),\n    iconTitle: \"Delete key\"\n  },\n  enter: {\n    icon: React.createElement(KeyEnter, null),\n    iconTitle: \"Enter key\"\n  },\n  meta: {\n    icon: React.createElement(KeyCommand, null),\n    iconTitle: \"Command key\",\n    isMacOnly: true\n  },\n  shift: {\n    icon: React.createElement(KeyShift, null),\n    iconTitle: \"Shift key\",\n    isMacOnly: true\n  }\n};\n/** Reverse table of some CONFIG_ALIASES fields, for display by KeyComboTag */\nexport var DISPLAY_ALIASES = {\n  ArrowDown: \"down\",\n  ArrowLeft: \"left\",\n  ArrowRight: \"right\",\n  ArrowUp: \"up\"\n};\nvar KeyComboTagInternal = /** @class */function (_super) {\n  __extends(KeyComboTagInternal, _super);\n  function KeyComboTagInternal() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.renderKey = function (key, index) {\n      var _a;\n      var _b;\n      var keyString = (_b = DISPLAY_ALIASES[key]) !== null && _b !== void 0 ? _b : key;\n      var icon = _this.getKeyIcon(key);\n      var reactKey = \"key-\".concat(index);\n      return React.createElement(\"kbd\", {\n        className: classNames(Classes.KEY, (_a = {}, _a[Classes.MODIFIER_KEY] = icon != null, _a)),\n        key: reactKey\n      }, icon != null && React.createElement(Icon, {\n        icon: icon.icon,\n        title: icon.iconTitle\n      }), keyString);\n    };\n    _this.renderMinimalKey = function (key, index, isLastKey) {\n      var icon = _this.getKeyIcon(key);\n      if (icon == null) {\n        return isLastKey ? key : React.createElement(React.Fragment, {\n          key: \"key-\".concat(index)\n        }, key, \"\\u00A0+\\u00A0\");\n      }\n      return React.createElement(Icon, {\n        icon: icon.icon,\n        title: icon.iconTitle,\n        key: \"key-\".concat(index)\n      });\n    };\n    return _this;\n  }\n  KeyComboTagInternal.prototype.render = function () {\n    var _a;\n    var _this = this;\n    var _b = this.props,\n      className = _b.className,\n      combo = _b.combo,\n      minimal = _b.minimal,\n      platformOverride = _b.platformOverride;\n    var normalizedKeys = normalizeKeyCombo(combo, platformOverride);\n    var keys = normalizedKeys.map(function (key) {\n      return key.length === 1 ? key.toUpperCase() : key;\n    }).map(function (key, index) {\n      return minimal ? _this.renderMinimalKey(key, index, index === normalizedKeys.length - 1) : _this.renderKey(key, index);\n    });\n    return React.createElement(\"span\", {\n      className: classNames(Classes.KEY_COMBO, className, (_a = {}, _a[Classes.MINIMAL] = minimal, _a))\n    }, keys);\n  };\n  KeyComboTagInternal.prototype.getKeyIcon = function (key) {\n    var platformOverride = this.props.platformOverride;\n    var icon = KEY_ICONS[key];\n    if ((icon === null || icon === void 0 ? void 0 : icon.isMacOnly) && !isMac(platformOverride)) {\n      return undefined;\n    }\n    return icon;\n  };\n  KeyComboTagInternal.displayName = \"\".concat(DISPLAYNAME_PREFIX, \".KeyComboTag\");\n  return KeyComboTagInternal;\n}(AbstractPureComponent);\nexport { KeyComboTagInternal };\nexport var KeyComboTag = KeyComboTagInternal;","map":{"version":3,"names":["classNames","React","ArrowDown","ArrowLeft","ArrowRight","ArrowUp","KeyCommand","KeyControl","KeyDelete","KeyEnter","KeyOption","KeyShift","AbstractPureComponent","Classes","DISPLAYNAME_PREFIX","Icon","isMac","normalizeKeyCombo","KEY_ICONS","alt","icon","createElement","iconTitle","isMacOnly","arrowdown","arrowleft","arrowright","arrowup","cmd","ctrl","delete","enter","meta","shift","DISPLAY_ALIASES","KeyComboTagInternal","_super","__extends","_this","renderKey","key","index","keyString","_b","getKeyIcon","reactKey","concat","className","KEY","_a","MODIFIER_KEY","title","renderMinimalKey","isLastKey","Fragment","prototype","render","props","combo","minimal","platformOverride","normalizedKeys","keys","map","length","toUpperCase","KEY_COMBO","MINIMAL","undefined","displayName","KeyComboTag"],"sources":["C:\\Users\\deepa\\Deepak\\Working-File\\React-Project\\new-working-file\\React-Project\\my-app\\node_modules\\@blueprintjs\\core\\src\\components\\hotkeys\\keyComboTag.tsx"],"sourcesContent":["/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport classNames from \"classnames\";\nimport * as React from \"react\";\n\nimport {\n    ArrowDown,\n    ArrowLeft,\n    ArrowRight,\n    ArrowUp,\n    KeyCommand,\n    KeyControl,\n    KeyDelete,\n    KeyEnter,\n    KeyOption,\n    KeyShift,\n} from \"@blueprintjs/icons\";\n\nimport { AbstractPureComponent, Classes, DISPLAYNAME_PREFIX, type Props } from \"../../common\";\nimport { Icon } from \"../icon/icon\";\n\nimport { isMac, normalizeKeyCombo } from \"./hotkeyParser\";\n\nconst KEY_ICONS: Record<string, { icon: React.JSX.Element; iconTitle: string; isMacOnly?: boolean }> = {\n    alt: { icon: <KeyOption />, iconTitle: \"Alt/Option key\", isMacOnly: true },\n    arrowdown: { icon: <ArrowDown />, iconTitle: \"Down key\" },\n    arrowleft: { icon: <ArrowLeft />, iconTitle: \"Left key\" },\n    arrowright: { icon: <ArrowRight />, iconTitle: \"Right key\" },\n    arrowup: { icon: <ArrowUp />, iconTitle: \"Up key\" },\n    cmd: { icon: <KeyCommand />, iconTitle: \"Command key\", isMacOnly: true },\n    ctrl: { icon: <KeyControl />, iconTitle: \"Control key\", isMacOnly: true },\n    delete: { icon: <KeyDelete />, iconTitle: \"Delete key\" },\n    enter: { icon: <KeyEnter />, iconTitle: \"Enter key\" },\n    meta: { icon: <KeyCommand />, iconTitle: \"Command key\", isMacOnly: true },\n    shift: { icon: <KeyShift />, iconTitle: \"Shift key\", isMacOnly: true },\n};\n\n/** Reverse table of some CONFIG_ALIASES fields, for display by KeyComboTag */\nexport const DISPLAY_ALIASES: Record<string, string> = {\n    ArrowDown: \"down\",\n    ArrowLeft: \"left\",\n    ArrowRight: \"right\",\n    ArrowUp: \"up\",\n};\n\nexport interface KeyComboTagProps extends Props {\n    /** The key combo to display, such as `\"cmd + s\"`. */\n    combo: string;\n\n    /**\n     * Whether to render in a minimal style.\n     * If `false`, each key in the combo will be rendered inside a `<kbd>` tag.\n     * If `true`, only the icon or short name of a key will be rendered with no wrapper styles.\n     *\n     * @default false\n     */\n    minimal?: boolean;\n}\n\ninterface KeyComboTagInternalProps extends KeyComboTagProps {\n    /** Override the oeprating system rendering for internal testing purposes */\n    platformOverride?: string;\n}\n\nexport class KeyComboTagInternal extends AbstractPureComponent<KeyComboTagInternalProps> {\n    public static displayName = `${DISPLAYNAME_PREFIX}.KeyComboTag`;\n\n    public render() {\n        const { className, combo, minimal, platformOverride } = this.props;\n        const normalizedKeys = normalizeKeyCombo(combo, platformOverride);\n        const keys = normalizedKeys\n            .map(key => (key.length === 1 ? key.toUpperCase() : key))\n            .map((key, index) =>\n                minimal\n                    ? this.renderMinimalKey(key, index, index === normalizedKeys.length - 1)\n                    : this.renderKey(key, index),\n            );\n        return <span className={classNames(Classes.KEY_COMBO, className, { [Classes.MINIMAL]: minimal })}>{keys}</span>;\n    }\n\n    private renderKey = (key: string, index: number) => {\n        const keyString = DISPLAY_ALIASES[key] ?? key;\n        const icon = this.getKeyIcon(key);\n        const reactKey = `key-${index}`;\n        return (\n            <kbd className={classNames(Classes.KEY, { [Classes.MODIFIER_KEY]: icon != null })} key={reactKey}>\n                {icon != null && <Icon icon={icon.icon} title={icon.iconTitle} />}\n                {keyString}\n            </kbd>\n        );\n    };\n\n    private renderMinimalKey = (key: string, index: number, isLastKey: boolean) => {\n        const icon = this.getKeyIcon(key);\n        if (icon == null) {\n            return isLastKey ? key : <React.Fragment key={`key-${index}`}>{key}&nbsp;+&nbsp;</React.Fragment>;\n        }\n        return <Icon icon={icon.icon} title={icon.iconTitle} key={`key-${index}`} />;\n    };\n\n    private getKeyIcon(key: string) {\n        const { platformOverride } = this.props;\n        const icon = KEY_ICONS[key];\n        if (icon?.isMacOnly && !isMac(platformOverride)) {\n            return undefined;\n        }\n        return icon;\n    }\n}\n\nexport const KeyComboTag: React.ComponentType<KeyComboTagProps> = KeyComboTagInternal;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}