{"ast":null,"code":"/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __rest } from \"tslib\";\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport { Classes } from \"../../common\";\nimport { OverlaysProvider } from \"../../context/overlays/overlaysProvider\";\nimport { ContextMenuPopover } from \"./contextMenuPopover\";\n/** DOM element which contains the context menu singleton instance for the imperative ContextMenu APIs. */\nvar contextMenuElement;\n/**\n * Show a context menu at a particular offset from the top-left corner of the document.\n * The menu will appear below-right of this point and will flip to below-left if there is not enough\n * room onscreen. Additional props like `onClose`, `isDarkTheme`, etc. can be forwarded to the `<ContextMenuPopover>`.\n *\n * Context menus created with this API will automatically close when a user clicks outside the popover.\n * You may force them to close by using `hideContextMenu()`.\n *\n * Note that this API relies on global state in the @blueprintjs/core package, and should be used with caution,\n * especially if your build system allows multiple copies of Blueprint libraries to be bundled into an application at\n * once.\n *\n * Alternative APIs to consider which do not have the limitations of global state:\n *  - `<ContextMenu>`\n *  - `<ContextMenuPopover>`\n *\n * @see https://blueprintjs.com/docs/#core/components/context-menu-popover.imperative-api\n */\nexport function showContextMenu(props, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  var _a = options.container,\n    container = _a === void 0 ? document.body : _a,\n    // TODO(React 18): Replace deprecated ReactDOM methods. See: https://github.com/palantir/blueprint/issues/7165\n    // eslint-disable-next-line @typescript-eslint/no-deprecated\n    _b = options.domRenderer,\n    // TODO(React 18): Replace deprecated ReactDOM methods. See: https://github.com/palantir/blueprint/issues/7165\n    // eslint-disable-next-line @typescript-eslint/no-deprecated\n    domRenderer = _b === void 0 ? ReactDOM.render : _b,\n    // TODO(React 18): Replace deprecated ReactDOM methods. See: https://github.com/palantir/blueprint/issues/7165\n    // eslint-disable-next-line @typescript-eslint/no-deprecated\n    _c = options.domUnmounter,\n    // TODO(React 18): Replace deprecated ReactDOM methods. See: https://github.com/palantir/blueprint/issues/7165\n    // eslint-disable-next-line @typescript-eslint/no-deprecated\n    domUnmounter = _c === void 0 ? ReactDOM.unmountComponentAtNode : _c;\n  if (contextMenuElement === undefined) {\n    contextMenuElement = document.createElement(\"div\");\n    contextMenuElement.classList.add(Classes.CONTEXT_MENU);\n    container.appendChild(contextMenuElement);\n  } else {\n    // N.B. It's important to unmount previous instances of the ContextMenuPopover rendered by this function.\n    // Otherwise, React will detect no change in props sent to the already-mounted component, and therefore\n    // do nothing after the first call to this function, leading to bugs like https://github.com/palantir/blueprint/issues/5949\n    domUnmounter(contextMenuElement);\n  }\n  // TODO(React 18): Replace deprecated ReactDOM methods. See: https://github.com/palantir/blueprint/issues/7165\n  // eslint-disable-next-line @typescript-eslint/no-deprecated\n  domRenderer(React.createElement(OverlaysProvider, null, React.createElement(UncontrolledContextMenuPopover, __assign({}, props))), contextMenuElement);\n}\n/**\n * Hide a context menu that was created using `showContextMenu()`.\n *\n * Note that this API relies on global state in the @blueprintjs/core package, and should be used with caution.\n *\n * @see https://blueprintjs.com/docs/#core/components/context-menu-popover.imperative-api\n */\nexport function hideContextMenu(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  // TODO(React 18): Replace deprecated ReactDOM methods. See: https://github.com/palantir/blueprint/issues/7165\n  // eslint-disable-next-line @typescript-eslint/no-deprecated\n  var _a = options.domUnmounter,\n    domUnmounter = _a === void 0 ? ReactDOM.unmountComponentAtNode : _a;\n  if (contextMenuElement !== undefined) {\n    domUnmounter(contextMenuElement);\n    contextMenuElement = undefined;\n  }\n}\n/**\n * A simple wrapper around `ContextMenuPopover` which is open by default and uncontrolled.\n * It closes when a user clicks outside the popover.\n */\nfunction UncontrolledContextMenuPopover(_a) {\n  var onClose = _a.onClose,\n    props = __rest(_a, [\"onClose\"]);\n  var _b = React.useState(true),\n    isOpen = _b[0],\n    setIsOpen = _b[1];\n  var handleClose = React.useCallback(function () {\n    setIsOpen(false);\n    onClose === null || onClose === void 0 ? void 0 : onClose();\n  }, [onClose]);\n  return React.createElement(ContextMenuPopover, __assign({\n    isOpen: isOpen\n  }, props, {\n    onClose: handleClose\n  }));\n}","map":{"version":3,"names":["React","ReactDOM","Classes","OverlaysProvider","ContextMenuPopover","contextMenuElement","showContextMenu","props","options","_a","container","document","body","_b","domRenderer","render","_c","domUnmounter","unmountComponentAtNode","undefined","createElement","classList","add","CONTEXT_MENU","appendChild","UncontrolledContextMenuPopover","__assign","hideContextMenu","onClose","__rest","useState","isOpen","setIsOpen","handleClose","useCallback"],"sources":["C:\\Users\\deepa\\Deepak\\Working-File\\React-Project\\new-working-file\\React-Project\\my-app\\node_modules\\@blueprintjs\\core\\src\\components\\context-menu\\contextMenuSingleton.tsx"],"sourcesContent":["/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\n\nimport { Classes } from \"../../common\";\nimport type { DOMMountOptions } from \"../../common/utils/mountOptions\";\nimport { OverlaysProvider } from \"../../context/overlays/overlaysProvider\";\n\nimport { ContextMenuPopover, type ContextMenuPopoverProps } from \"./contextMenuPopover\";\n\n/** DOM element which contains the context menu singleton instance for the imperative ContextMenu APIs. */\nlet contextMenuElement: HTMLElement | undefined;\n\n/**\n * Show a context menu at a particular offset from the top-left corner of the document.\n * The menu will appear below-right of this point and will flip to below-left if there is not enough\n * room onscreen. Additional props like `onClose`, `isDarkTheme`, etc. can be forwarded to the `<ContextMenuPopover>`.\n *\n * Context menus created with this API will automatically close when a user clicks outside the popover.\n * You may force them to close by using `hideContextMenu()`.\n *\n * Note that this API relies on global state in the @blueprintjs/core package, and should be used with caution,\n * especially if your build system allows multiple copies of Blueprint libraries to be bundled into an application at\n * once.\n *\n * Alternative APIs to consider which do not have the limitations of global state:\n *  - `<ContextMenu>`\n *  - `<ContextMenuPopover>`\n *\n * @see https://blueprintjs.com/docs/#core/components/context-menu-popover.imperative-api\n */\nexport function showContextMenu(\n    props: Omit<ContextMenuPopoverProps, \"isOpen\">,\n    options: DOMMountOptions<ContextMenuPopoverProps> = {},\n) {\n    const {\n        container = document.body,\n        // TODO(React 18): Replace deprecated ReactDOM methods. See: https://github.com/palantir/blueprint/issues/7165\n        // eslint-disable-next-line @typescript-eslint/no-deprecated\n        domRenderer = ReactDOM.render,\n        // TODO(React 18): Replace deprecated ReactDOM methods. See: https://github.com/palantir/blueprint/issues/7165\n        // eslint-disable-next-line @typescript-eslint/no-deprecated\n        domUnmounter = ReactDOM.unmountComponentAtNode,\n    } = options;\n\n    if (contextMenuElement === undefined) {\n        contextMenuElement = document.createElement(\"div\");\n        contextMenuElement.classList.add(Classes.CONTEXT_MENU);\n        container.appendChild(contextMenuElement);\n    } else {\n        // N.B. It's important to unmount previous instances of the ContextMenuPopover rendered by this function.\n        // Otherwise, React will detect no change in props sent to the already-mounted component, and therefore\n        // do nothing after the first call to this function, leading to bugs like https://github.com/palantir/blueprint/issues/5949\n        domUnmounter(contextMenuElement);\n    }\n\n    // TODO(React 18): Replace deprecated ReactDOM methods. See: https://github.com/palantir/blueprint/issues/7165\n    // eslint-disable-next-line @typescript-eslint/no-deprecated\n    domRenderer(\n        <OverlaysProvider>\n            <UncontrolledContextMenuPopover {...props} />\n        </OverlaysProvider>,\n        contextMenuElement,\n    );\n}\n\n/**\n * Hide a context menu that was created using `showContextMenu()`.\n *\n * Note that this API relies on global state in the @blueprintjs/core package, and should be used with caution.\n *\n * @see https://blueprintjs.com/docs/#core/components/context-menu-popover.imperative-api\n */\nexport function hideContextMenu(options: DOMMountOptions<ContextMenuPopoverProps> = {}) {\n    // TODO(React 18): Replace deprecated ReactDOM methods. See: https://github.com/palantir/blueprint/issues/7165\n    // eslint-disable-next-line @typescript-eslint/no-deprecated\n    const { domUnmounter = ReactDOM.unmountComponentAtNode } = options;\n\n    if (contextMenuElement !== undefined) {\n        domUnmounter(contextMenuElement);\n        contextMenuElement = undefined;\n    }\n}\n\n/**\n * A simple wrapper around `ContextMenuPopover` which is open by default and uncontrolled.\n * It closes when a user clicks outside the popover.\n */\nfunction UncontrolledContextMenuPopover({ onClose, ...props }: Omit<ContextMenuPopoverProps, \"isOpen\">) {\n    const [isOpen, setIsOpen] = React.useState(true);\n    const handleClose = React.useCallback(() => {\n        setIsOpen(false);\n        onClose?.();\n    }, [onClose]);\n\n    return <ContextMenuPopover isOpen={isOpen} {...props} onClose={handleClose} />;\n}\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAgBA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAO,KAAKC,QAAQ,MAAM,WAAW;AAErC,SAASC,OAAO,QAAQ,cAAc;AAEtC,SAASC,gBAAgB,QAAQ,yCAAyC;AAE1E,SAASC,kBAAkB,QAAsC,sBAAsB;AAEvF;AACA,IAAIC,kBAA2C;AAE/C;;;;;;;;;;;;;;;;;;AAkBA,OAAM,SAAUC,eAAeA,CAC3BC,KAA8C,EAC9CC,OAAsD;EAAtD,IAAAA,OAAA;IAAAA,OAAA,KAAsD;EAAA;EAGlD,IAAAC,EAAA,GAOAD,OAAO,CAAAE,SAPkB;IAAzBA,SAAS,GAAAD,EAAA,cAAGE,QAAQ,CAACC,IAAI,GAAAH,EAAA;IACzB;IACA;IACAI,EAAA,GAIAL,OAAO,CAAAM,WAJsB;IAF7B;IACA;IACAA,WAAW,GAAAD,EAAA,cAAGZ,QAAQ,CAACc,MAAM,GAAAF,EAAA;IAC7B;IACA;IACAG,EAAA,GACAR,OAAO,CAAAS,YADuC;IAF9C;IACA;IACAA,YAAY,GAAAD,EAAA,cAAGf,QAAQ,CAACiB,sBAAsB,GAAAF,EAAA;EAGlD,IAAIX,kBAAkB,KAAKc,SAAS,EAAE;IAClCd,kBAAkB,GAAGM,QAAQ,CAACS,aAAa,CAAC,KAAK,CAAC;IAClDf,kBAAkB,CAACgB,SAAS,CAACC,GAAG,CAACpB,OAAO,CAACqB,YAAY,CAAC;IACtDb,SAAS,CAACc,WAAW,CAACnB,kBAAkB,CAAC;EAC7C,CAAC,MAAM;IACH;IACA;IACA;IACAY,YAAY,CAACZ,kBAAkB,CAAC;EACpC;EAEA;EACA;EACAS,WAAW,CACPd,KAAA,CAAAoB,aAAA,CAACjB,gBAAgB,QACbH,KAAA,CAAAoB,aAAA,CAACK,8BAA8B,EAAAC,QAAA,KAAKnB,KAAK,EAAI,CAC9B,EACnBF,kBAAkB,CACrB;AACL;AAEA;;;;;;;AAOA,OAAM,SAAUsB,eAAeA,CAACnB,OAAsD;EAAtD,IAAAA,OAAA;IAAAA,OAAA,KAAsD;EAAA;EAClF;EACA;EACQ,IAAAC,EAAA,GAAmDD,OAAO,CAAAS,YAAZ;IAA9CA,YAAY,GAAAR,EAAA,cAAGR,QAAQ,CAACiB,sBAAsB,GAAAT,EAAA;EAEtD,IAAIJ,kBAAkB,KAAKc,SAAS,EAAE;IAClCF,YAAY,CAACZ,kBAAkB,CAAC;IAChCA,kBAAkB,GAAGc,SAAS;EAClC;AACJ;AAEA;;;;AAIA,SAASM,8BAA8BA,CAAChB,EAA8D;EAA5D,IAAAmB,OAAO,GAAAnB,EAAA,CAAAmB,OAAA;IAAKrB,KAAK,GAAAsB,MAAA,CAAApB,EAAA,EAAnB,WAAqB,CAAF;EACjD,IAAAI,EAAA,GAAsBb,KAAK,CAAC8B,QAAQ,CAAC,IAAI,CAAC;IAAzCC,MAAM,GAAAlB,EAAA;IAAEmB,SAAS,GAAAnB,EAAA,GAAwB;EAChD,IAAMoB,WAAW,GAAGjC,KAAK,CAACkC,WAAW,CAAC;IAClCF,SAAS,CAAC,KAAK,CAAC;IAChBJ,OAAO,aAAPA,OAAO,uBAAPA,OAAO,EAAI;EACf,CAAC,EAAE,CAACA,OAAO,CAAC,CAAC;EAEb,OAAO5B,KAAA,CAAAoB,aAAA,CAAChB,kBAAkB,EAAAsB,QAAA;IAACK,MAAM,EAAEA;EAAM,GAAMxB,KAAK;IAAEqB,OAAO,EAAEK;EAAW,GAAI;AAClF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}