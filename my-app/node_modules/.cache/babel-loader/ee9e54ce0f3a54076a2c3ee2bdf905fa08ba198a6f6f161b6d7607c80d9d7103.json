{"ast":null,"code":"/*\n * Copyright 2015 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __extends, __rest } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { IconSize, SmallCross } from \"@blueprintjs/icons\";\nimport { AbstractPureComponent, Classes, DISPLAYNAME_PREFIX, mergeRefs } from \"../../common\";\nimport * as Errors from \"../../common/errors\";\nimport { uniqueId } from \"../../common/utils\";\nimport { Button } from \"../button/buttons\";\nimport { H6 } from \"../html/html\";\nimport { Icon } from \"../icon/icon\";\nimport { Overlay2, OVERLAY2_DEFAULT_PROPS } from \"../overlay2/overlay2\";\n/**\n * Dialog component.\n *\n * @see https://blueprintjs.com/docs/#core/components/dialog\n */\nvar Dialog = /** @class */function (_super) {\n  __extends(Dialog, _super);\n  function Dialog(props) {\n    var _this = _super.call(this, props) || this;\n    _this.childRef = React.createRef();\n    var id = uniqueId(\"bp-dialog\");\n    _this.titleId = \"title-\".concat(id);\n    return _this;\n  }\n  Dialog.prototype.render = function () {\n    var _a;\n    var _b = this.props,\n      className = _b.className,\n      children = _b.children,\n      containerRef = _b.containerRef,\n      style = _b.style,\n      title = _b.title,\n      _c = _b.role,\n      role = _c === void 0 ? \"dialog\" : _c,\n      overlayProps = __rest(_b, [\"className\", \"children\", \"containerRef\", \"style\", \"title\", \"role\"]);\n    return React.createElement(Overlay2, __assign({}, overlayProps, {\n      className: Classes.OVERLAY_SCROLL_CONTAINER,\n      childRef: this.childRef,\n      hasBackdrop: true\n    }), React.createElement(\"div\", {\n      className: Classes.DIALOG_CONTAINER,\n      ref: mergeRefs(containerRef, this.childRef)\n    }, React.createElement(\"div\", {\n      className: classNames(Classes.DIALOG, className),\n      role: role,\n      \"aria-modal\": (_a = overlayProps.enforceFocus) !== null && _a !== void 0 ? _a : OVERLAY2_DEFAULT_PROPS.enforceFocus,\n      \"aria-labelledby\": this.props[\"aria-labelledby\"] || (title ? this.titleId : undefined),\n      \"aria-describedby\": this.props[\"aria-describedby\"],\n      style: style\n    }, this.maybeRenderHeader(), children)));\n  };\n  Dialog.prototype.validateProps = function (props) {\n    if (props.title == null) {\n      if (props.icon != null) {\n        console.warn(Errors.DIALOG_WARN_NO_HEADER_ICON);\n      }\n      if (props.isCloseButtonShown != null) {\n        console.warn(Errors.DIALOG_WARN_NO_HEADER_CLOSE_BUTTON);\n      }\n    }\n  };\n  Dialog.prototype.maybeRenderCloseButton = function () {\n    // show close button if prop is undefined or null\n    // this gives us a behavior as if the default value were `true`\n    if (this.props.isCloseButtonShown !== false) {\n      return React.createElement(Button, {\n        \"aria-label\": \"Close\",\n        className: Classes.DIALOG_CLOSE_BUTTON,\n        icon: React.createElement(SmallCross, {\n          size: IconSize.STANDARD\n        }),\n        onClick: this.props.onClose,\n        variant: \"minimal\"\n      });\n    } else {\n      return undefined;\n    }\n  };\n  Dialog.prototype.maybeRenderHeader = function () {\n    var _a = this.props,\n      icon = _a.icon,\n      title = _a.title;\n    if (title == null) {\n      return undefined;\n    }\n    return React.createElement(\"div\", {\n      className: Classes.DIALOG_HEADER\n    }, React.createElement(Icon, {\n      icon: icon,\n      size: IconSize.STANDARD,\n      \"aria-hidden\": true,\n      tabIndex: -1\n    }), React.createElement(H6, {\n      id: this.titleId\n    }, title), this.maybeRenderCloseButton());\n  };\n  Dialog.defaultProps = {\n    canOutsideClickClose: true,\n    isOpen: false\n  };\n  Dialog.displayName = \"\".concat(DISPLAYNAME_PREFIX, \".Dialog\");\n  return Dialog;\n}(AbstractPureComponent);\nexport { Dialog };","map":{"version":3,"names":["classNames","React","IconSize","SmallCross","AbstractPureComponent","Classes","DISPLAYNAME_PREFIX","mergeRefs","Errors","uniqueId","Button","H6","Icon","Overlay2","OVERLAY2_DEFAULT_PROPS","Dialog","_super","__extends","props","_this","call","childRef","createRef","id","titleId","concat","prototype","render","_b","className","children","containerRef","style","title","_c","role","overlayProps","__rest","createElement","__assign","OVERLAY_SCROLL_CONTAINER","hasBackdrop","DIALOG_CONTAINER","ref","DIALOG","_a","enforceFocus","undefined","maybeRenderHeader","validateProps","icon","console","warn","DIALOG_WARN_NO_HEADER_ICON","isCloseButtonShown","DIALOG_WARN_NO_HEADER_CLOSE_BUTTON","maybeRenderCloseButton","DIALOG_CLOSE_BUTTON","size","STANDARD","onClick","onClose","variant","DIALOG_HEADER","tabIndex","defaultProps","canOutsideClickClose","isOpen","displayName"],"sources":["C:\\Users\\deepa\\Deepak\\Working-File\\React-Project\\new-working-file\\React-Project\\my-app\\node_modules\\@blueprintjs\\core\\src\\components\\dialog\\dialog.tsx"],"sourcesContent":["/*\n * Copyright 2015 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport classNames from \"classnames\";\nimport * as React from \"react\";\n\nimport { type IconName, IconSize, SmallCross } from \"@blueprintjs/icons\";\n\nimport {\n    AbstractPureComponent,\n    Classes,\n    DISPLAYNAME_PREFIX,\n    type MaybeElement,\n    mergeRefs,\n    type Props,\n} from \"../../common\";\nimport * as Errors from \"../../common/errors\";\nimport { uniqueId } from \"../../common/utils\";\nimport { Button } from \"../button/buttons\";\nimport { H6 } from \"../html/html\";\nimport { Icon } from \"../icon/icon\";\nimport type { BackdropProps, OverlayableProps } from \"../overlay/overlayProps\";\nimport { Overlay2, OVERLAY2_DEFAULT_PROPS } from \"../overlay2/overlay2\";\n\nexport interface DialogProps extends OverlayableProps, BackdropProps, Props {\n    /** Dialog contents. */\n    children?: React.ReactNode;\n\n    /**\n     * Toggles the visibility of the overlay and its children.\n     * This prop is required because the component is controlled.\n     */\n    isOpen: boolean;\n\n    /**\n     * Dialog always has a backdrop so this prop cannot be overriden.\n     */\n    hasBackdrop?: never;\n\n    /**\n     * Name of a Blueprint UI icon (or an icon element) to render in the\n     * dialog's header. Note that the header will only be rendered if `title` is\n     * provided.\n     */\n    icon?: IconName | MaybeElement;\n\n    /**\n     * Whether to show the close button in the dialog's header.\n     * Note that the header will only be rendered if `title` is provided.\n     *\n     * @default true\n     */\n    isCloseButtonShown?: boolean;\n\n    /**\n     * @default \"dialog\"\n     */\n    role?: Extract<React.AriaRole, \"dialog\" | \"alertdialog\">;\n\n    /**\n     * CSS styles to apply to the dialog.\n     *\n     * @default {}\n     */\n    style?: React.CSSProperties;\n\n    /**\n     * Title of the dialog. If provided, an element with `Classes.DIALOG_HEADER`\n     * will be rendered inside the dialog before any children elements.\n     */\n    title?: React.ReactNode;\n\n    /**\n     * Name of the transition for internal `CSSTransition`. Providing your own\n     * name here will require defining new CSS transition properties.\n     */\n    transitionName?: string;\n\n    /**\n     * Ref attached to the `Classes.DIALOG_CONTAINER` element.\n     */\n    containerRef?: React.Ref<HTMLDivElement>;\n\n    /**\n     * ID of the element that contains title or label text for this dialog.\n     *\n     * By default, if the `title` prop is supplied, this component will generate\n     * a unique ID for the `<H5>` title element and use that ID here.\n     */\n    \"aria-labelledby\"?: string;\n\n    /**\n     * ID of an element that contains description text inside this dialog.\n     */\n    \"aria-describedby\"?: string;\n}\n\n/**\n * Dialog component.\n *\n * @see https://blueprintjs.com/docs/#core/components/dialog\n */\nexport class Dialog extends AbstractPureComponent<DialogProps> {\n    public static defaultProps: DialogProps = {\n        canOutsideClickClose: true,\n        isOpen: false,\n    };\n\n    private childRef = React.createRef<HTMLDivElement>();\n\n    private titleId: string;\n\n    public static displayName = `${DISPLAYNAME_PREFIX}.Dialog`;\n\n    public constructor(props: DialogProps) {\n        super(props);\n\n        const id = uniqueId(\"bp-dialog\");\n        this.titleId = `title-${id}`;\n    }\n\n    public render() {\n        const { className, children, containerRef, style, title, role = \"dialog\", ...overlayProps } = this.props;\n\n        return (\n            <Overlay2\n                {...overlayProps}\n                className={Classes.OVERLAY_SCROLL_CONTAINER}\n                childRef={this.childRef}\n                hasBackdrop={true}\n            >\n                <div className={Classes.DIALOG_CONTAINER} ref={mergeRefs(containerRef, this.childRef)}>\n                    <div\n                        className={classNames(Classes.DIALOG, className)}\n                        role={role}\n                        aria-modal={overlayProps.enforceFocus ?? OVERLAY2_DEFAULT_PROPS.enforceFocus}\n                        aria-labelledby={this.props[\"aria-labelledby\"] || (title ? this.titleId : undefined)}\n                        aria-describedby={this.props[\"aria-describedby\"]}\n                        style={style}\n                    >\n                        {this.maybeRenderHeader()}\n                        {children}\n                    </div>\n                </div>\n            </Overlay2>\n        );\n    }\n\n    protected validateProps(props: DialogProps) {\n        if (props.title == null) {\n            if (props.icon != null) {\n                console.warn(Errors.DIALOG_WARN_NO_HEADER_ICON);\n            }\n            if (props.isCloseButtonShown != null) {\n                console.warn(Errors.DIALOG_WARN_NO_HEADER_CLOSE_BUTTON);\n            }\n        }\n    }\n\n    private maybeRenderCloseButton() {\n        // show close button if prop is undefined or null\n        // this gives us a behavior as if the default value were `true`\n        if (this.props.isCloseButtonShown !== false) {\n            return (\n                <Button\n                    aria-label=\"Close\"\n                    className={Classes.DIALOG_CLOSE_BUTTON}\n                    icon={<SmallCross size={IconSize.STANDARD} />}\n                    onClick={this.props.onClose}\n                    variant=\"minimal\"\n                />\n            );\n        } else {\n            return undefined;\n        }\n    }\n\n    private maybeRenderHeader() {\n        const { icon, title } = this.props;\n        if (title == null) {\n            return undefined;\n        }\n        return (\n            <div className={Classes.DIALOG_HEADER}>\n                <Icon icon={icon} size={IconSize.STANDARD} aria-hidden={true} tabIndex={-1} />\n                <H6 id={this.titleId}>{title}</H6>\n                {this.maybeRenderCloseButton()}\n            </div>\n        );\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}