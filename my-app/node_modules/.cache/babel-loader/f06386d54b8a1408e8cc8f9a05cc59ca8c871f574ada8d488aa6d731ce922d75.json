{"ast":null,"code":"/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as React from \"react\";\n/**\n * Keep track of a control's checked state in both controlled and uncontrolled modes\n */\nexport function useCheckedControl(props) {\n  var _a;\n  var _b = React.useState(function () {\n      var _a;\n      return (_a = props.defaultChecked) !== null && _a !== void 0 ? _a : false;\n    }),\n    checkedStateForUncontrolledMode = _b[0],\n    setChecked = _b[1];\n  // If the checked prop is passed, this input is in \"controlled mode\" and\n  // should always reflect the value of the controlled prop. Any internal\n  // state tracked for \"uncontrolled mode\" should be ignored.\n  var checked = (_a = props.checked) !== null && _a !== void 0 ? _a : checkedStateForUncontrolledMode;\n  var onChange = React.useCallback(function (e) {\n    var _a;\n    setChecked(function (c) {\n      return !c;\n    });\n    (_a = props.onChange) === null || _a === void 0 ? void 0 : _a.call(props, e);\n  },\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [props.onChange]);\n  return {\n    checked: checked,\n    onChange: onChange\n  };\n}","map":{"version":3,"names":["React","useCheckedControl","props","_b","useState","_a","defaultChecked","checkedStateForUncontrolledMode","setChecked","checked","onChange","useCallback","e","c","call"],"sources":["C:\\Users\\deepa\\Deepak\\Working-File\\React-Project\\new-working-file\\React-Project\\my-app\\node_modules\\@blueprintjs\\core\\src\\components\\control-card\\useCheckedControl.ts"],"sourcesContent":["/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\n\nimport type { CheckedControlProps } from \"../forms/controlProps\";\n\n/**\n * Keep track of a control's checked state in both controlled and uncontrolled modes\n */\nexport function useCheckedControl(props: CheckedControlProps) {\n    const [checkedStateForUncontrolledMode, setChecked] = React.useState(() => props.defaultChecked ?? false);\n\n    // If the checked prop is passed, this input is in \"controlled mode\" and\n    // should always reflect the value of the controlled prop. Any internal\n    // state tracked for \"uncontrolled mode\" should be ignored.\n    const checked = props.checked ?? checkedStateForUncontrolledMode;\n\n    const onChange = React.useCallback<React.ChangeEventHandler<HTMLInputElement>>(\n        e => {\n            setChecked(c => !c);\n            props.onChange?.(e);\n        },\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [props.onChange],\n    );\n    return { checked, onChange };\n}\n"],"mappings":"AAAA;;;;;;;;;;;;;;;AAgBA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAI9B;;;AAGA,OAAM,SAAUC,iBAAiBA,CAACC,KAA0B;;EAClD,IAAAC,EAAA,GAAgDH,KAAK,CAACI,QAAQ,CAAC;MAAA,IAAAC,EAAA;MAAM,QAAAA,EAAA,GAAAH,KAAK,CAACI,cAAc,cAAAD,EAAA,cAAAA,EAAA,GAAI,KAAK;IAAA,EAAC;IAAlGE,+BAA+B,GAAAJ,EAAA;IAAEK,UAAU,GAAAL,EAAA,GAAuD;EAEzG;EACA;EACA;EACA,IAAMM,OAAO,GAAG,CAAAJ,EAAA,GAAAH,KAAK,CAACO,OAAO,cAAAJ,EAAA,cAAAA,EAAA,GAAIE,+BAA+B;EAEhE,IAAMG,QAAQ,GAAGV,KAAK,CAACW,WAAW,CAC9B,UAAAC,CAAC;;IACGJ,UAAU,CAAC,UAAAK,CAAC;MAAI,QAACA,CAAC;IAAF,CAAE,CAAC;IACnB,CAAAR,EAAA,GAAAH,KAAK,CAACQ,QAAQ,cAAAL,EAAA,uBAAAA,EAAA,CAAAS,IAAA,CAAAZ,KAAA,EAAGU,CAAC,CAAC;EACvB,CAAC;EACD;EACA,CAACV,KAAK,CAACQ,QAAQ,CAAC,CACnB;EACD,OAAO;IAAED,OAAO,EAAAA,OAAA;IAAEC,QAAQ,EAAAA;EAAA,CAAE;AAChC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}