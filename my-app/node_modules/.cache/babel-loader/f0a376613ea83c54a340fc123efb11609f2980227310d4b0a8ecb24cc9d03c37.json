{"ast":null,"code":"/*\n * Copyright 2015 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __extends, __rest } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { AbstractPureComponent, Classes, Intent } from \"../../common\";\nimport { DISPLAYNAME_PREFIX, removeNonHTMLProps } from \"../../common/props\";\nimport { Icon } from \"../icon/icon\";\nimport { Tag } from \"../tag/tag\";\nvar TabTitle = /** @class */function (_super) {\n  __extends(TabTitle, _super);\n  function TabTitle() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.handleClick = function (e) {\n      return _this.props.onClick(_this.props.id, e);\n    };\n    return _this;\n  }\n  TabTitle.prototype.render = function () {\n    var _a = this.props,\n      className = _a.className,\n      children = _a.children,\n      disabled = _a.disabled,\n      id = _a.id,\n      parentId = _a.parentId,\n      selected = _a.selected,\n      title = _a.title,\n      icon = _a.icon,\n      tagContent = _a.tagContent,\n      tagProps = _a.tagProps,\n      htmlProps = __rest(_a, [\"className\", \"children\", \"disabled\", \"id\", \"parentId\", \"selected\", \"title\", \"icon\", \"tagContent\", \"tagProps\"]);\n    var intent = selected ? Intent.PRIMARY : Intent.NONE;\n    var _b = generateTabIds(parentId, id),\n      tabPanelId = _b.tabPanelId,\n      tabTitleId = _b.tabTitleId;\n    return React.createElement(\"div\", __assign({}, removeNonHTMLProps(htmlProps), {\n      \"aria-controls\": tabPanelId,\n      \"aria-disabled\": disabled,\n      \"aria-expanded\": selected,\n      \"aria-selected\": selected,\n      className: classNames(Classes.TAB, className),\n      \"data-tab-id\": id,\n      id: tabTitleId,\n      onClick: disabled ? undefined : this.handleClick,\n      role: \"tab\",\n      tabIndex: disabled ? undefined : selected ? 0 : -1\n    }), icon != null && React.createElement(Icon, {\n      icon: icon,\n      intent: intent,\n      className: Classes.TAB_ICON\n    }), title, children, tagContent != null && React.createElement(Tag, __assign({\n      minimal: true,\n      intent: intent\n    }, tagProps, {\n      className: classNames(Classes.TAB_TAG, tagProps === null || tagProps === void 0 ? void 0 : tagProps.className)\n    }), tagContent));\n  };\n  TabTitle.displayName = \"\".concat(DISPLAYNAME_PREFIX, \".TabTitle\");\n  return TabTitle;\n}(AbstractPureComponent);\nexport { TabTitle };\nexport function generateTabIds(parentId, tabId) {\n  return {\n    tabPanelId: \"\".concat(Classes.TAB_PANEL, \"_\").concat(parentId, \"_\").concat(tabId),\n    tabTitleId: \"\".concat(Classes.TAB, \"-title_\").concat(parentId, \"_\").concat(tabId)\n  };\n}","map":{"version":3,"names":["classNames","React","AbstractPureComponent","Classes","Intent","DISPLAYNAME_PREFIX","removeNonHTMLProps","Icon","Tag","TabTitle","_super","__extends","_this","handleClick","e","props","onClick","id","prototype","render","_a","className","children","disabled","parentId","selected","title","icon","tagContent","tagProps","htmlProps","__rest","intent","PRIMARY","NONE","_b","generateTabIds","tabPanelId","tabTitleId","createElement","__assign","TAB","undefined","role","tabIndex","TAB_ICON","minimal","TAB_TAG","displayName","concat","tabId","TAB_PANEL"],"sources":["C:\\Users\\deepa\\Deepak\\Working-File\\React-Project\\new-working-file\\React-Project\\my-app\\node_modules\\@blueprintjs\\core\\src\\components\\tabs\\tabTitle.tsx"],"sourcesContent":["/*\n * Copyright 2015 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport classNames from \"classnames\";\nimport * as React from \"react\";\n\nimport { AbstractPureComponent, Classes, Intent } from \"../../common\";\nimport { DISPLAYNAME_PREFIX, removeNonHTMLProps } from \"../../common/props\";\nimport { Icon } from \"../icon/icon\";\nimport { Tag } from \"../tag/tag\";\n\nimport type { TabId, TabIdProps, TabProps } from \"./tab\";\n\nexport interface TabTitleProps extends TabProps {\n    /** Optional contents. */\n    children?: React.ReactNode;\n\n    /** Handler invoked when this tab is clicked. */\n    onClick: (id: TabId, event: React.MouseEvent<HTMLElement>) => void;\n\n    /** ID of the parent `Tabs` to which this tab belongs. Used to generate ID for ARIA attributes. */\n    parentId: TabId;\n\n    /** Whether the tab is currently selected. */\n    selected: boolean;\n}\n\nexport class TabTitle extends AbstractPureComponent<TabTitleProps> {\n    public static displayName = `${DISPLAYNAME_PREFIX}.TabTitle`;\n\n    public render() {\n        const {\n            className,\n            children,\n            disabled,\n            id,\n            parentId,\n            selected,\n            title,\n            icon,\n            tagContent,\n            tagProps,\n            ...htmlProps\n        } = this.props;\n\n        const intent = selected ? Intent.PRIMARY : Intent.NONE;\n        const { tabPanelId, tabTitleId } = generateTabIds(parentId, id);\n\n        return (\n            <div\n                {...removeNonHTMLProps(htmlProps)}\n                aria-controls={tabPanelId}\n                aria-disabled={disabled}\n                aria-expanded={selected}\n                aria-selected={selected}\n                className={classNames(Classes.TAB, className)}\n                data-tab-id={id}\n                id={tabTitleId}\n                onClick={disabled ? undefined : this.handleClick}\n                role=\"tab\"\n                tabIndex={disabled ? undefined : selected ? 0 : -1}\n            >\n                {icon != null && <Icon icon={icon} intent={intent} className={Classes.TAB_ICON} />}\n                {title}\n                {children}\n                {tagContent != null && (\n                    <Tag\n                        minimal={true}\n                        intent={intent}\n                        {...tagProps}\n                        className={classNames(Classes.TAB_TAG, tagProps?.className)}\n                    >\n                        {tagContent}\n                    </Tag>\n                )}\n            </div>\n        );\n    }\n\n    private handleClick = (e: React.MouseEvent<HTMLElement>) => this.props.onClick(this.props.id, e);\n}\n\nexport function generateTabIds(parentId: TabId, tabId: TabId) {\n    return {\n        tabPanelId: `${Classes.TAB_PANEL}_${parentId}_${tabId}`,\n        tabTitleId: `${Classes.TAB}-title_${parentId}_${tabId}`,\n    } satisfies TabIdProps;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}