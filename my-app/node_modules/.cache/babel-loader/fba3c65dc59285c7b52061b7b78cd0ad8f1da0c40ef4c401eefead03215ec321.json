{"ast":null,"code":"/*\n * Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __rest } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { DIVIDER } from \"../../common/classes\";\nimport { DISPLAYNAME_PREFIX } from \"../../common/props\";\n// this component is simple enough that tests would be purely tautological.\n/* istanbul ignore next */\n/**\n * Divider component.\n *\n * @see https://blueprintjs.com/docs/#core/components/divider\n */\nexport var Divider = function (_a) {\n  var className = _a.className,\n    _b = _a.tagName,\n    tagName = _b === void 0 ? \"div\" : _b,\n    htmlProps = __rest(_a, [\"className\", \"tagName\"]);\n  var classes = classNames(DIVIDER, className);\n  return React.createElement(tagName, __assign(__assign({}, htmlProps), {\n    className: classes\n  }));\n};\nDivider.displayName = \"\".concat(DISPLAYNAME_PREFIX, \".Divider\");","map":{"version":3,"names":["classNames","React","DIVIDER","DISPLAYNAME_PREFIX","Divider","_a","className","_b","tagName","htmlProps","__rest","classes","createElement","__assign","displayName","concat"],"sources":["C:\\Users\\deepa\\Deepak\\Working-File\\React-Project\\new-working-file\\React-Project\\my-app\\node_modules\\@blueprintjs\\core\\src\\components\\divider\\divider.tsx"],"sourcesContent":["/*\n * Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport classNames from \"classnames\";\nimport * as React from \"react\";\n\nimport { DIVIDER } from \"../../common/classes\";\nimport { DISPLAYNAME_PREFIX, type Props } from \"../../common/props\";\n\nexport interface DividerProps extends Props, React.HTMLAttributes<HTMLElement> {\n    /**\n     * HTML tag to use for element.\n     *\n     * @default \"div\"\n     */\n    tagName?: keyof React.JSX.IntrinsicElements;\n}\n\n// this component is simple enough that tests would be purely tautological.\n/* istanbul ignore next */\n\n/**\n * Divider component.\n *\n * @see https://blueprintjs.com/docs/#core/components/divider\n */\nexport const Divider: React.FC<DividerProps> = ({ className, tagName = \"div\", ...htmlProps }) => {\n    const classes = classNames(DIVIDER, className);\n    return React.createElement(tagName, {\n        ...htmlProps,\n        className: classes,\n    });\n};\n\nDivider.displayName = `${DISPLAYNAME_PREFIX}.Divider`;\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAgBA,OAAOA,UAAU,MAAM,YAAY;AACnC,OAAO,KAAKC,KAAK,MAAM,OAAO;AAE9B,SAASC,OAAO,QAAQ,sBAAsB;AAC9C,SAASC,kBAAkB,QAAoB,oBAAoB;AAWnE;AACA;AAEA;;;;;AAKA,OAAO,IAAMC,OAAO,GAA2B,SAAAA,CAACC,EAA4C;EAA1C,IAAAC,SAAS,GAAAD,EAAA,CAAAC,SAAA;IAAEC,EAAA,GAAAF,EAAA,CAAAG,OAAe;IAAfA,OAAO,GAAAD,EAAA,cAAG,KAAK,GAAAA,EAAA;IAAKE,SAAS,GAAAC,MAAA,CAAAL,EAAA,EAA1C,wBAA4C,CAAF;EACtF,IAAMM,OAAO,GAAGX,UAAU,CAACE,OAAO,EAAEI,SAAS,CAAC;EAC9C,OAAOL,KAAK,CAACW,aAAa,CAACJ,OAAO,EAAAK,QAAA,CAAAA,QAAA,KAC3BJ,SAAS;IACZH,SAAS,EAAEK;EAAO,GACpB;AACN,CAAC;AAEDP,OAAO,CAACU,WAAW,GAAG,GAAAC,MAAA,CAAGZ,kBAAkB,aAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}